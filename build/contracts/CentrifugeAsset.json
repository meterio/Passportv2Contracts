{
  "contractName": "CentrifugeAsset",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "bytes32",
          "name": "asset",
          "type": "bytes32"
        }
      ],
      "name": "AssetStored",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "_assetsStored",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "asset",
          "type": "bytes32"
        }
      ],
      "name": "store",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"bytes32\",\"name\":\"asset\",\"type\":\"bytes32\"}],\"name\":\"AssetStored\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_assetsStored\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"asset\",\"type\":\"bytes32\"}],\"name\":\"store\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"store(bytes32)\":{\"params\":{\"asset\":\"Hash of asset deposited on Centrifuge chain.\"}}},\"title\":\"Represents a bridged Centrifuge asset.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"store(bytes32)\":{\"notice\":\"Marks {asset} as stored.{asset} must not have already been stored.Emits {AssetStored} event.\"}},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/CentrifugeAsset.sol\":\"CentrifugeAsset\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/CentrifugeAsset.sol\":{\"keccak256\":\"0x5137015c96ee26e75c217ede70e8766d67d8d3aec9fa6a186af4ff344cdcb4d1\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://eb6c71730c2eb6061cb838e931c4e96a23c14784aa6640f50b0c0d560799ea18\",\"dweb:/ipfs/QmaDDHe9pf7pGyuVWxtnSHNUpx6kjVrFLzP5EMXGcs5za2\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b5061017c806100206000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063654cf88c1461003b57806396add60014610050575b600080fd5b61004e61004936600461012d565b610087565b005b61007361005e36600461012d565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60008181526020819052604090205460ff16156100ea5760405162461bcd60e51b815260206004820152601760248201527f617373657420697320616c72656164792073746f726564000000000000000000604482015260640160405180910390fd5b600081815260208190526040808220805460ff191660011790555182917f08ae553713effae7116be03743b167b8b803449ee8fb912c2ec43dc2c824f53591a250565b60006020828403121561013f57600080fd5b503591905056fea2646970667358221220462ea3e7dc3308e0a1f0c58144d1cdf6d7e720f4964017a031a2b07bcf2aaa0a64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100365760003560e01c8063654cf88c1461003b57806396add60014610050575b600080fd5b61004e61004936600461012d565b610087565b005b61007361005e36600461012d565b60006020819052908152604090205460ff1681565b604051901515815260200160405180910390f35b60008181526020819052604090205460ff16156100ea5760405162461bcd60e51b815260206004820152601760248201527f617373657420697320616c72656164792073746f726564000000000000000000604482015260640160405180910390fd5b600081815260208190526040808220805460ff191660011790555182917f08ae553713effae7116be03743b167b8b803449ee8fb912c2ec43dc2c824f53591a250565b60006020828403121561013f57600080fd5b503591905056fea2646970667358221220462ea3e7dc3308e0a1f0c58144d1cdf6d7e720f4964017a031a2b07bcf2aaa0a64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:740:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "84:110:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "130:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "139:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "142:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "132:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "132:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "132:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "105:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "114:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "101:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "101:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "126:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "97:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "97:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "94:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "155:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "178:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "165:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "165:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "155:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "50:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "61:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "73:6:65",
                "type": ""
              }
            ],
            "src": "14:180:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "294:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "304:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "316:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "327:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "312:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "312:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "304:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "346:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "371:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "364:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "364:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "357:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "357:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "339:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "339:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "339:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "263:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "274:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "285:4:65",
                "type": ""
              }
            ],
            "src": "199:187:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "565:173:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "582:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "593:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "575:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "575:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "575:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "616:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "627:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "612:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "612:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "632:2:65",
                        "type": "",
                        "value": "23"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "605:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "605:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "605:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "655:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "666:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "651:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "651:18:65"
                      },
                      {
                        "hexValue": "617373657420697320616c72656164792073746f726564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "671:25:65",
                        "type": "",
                        "value": "asset is already stored"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "644:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "644:53:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "644:53:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "706:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "718:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "729:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "714:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "714:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "706:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_bc642c1798a3fc3c118745685dd76c066cfa68ac78864d110f41537703db5089__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "542:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "556:4:65",
                "type": ""
              }
            ],
            "src": "391:347:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_encode_tuple_t_stringliteral_bc642c1798a3fc3c118745685dd76c066cfa68ac78864d110f41537703db5089__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 23)\n        mstore(add(headStart, 64), \"asset is already stored\")\n        tail := add(headStart, 96)\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "190:508:35:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "190:508:35:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;520:176;;;;;;:::i;:::-;;:::i;:::-;;219:46;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;364:14:65;;357:22;339:41;;327:2;312:18;219:46:35;;;;;;;520:176;576:13;:20;;;;;;;;;;;;;575:21;567:57;;;;-1:-1:-1;;;567:57:35;;593:2:65;567:57:35;;;575:21:65;632:2;612:18;;;605:30;671:25;651:18;;;644:53;714:18;;567:57:35;;;;;;;;633:13;:20;;;;;;;;;;;:27;;-1:-1:-1;;633:27:35;656:4;633:27;;;673:18;647:5;;673:18;;;520:176;:::o;14:180:65:-;73:6;126:2;114:9;105:7;101:23;97:32;94:52;;;142:1;139;132:12;94:52;-1:-1:-1;165:23:65;;14:180;-1:-1:-1;14:180:65:o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\npragma experimental ABIEncoderV2;\n\n/**\n    @title Represents a bridged Centrifuge asset.\n    @author ChainSafe Systems.\n */\ncontract CentrifugeAsset {\n  mapping (bytes32 => bool) public _assetsStored;\n\n  event AssetStored(bytes32 indexed asset);\n\n  /**\n    @notice Marks {asset} as stored.\n    @param asset Hash of asset deposited on Centrifuge chain.\n    @notice {asset} must not have already been stored.\n    @notice Emits {AssetStored} event.\n   */\n  function store(bytes32 asset) external {\n      require(!_assetsStored[asset], \"asset is already stored\");\n\n      _assetsStored[asset] = true;\n      emit AssetStored(asset);\n  }\n}",
  "sourcePath": "/Users/cuimiandashi/Documents/GitHub/chainbridge-solidity-v2.0.0-eth/contracts/CentrifugeAsset.sol",
  "ast": {
    "absolutePath": "project:/contracts/CentrifugeAsset.sol",
    "exportedSymbols": {
      "CentrifugeAsset": [
        7157
      ]
    },
    "id": 7158,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 7121,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:35"
      },
      {
        "id": 7122,
        "literals": [
          "experimental",
          "ABIEncoderV2"
        ],
        "nodeType": "PragmaDirective",
        "src": "66:33:35"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "CentrifugeAsset",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 7123,
          "nodeType": "StructuredDocumentation",
          "src": "101:88:35",
          "text": "@title Represents a bridged Centrifuge asset.\n@author ChainSafe Systems."
        },
        "fullyImplemented": true,
        "id": 7157,
        "linearizedBaseContracts": [
          7157
        ],
        "name": "CentrifugeAsset",
        "nameLocation": "199:15:35",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "96add600",
            "id": 7127,
            "mutability": "mutable",
            "name": "_assetsStored",
            "nameLocation": "252:13:35",
            "nodeType": "VariableDeclaration",
            "scope": 7157,
            "src": "219:46:35",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
              "typeString": "mapping(bytes32 => bool)"
            },
            "typeName": {
              "id": 7126,
              "keyType": {
                "id": 7124,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "228:7:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "219:25:35",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                "typeString": "mapping(bytes32 => bool)"
              },
              "valueType": {
                "id": 7125,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "239:4:35",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "anonymous": false,
            "id": 7131,
            "name": "AssetStored",
            "nameLocation": "276:11:35",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 7130,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7129,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "304:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7131,
                  "src": "288:21:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7128,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "288:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "287:23:35"
            },
            "src": "270:41:35"
          },
          {
            "body": {
              "id": 7155,
              "nodeType": "Block",
              "src": "559:137:35",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 7141,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "575:21:35",
                        "subExpression": {
                          "baseExpression": {
                            "id": 7138,
                            "name": "_assetsStored",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7127,
                            "src": "576:13:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                              "typeString": "mapping(bytes32 => bool)"
                            }
                          },
                          "id": 7140,
                          "indexExpression": {
                            "id": 7139,
                            "name": "asset",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 7134,
                            "src": "590:5:35",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "576:20:35",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "617373657420697320616c72656164792073746f726564",
                        "id": 7142,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "598:25:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_bc642c1798a3fc3c118745685dd76c066cfa68ac78864d110f41537703db5089",
                          "typeString": "literal_string \"asset is already stored\""
                        },
                        "value": "asset is already stored"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_bc642c1798a3fc3c118745685dd76c066cfa68ac78864d110f41537703db5089",
                          "typeString": "literal_string \"asset is already stored\""
                        }
                      ],
                      "id": 7137,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "567:7:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 7143,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "567:57:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7144,
                  "nodeType": "ExpressionStatement",
                  "src": "567:57:35"
                },
                {
                  "expression": {
                    "id": 7149,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 7145,
                        "name": "_assetsStored",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7127,
                        "src": "633:13:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 7147,
                      "indexExpression": {
                        "id": 7146,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7134,
                        "src": "647:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "633:20:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 7148,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "656:4:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "633:27:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 7150,
                  "nodeType": "ExpressionStatement",
                  "src": "633:27:35"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 7152,
                        "name": "asset",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 7134,
                        "src": "685:5:35",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 7151,
                      "name": "AssetStored",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 7131,
                      "src": "673:11:35",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_bytes32_$returns$__$",
                        "typeString": "function (bytes32)"
                      }
                    },
                    "id": 7153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "673:18:35",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 7154,
                  "nodeType": "EmitStatement",
                  "src": "668:23:35"
                }
              ]
            },
            "documentation": {
              "id": 7132,
              "nodeType": "StructuredDocumentation",
              "src": "315:202:35",
              "text": "@notice Marks {asset} as stored.\n@param asset Hash of asset deposited on Centrifuge chain.\n@notice {asset} must not have already been stored.\n@notice Emits {AssetStored} event."
            },
            "functionSelector": "654cf88c",
            "id": 7156,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "store",
            "nameLocation": "529:5:35",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 7135,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 7134,
                  "mutability": "mutable",
                  "name": "asset",
                  "nameLocation": "543:5:35",
                  "nodeType": "VariableDeclaration",
                  "scope": 7156,
                  "src": "535:13:35",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 7133,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "535:7:35",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "534:15:35"
            },
            "returnParameters": {
              "id": 7136,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "559:0:35"
            },
            "scope": 7157,
            "src": "520:176:35",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 7158,
        "src": "190:508:35",
        "usedErrors": []
      }
    ],
    "src": "42:656:35"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-05T16:30:50.796Z",
  "devdoc": {
    "author": "ChainSafe Systems.",
    "kind": "dev",
    "methods": {
      "store(bytes32)": {
        "params": {
          "asset": "Hash of asset deposited on Centrifuge chain."
        }
      }
    },
    "title": "Represents a bridged Centrifuge asset.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "store(bytes32)": {
        "notice": "Marks {asset} as stored.{asset} must not have already been stored.Emits {AssetStored} event."
      }
    },
    "version": 1
  }
}