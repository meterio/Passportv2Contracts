{
  "contractName": "Pausable",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract in unpaused state.\"},\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/Pausable.sol\":\"Pausable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/utils/Pausable.sol\":{\"keccak256\":\"0x81cb7720cfff2db33fccc8076253b9f6bf5ae2b21d269879ee6a29dde35cc160\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://627e3a22a8ab3fc07177d75f8238ef788a851da8587a8fb263c89a9b4caa287d\",\"dweb:/ipfs/QmYjeUvcmVTB2QTmxvnxYjBYfMBtHAdVhGktKNNQDZ6m7u\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b506000805460ff19169055607d806100286000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c975abb14602d575b600080fd5b60005460ff16604051901515815260200160405180910390f3fea264697066735822122081a9324393d83779b66c5fcea996c234d5588f5076dc65a9920e7c7629487b1664736f6c634300080b0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635c975abb14602d575b600080fd5b60005460ff16604051901515815260200160405180910390f3fea264697066735822122081a9324393d83779b66c5fcea996c234d5588f5076dc65a9920e7c7629487b1664736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:203:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:65",
                "type": ""
              }
            ],
            "src": "14:187:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "388:1891:62:-:0;;;738:47;;;;;;;;;-1:-1:-1;773:5:62;763:15;;-1:-1:-1;;763:15:62;;;388:1891;;;;;;",
  "deployedSourceMap": "388:1891:62:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;880:76;919:4;942:7;;;880:76;;179:14:65;;172:22;154:41;;142:2;127:18;880:76:62;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.11;\n\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This is a stripped down version of Open zeppelin's Pausable contract.\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\n *\n */\ncontract Pausable {\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    constructor () {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenNotPaused() {\n        _whenNotPaused();\n        _;\n    }\n\n    function _whenNotPaused() private view {\n        require(!_paused, \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenPaused() {\n        _whenPaused();\n        _;\n    }\n\n    function _whenPaused() private view {\n        require(_paused, \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     * @param sender Address which executes pause.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause(address sender) internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(sender);\n    }\n\n    /**\n     * @dev Returns to normal state.\n     * @param sender Address which executes unpause.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause(address sender) internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(sender);\n    }\n}",
  "sourcePath": "/Users/cuimiandashi/Documents/GitHub/chainbridge-solidity-v2.0.0-eth/contracts/utils/Pausable.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/Pausable.sol",
    "exportedSymbols": {
      "Pausable": [
        12130
      ]
    },
    "id": 12131,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 12029,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:62"
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "Pausable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 12030,
          "nodeType": "StructuredDocumentation",
          "src": "59:328:62",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This is a stripped down version of Open zeppelin's Pausable contract.\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol"
        },
        "fullyImplemented": true,
        "id": 12130,
        "linearizedBaseContracts": [
          12130
        ],
        "name": "Pausable",
        "nameLocation": "397:8:62",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 12031,
              "nodeType": "StructuredDocumentation",
              "src": "412:73:62",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "id": 12035,
            "name": "Paused",
            "nameLocation": "496:6:62",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12034,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12033,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "511:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12035,
                  "src": "503:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12032,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "503:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "502:17:62"
            },
            "src": "490:30:62"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 12036,
              "nodeType": "StructuredDocumentation",
              "src": "526:70:62",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "id": 12040,
            "name": "Unpaused",
            "nameLocation": "607:8:62",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 12039,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12038,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "624:7:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12040,
                  "src": "616:15:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "616:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "615:17:62"
            },
            "src": "601:32:62"
          },
          {
            "constant": false,
            "id": 12042,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "652:7:62",
            "nodeType": "VariableDeclaration",
            "scope": 12130,
            "src": "639:20:62",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 12041,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "639:4:62",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 12050,
              "nodeType": "Block",
              "src": "753:32:62",
              "statements": [
                {
                  "expression": {
                    "id": 12048,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12046,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12042,
                      "src": "763:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 12047,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "773:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "763:15:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12049,
                  "nodeType": "ExpressionStatement",
                  "src": "763:15:62"
                }
              ]
            },
            "documentation": {
              "id": 12043,
              "nodeType": "StructuredDocumentation",
              "src": "666:67:62",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 12051,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "750:2:62"
            },
            "returnParameters": {
              "id": 12045,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "753:0:62"
            },
            "scope": 12130,
            "src": "738:47:62",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12059,
              "nodeType": "Block",
              "src": "925:31:62",
              "statements": [
                {
                  "expression": {
                    "id": 12057,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 12042,
                    "src": "942:7:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 12056,
                  "id": 12058,
                  "nodeType": "Return",
                  "src": "935:14:62"
                }
              ]
            },
            "documentation": {
              "id": 12052,
              "nodeType": "StructuredDocumentation",
              "src": "791:84:62",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 12060,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "889:6:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12053,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "895:2:62"
            },
            "returnParameters": {
              "id": 12056,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12055,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 12060,
                  "src": "919:4:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 12054,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "919:4:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "918:6:62"
            },
            "scope": 12130,
            "src": "880:76:62",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 12067,
              "nodeType": "Block",
              "src": "1167:44:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12063,
                      "name": "_whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12078,
                      "src": "1177:14:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 12064,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1177:16:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12065,
                  "nodeType": "ExpressionStatement",
                  "src": "1177:16:62"
                },
                {
                  "id": 12066,
                  "nodeType": "PlaceholderStatement",
                  "src": "1203:1:62"
                }
              ]
            },
            "documentation": {
              "id": 12061,
              "nodeType": "StructuredDocumentation",
              "src": "962:175:62",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 12068,
            "name": "whenNotPaused",
            "nameLocation": "1151:13:62",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12062,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1164:2:62"
            },
            "src": "1142:69:62",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12077,
              "nodeType": "Block",
              "src": "1256:54:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1274:8:62",
                        "subExpression": {
                          "id": 12072,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 12042,
                          "src": "1275:7:62",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 12074,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1284:18:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 12071,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1266:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1266:37:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12076,
                  "nodeType": "ExpressionStatement",
                  "src": "1266:37:62"
                }
              ]
            },
            "id": 12078,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_whenNotPaused",
            "nameLocation": "1226:14:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12069,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1240:2:62"
            },
            "returnParameters": {
              "id": 12070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1256:0:62"
            },
            "scope": 12130,
            "src": "1217:93:62",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12085,
              "nodeType": "Block",
              "src": "1518:41:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 12081,
                      "name": "_whenPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12095,
                      "src": "1528:11:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 12082,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1528:13:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12083,
                  "nodeType": "ExpressionStatement",
                  "src": "1528:13:62"
                },
                {
                  "id": 12084,
                  "nodeType": "PlaceholderStatement",
                  "src": "1551:1:62"
                }
              ]
            },
            "documentation": {
              "id": 12079,
              "nodeType": "StructuredDocumentation",
              "src": "1316:175:62",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 12086,
            "name": "whenPaused",
            "nameLocation": "1505:10:62",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 12080,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1515:2:62"
            },
            "src": "1496:63:62",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12094,
              "nodeType": "Block",
              "src": "1601:57:62",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 12090,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12042,
                        "src": "1619:7:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 12091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1628:22:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 12089,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1611:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 12092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1611:40:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12093,
                  "nodeType": "ExpressionStatement",
                  "src": "1611:40:62"
                }
              ]
            },
            "id": 12095,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_whenPaused",
            "nameLocation": "1574:11:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12087,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1585:2:62"
            },
            "returnParameters": {
              "id": 12088,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1601:0:62"
            },
            "scope": 12130,
            "src": "1565:93:62",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 12111,
              "nodeType": "Block",
              "src": "1907:60:62",
              "statements": [
                {
                  "expression": {
                    "id": 12105,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12103,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12042,
                      "src": "1917:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 12104,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1927:4:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "1917:14:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12106,
                  "nodeType": "ExpressionStatement",
                  "src": "1917:14:62"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12108,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12098,
                        "src": "1953:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12107,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12035,
                      "src": "1946:6:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12109,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1946:14:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12110,
                  "nodeType": "EmitStatement",
                  "src": "1941:19:62"
                }
              ]
            },
            "documentation": {
              "id": 12096,
              "nodeType": "StructuredDocumentation",
              "src": "1664:175:62",
              "text": " @dev Triggers stopped state.\n @param sender Address which executes pause.\n Requirements:\n - The contract must not be paused."
            },
            "id": 12112,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12101,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12100,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12068,
                  "src": "1893:13:62"
                },
                "nodeType": "ModifierInvocation",
                "src": "1893:13:62"
              }
            ],
            "name": "_pause",
            "nameLocation": "1853:6:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12099,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12098,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "1868:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12112,
                  "src": "1860:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1860:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1859:16:62"
            },
            "returnParameters": {
              "id": 12102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1907:0:62"
            },
            "scope": 12130,
            "src": "1844:123:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 12128,
              "nodeType": "Block",
              "src": "2214:63:62",
              "statements": [
                {
                  "expression": {
                    "id": 12122,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 12120,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12042,
                      "src": "2224:7:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 12121,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2234:5:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2224:15:62",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 12123,
                  "nodeType": "ExpressionStatement",
                  "src": "2224:15:62"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 12125,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 12115,
                        "src": "2263:6:62",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 12124,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 12040,
                      "src": "2254:8:62",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 12126,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2254:16:62",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 12127,
                  "nodeType": "EmitStatement",
                  "src": "2249:21:62"
                }
              ]
            },
            "documentation": {
              "id": 12113,
              "nodeType": "StructuredDocumentation",
              "src": "1973:174:62",
              "text": " @dev Returns to normal state.\n @param sender Address which executes unpause.\n Requirements:\n - The contract must be paused."
            },
            "id": 12129,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 12118,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 12117,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 12086,
                  "src": "2203:10:62"
                },
                "nodeType": "ModifierInvocation",
                "src": "2203:10:62"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2161:8:62",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 12116,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 12115,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2178:6:62",
                  "nodeType": "VariableDeclaration",
                  "scope": 12129,
                  "src": "2170:14:62",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 12114,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2170:7:62",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2169:16:62"
            },
            "returnParameters": {
              "id": 12119,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2214:0:62"
            },
            "scope": 12130,
            "src": "2152:125:62",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          }
        ],
        "scope": 12131,
        "src": "388:1891:62",
        "usedErrors": []
      }
    ],
    "src": "33:2246:62"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-05T16:30:50.713Z",
  "devdoc": {
    "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol",
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "constructor": {
        "details": "Initializes the contract in unpaused state."
      },
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}