/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC1155Handler } from "../ERC1155Handler";

export class ERC1155Handler__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    bridgeAddress: string,
    overrides?: Overrides
  ): Promise<ERC1155Handler> {
    return super.deploy(
      bridgeAddress,
      overrides || {}
    ) as Promise<ERC1155Handler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(bridgeAddress, overrides || {});
  }
  attach(address: string): ERC1155Handler {
    return super.attach(address) as ERC1155Handler;
  }
  connect(signer: Signer): ERC1155Handler__factory {
    return super.connect(signer) as ERC1155Handler__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC1155Handler {
    return new Contract(address, _abi, signerOrProvider) as ERC1155Handler;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWtoken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "uint256[]",
        name: "",
        type: "uint256[]",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155BatchReceived",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "onERC1155Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wtokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isWtoken",
        type: "bool",
      },
    ],
    name: "setWtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wtoken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516112ab3803806112ab83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516112196100926000396000818161021f015261073501526112196000f3fe6080604052600436106100f35760003560e01c80637f79bea81161008a578063bc197c8111610059578063bc197c8114610301578063c8ba6c8714610346578063e248cff214610381578063f23a6e61146103a157600080fd5b80637f79bea8146102715780639c0591c8146102a1578063b07e54bb146102c1578063b8fa3736146102e157600080fd5b80630a6d55d8116100c65780630a6d55d81461019f5780632129da19146101ed578063318c136e1461020d5780636a70d0811461024157600080fd5b806301ffc9a7146100f8578063045dff971461012d57806307b7ed991461015d5780630968f2641461017f575b600080fd5b34801561010457600080fd5b5061011861011336600461097b565b6103cd565b60405190151581526020015b60405180910390f35b34801561013957600080fd5b506101186101483660046109c1565b60056020526000908152604090205460ff1681565b34801561016957600080fd5b5061017d6101783660046109c1565b610404565b005b34801561018b57600080fd5b5061017d61019a366004610aa3565b610418565b3480156101ab57600080fd5b506101d56101ba366004610ae0565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610124565b3480156101f957600080fd5b5061017d610208366004610af9565b61045e565b34801561021957600080fd5b506101d57f000000000000000000000000000000000000000000000000000000000000000081565b34801561024d57600080fd5b5061011861025c3660046109c1565b60046020526000908152604090205460ff1681565b34801561027d57600080fd5b5061011861028c3660046109c1565b60036020526000908152604090205460ff1681565b3480156102ad57600080fd5b506000546101d5906001600160a01b031681565b6102d46102cf366004610b80565b610491565b6040516101249190610c38565b3480156102ed57600080fd5b5061017d6102fc366004610c4b565b6105d1565b34801561030d57600080fd5b5061032d61031c366004610cfa565b63bc197c8160e01b95945050505050565b6040516001600160e01b03199091168152602001610124565b34801561035257600080fd5b506103736103613660046109c1565b60026020526000908152604090205481565b604051908152602001610124565b34801561038d57600080fd5b5061017d61039c366004610da8565b610629565b3480156103ad57600080fd5b5061032d6103bc366004610df4565b63f23a6e6160e01b95945050505050565b60006001600160e01b03198216630271189760e51b14806103fe57506301ffc9a760e01b6001600160e01b03198316145b92915050565b61040c61072a565b610415816107a4565b50565b61042061072a565b60008060608060608580602001905181019061043c9190610eb8565b93985091965094509250905061045685308686868661083c565b505050505050565b61046661072a565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b606061049b61072a565b34156104e35760405162461bcd60e51b81526020600482015260126024820152711b5cd9cb9d985b1d59481b9bdd081b9d5b1b60721b60448201526064015b60405180910390fd5b6060806104f284860186610fa4565b60008981526001602052604090205491935091506001600160a01b0316806105675760405162461bcd60e51b815260206004820152602260248201527f70726f7669646564207265736f75726365494420646f6573206e6f74206578696044820152611cdd60f21b60648201526084016104da565b6001600160a01b03811660009081526004602052604090205460ff161561059957610594818885856108ad565b6105b6565b6105b681883086866040518060200160405280600081525061083c565b50506040805160008152602081019091529695505050505050565b6105d961072a565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b61063161072a565b606080808061064285870187611008565b60208083015160008d8152600183526040808220546001600160a01b031680835260039094529020549599509397509195509350909160ff166106d85760405162461bcd60e51b815260206004820152602860248201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696044820152671d195b1a5cdd195960c21b60648201526084016104da565b6001600160a01b03811660009081526004602052604090205460ff161561070e57610709818360601c88888761090d565b61071f565b61071f81308460601c89898861083c565b505050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146107a25760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064016104da565b565b6001600160a01b03811660009081526003602052604090205460ff166108185760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016104da565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b604051631759616b60e11b815286906001600160a01b03821690632eb2c2d69061087290899089908990899089906004016110f0565b600060405180830381600087803b15801561088c57600080fd5b505af11580156108a0573d6000803e3d6000fd5b5050505050505050505050565b604051631ac8311560e21b815284906001600160a01b03821690636b20c454906108df9087908790879060040161114e565b600060405180830381600087803b1580156108f957600080fd5b505af115801561071f573d6000803e3d6000fd5b604051630fbfeffd60e11b815285906001600160a01b03821690631f7fdffa9061094190889088908890889060040161118e565b600060405180830381600087803b15801561095b57600080fd5b505af115801561096f573d6000803e3d6000fd5b50505050505050505050565b60006020828403121561098d57600080fd5b81356001600160e01b0319811681146109a557600080fd5b9392505050565b6001600160a01b038116811461041557600080fd5b6000602082840312156109d357600080fd5b81356109a5816109ac565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610a1d57610a1d6109de565b604052919050565b600067ffffffffffffffff821115610a3f57610a3f6109de565b50601f01601f191660200190565b600082601f830112610a5e57600080fd5b8135610a71610a6c82610a25565b6109f4565b818152846020838601011115610a8657600080fd5b816020850160208301376000918101602001919091529392505050565b600060208284031215610ab557600080fd5b813567ffffffffffffffff811115610acc57600080fd5b610ad884828501610a4d565b949350505050565b600060208284031215610af257600080fd5b5035919050565b60008060408385031215610b0c57600080fd5b8235610b17816109ac565b915060208301358015158114610b2c57600080fd5b809150509250929050565b60008083601f840112610b4957600080fd5b50813567ffffffffffffffff811115610b6157600080fd5b602083019150836020828501011115610b7957600080fd5b9250929050565b60008060008060608587031215610b9657600080fd5b843593506020850135610ba8816109ac565b9250604085013567ffffffffffffffff811115610bc457600080fd5b610bd087828801610b37565b95989497509550505050565b60005b83811015610bf7578181015183820152602001610bdf565b83811115610c06576000848401525b50505050565b60008151808452610c24816020860160208601610bdc565b601f01601f19169290920160200192915050565b6020815260006109a56020830184610c0c565b60008060408385031215610c5e57600080fd5b823591506020830135610b2c816109ac565b600067ffffffffffffffff821115610c8a57610c8a6109de565b5060051b60200190565b600082601f830112610ca557600080fd5b81356020610cb5610a6c83610c70565b82815260059290921b84018101918181019086841115610cd457600080fd5b8286015b84811015610cef5780358352918301918301610cd8565b509695505050505050565b600080600080600060a08688031215610d1257600080fd5b8535610d1d816109ac565b94506020860135610d2d816109ac565b9350604086013567ffffffffffffffff80821115610d4a57600080fd5b610d5689838a01610c94565b94506060880135915080821115610d6c57600080fd5b610d7889838a01610c94565b93506080880135915080821115610d8e57600080fd5b50610d9b88828901610a4d565b9150509295509295909350565b600080600060408486031215610dbd57600080fd5b83359250602084013567ffffffffffffffff811115610ddb57600080fd5b610de786828701610b37565b9497909650939450505050565b600080600080600060a08688031215610e0c57600080fd5b8535610e17816109ac565b94506020860135610e27816109ac565b93506040860135925060608601359150608086013567ffffffffffffffff811115610e5157600080fd5b610d9b88828901610a4d565b600082601f830112610e6e57600080fd5b81516020610e7e610a6c83610c70565b82815260059290921b84018101918181019086841115610e9d57600080fd5b8286015b84811015610cef5780518352918301918301610ea1565b600080600080600060a08688031215610ed057600080fd5b8551610edb816109ac565b6020870151909550610eec816109ac565b604087015190945067ffffffffffffffff80821115610f0a57600080fd5b610f1689838a01610e5d565b94506060880151915080821115610f2c57600080fd5b610f3889838a01610e5d565b93506080880151915080821115610f4e57600080fd5b508601601f81018813610f6057600080fd5b8051610f6e610a6c82610a25565b818152896020838501011115610f8357600080fd5b610f94826020830160208601610bdc565b8093505050509295509295909350565b60008060408385031215610fb757600080fd5b823567ffffffffffffffff80821115610fcf57600080fd5b610fdb86838701610c94565b93506020850135915080821115610ff157600080fd5b50610ffe85828601610c94565b9150509250929050565b6000806000806080858703121561101e57600080fd5b843567ffffffffffffffff8082111561103657600080fd5b61104288838901610c94565b9550602087013591508082111561105857600080fd5b61106488838901610c94565b9450604087013591508082111561107a57600080fd5b61108688838901610a4d565b9350606087013591508082111561109c57600080fd5b506110a987828801610a4d565b91505092959194509250565b600081518084526020808501945080840160005b838110156110e5578151875295820195908201906001016110c9565b509495945050505050565b6001600160a01b0386811682528516602082015260a06040820181905260009061111c908301866110b5565b828103606084015261112e81866110b5565b905082810360808401526111428185610c0c565b98975050505050505050565b6001600160a01b0384168152606060208201819052600090611172908301856110b5565b828103604084015261118481856110b5565b9695505050505050565b6001600160a01b03851681526080602082018190526000906111b2908301866110b5565b82810360408401526111c481866110b5565b905082810360608401526111d88185610c0c565b97965050505050505056fea264697066735822122020c469ccfca5aa5d2db574871045f6aed040426fcaaed7ba3540cc0806793acb64736f6c634300080b0033";
