/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HandlerHelpersUpgradeable } from "../HandlerHelpersUpgradeable";

export class HandlerHelpersUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HandlerHelpersUpgradeable> {
    return super.deploy(overrides || {}) as Promise<HandlerHelpersUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HandlerHelpersUpgradeable {
    return super.attach(address) as HandlerHelpersUpgradeable;
  }
  connect(signer: Signer): HandlerHelpersUpgradeable__factory {
    return super.connect(signer) as HandlerHelpersUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HandlerHelpersUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HandlerHelpersUpgradeable;
  }
}

const _abi = [
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isNative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nativeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "setNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610557806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063789d771111610071578063789d7711146101665780637f79bea814610179578063ab5c7bf1146100c3578063b2b8b5dd1461019c578063b8fa3736146101bf578063c8ba6c87146101d257600080fd5b806307b7ed99146100ae5780630968f264146100c35780630a6d55d8146100d4578063318c136e1461011a5780636a70d08114610133575b600080fd5b6100c16100bc3660046103b7565b610200565b005b6100c16100d13660046103ef565b50565b6100fd6100e23660046104a0565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100fd906201000090046001600160a01b031681565b6101566101413660046103b7565b60046020526000908152604090205460ff1681565b6040519015158152602001610111565b6100c16101743660046104b9565b610211565b6101566101873660046103b7565b60036020526000908152604090205460ff1681565b6101566101aa3660046103b7565b60056020526000908152604090205460ff1681565b6100c16101cd3660046104f5565b610244565b6101f26101e03660046103b7565b60026020526000908152604090205481565b604051908152602001610111565b61020861029c565b6100d181610303565b61021961029c565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b61024c61029c565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6000546201000090046001600160a01b031633146103015760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526003602052604090205460ff166103775760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016102f8565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80356001600160a01b03811681146103b257600080fd5b919050565b6000602082840312156103c957600080fd5b6103d28261039b565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561040157600080fd5b813567ffffffffffffffff8082111561041957600080fd5b818401915084601f83011261042d57600080fd5b81358181111561043f5761043f6103d9565b604051601f8201601f19908116603f01168101908382118183101715610467576104676103d9565b8160405282815287602084870101111561048057600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104b257600080fd5b5035919050565b600080604083850312156104cc57600080fd5b6104d58361039b565b9150602083013580151581146104ea57600080fd5b809150509250929050565b6000806040838503121561050857600080fd5b823591506105186020840161039b565b9050925092905056fea264697066735822122044cdde1d97ecdcb000160f0e0bf1a39ae95ef3ef481e0140162e70159797225764736f6c634300080b0033";
