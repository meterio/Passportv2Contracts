/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20HandlerUpgradeable,
  ERC20HandlerUpgradeableInterface,
} from "../../../contracts/handlers/ERC20HandlerUpgradeable";

const _abi = [
  {
    inputs: [],
    name: "ProvidedTokenAddressIsNotWhitelisted",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "ETHReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isNative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "removeResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nativeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "setNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5061131a806100206000396000f3fe6080604052600436106100f75760003560e01c8063ab5c7bf11161008a578063c4d66de811610059578063c4d66de8146102fe578063c8ba6c871461031e578063ddafda4614610359578063e248cff21461036f57600080fd5b8063ab5c7bf11461026e578063b07e54bb1461028e578063b2b8b5dd146102ae578063b8fa3736146102de57600080fd5b80636a70d081116100c65780636a70d081146101be578063789d7711146101fe5780637f79bea81461021e578063a98157511461024e57600080fd5b806307b7ed99146101035780630968f264146101255780630a6d55d814610145578063318c136e1461019857600080fd5b366100fe57005b600080fd5b34801561010f57600080fd5b5061012361011e366004610e9b565b61038f565b005b34801561013157600080fd5b50610123610140366004610ed5565b6103a3565b34801561015157600080fd5b5061017b610160366004610f86565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b3480156101a457600080fd5b5060005461017b906201000090046001600160a01b031681565b3480156101ca57600080fd5b506101ee6101d9366004610e9b565b60046020526000908152604090205460ff1681565b604051901515815260200161018f565b34801561020a57600080fd5b50610123610219366004610fad565b6103dc565b34801561022a57600080fd5b506101ee610239366004610e9b565b60036020526000908152604090205460ff1681565b34801561025a57600080fd5b50610123610269366004610fe6565b61040f565b34801561027a57600080fd5b50610123610289366004610ed5565b610462565b6102a161029c366004611054565b610495565b60405161018f91906110dc565b3480156102ba57600080fd5b506101ee6102c9366004610e9b565b60056020526000908152604090205460ff1681565b3480156102ea57600080fd5b506101236102f9366004610fe6565b610579565b34801561030a57600080fd5b50610123610319366004610e9b565b6105d1565b34801561032a57600080fd5b5061034b610339366004610e9b565b60026020526000908152604090205481565b60405190815260200161018f565b34801561036557600080fd5b5061034b60065481565b34801561037b57600080fd5b5061012361038a36600461110f565b6106a6565b61039761081f565b6103a081610881565b50565b6103ab61081f565b6000806000838060200190518101906103c4919061115b565b919450925090506103d6838383610919565b50505050565b6103e461081f565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b61041761081f565b600091825260016020908152604080842080546001600160a01b03191690556001600160a01b0392909216835260028152818320839055600390529020805460ff19169055565b5050565b61046a61081f565b60008082806020019051810190610481919061119e565b90925090506104908282610925565b505050565b606061049f61081f565b60006104ad83850185610f86565b6000878152600160209081526040808320546001600160a01b03168084526003909252909120549192509060ff166104f857604051631556d7e160e11b815260040160405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff161561052957610524818784610989565b61055f565b6001600160a01b03811660009081526005602052604090205460ff161561055357610524826109eb565b61055f81873085610a96565b505060408051600081526020810190915295945050505050565b61058161081f565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b600054610100900460ff16158080156105f15750600054600160ff909116105b8061060b5750303b15801561060b575060005460ff166001145b6106305760405162461bcd60e51b8152600401610627906111cc565b60405180910390fd5b6000805460ff191660011790558015610653576000805461ff0019166101001790555b61065c82610aaa565b801561045e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b6106ae61081f565b60008060606106bf8486018661121a565b9093509150846040856106d28583611252565b926106df9392919061126a565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a815260016020908152604080832054828801516001600160a01b039091168085526003909352922054959650909490935060ff1691506107a590505760405162461bcd60e51b815260206004820152602860248201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696044820152671d195b1a5cdd195960c21b6064820152608401610627565b6001600160a01b03811660009081526004602052604090205460ff16156107d9576107d4818360601c87610b87565b610815565b6001600160a01b03811660009081526005602052604090205460ff1615610807576107d48260601c86610925565b610815818360601c87610919565b5050505050505050565b6000546201000090046001600160a01b0316331461087f5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e747261637400006044820152606401610627565b565b6001600160a01b03811660009081526003602052604090205460ff166108f55760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610627565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b826103d6818484610bbf565b476109308383610c22565b61093a8282611294565b47146109805760405162461bcd60e51b815260206004820152601560248201527445524332303a207769746864726177206661696c2160581b6044820152606401610627565b50504760065550565b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc6790906044015b600060405180830381600087803b1580156109d757600080fd5b505af1158015610815573d6000803e3d6000fd5b348114610a3a5760405162461bcd60e51b815260206004820152601d60248201527f6d73672e76616c756520616e642064617461206d69736d6174636865640000006044820152606401610627565b80600654610a489190611252565b471015610a8f5760405162461bcd60e51b815260206004820152601560248201527411551214995cd95c9d99481b5a5cdb585d18da1959605a1b6044820152606401610627565b5047600655565b83610aa381858585610cfc565b5050505050565b600054610100900460ff1615808015610aca5750600054600160ff909116105b80610ae45750303b158015610ae4575060005460ff166001145b610b005760405162461bcd60e51b8152600401610627906111cc565b6000805460ff191660011790558015610b23576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03851602179055801561045e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200161069a565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f19906044016109bd565b6040516001600160a01b03831660248201526044810182905261049090849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610d34565b604080516000808252602082019092526001600160a01b038416908390604051610c4c91906112ab565b60006040518083038185875af1925050503d8060008114610c89576040519150601f19603f3d011682016040523d82523d6000602084013e610c8e565b606091505b50509050806104905760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b6064820152608401610627565b6040516001600160a01b03808516602483015283166044820152606481018290526103d69085906323b872dd60e01b90608401610beb565b813b80610d7b5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881b9bdd08184818dbdb9d1c9858dd605a1b6044820152606401610627565b600080846001600160a01b031684604051610d9691906112ab565b6000604051808303816000865af19150503d8060008114610dd3576040519150601f19603f3d011682016040523d82523d6000602084013e610dd8565b606091505b509150915081610e1f5760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b6044820152606401610627565b805115610aa35780806020019051810190610e3a91906112c7565b610aa35760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f7420737563636565646044820152606401610627565b6001600160a01b03811681146103a057600080fd5b600060208284031215610ead57600080fd5b8135610eb881610e86565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610ee757600080fd5b813567ffffffffffffffff80821115610eff57600080fd5b818401915084601f830112610f1357600080fd5b813581811115610f2557610f25610ebf565b604051601f8201601f19908116603f01168101908382118183101715610f4d57610f4d610ebf565b81604052828152876020848701011115610f6657600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610f9857600080fd5b5035919050565b80151581146103a057600080fd5b60008060408385031215610fc057600080fd5b8235610fcb81610e86565b91506020830135610fdb81610f9f565b809150509250929050565b60008060408385031215610ff957600080fd5b823591506020830135610fdb81610e86565b60008083601f84011261101d57600080fd5b50813567ffffffffffffffff81111561103557600080fd5b60208301915083602082850101111561104d57600080fd5b9250929050565b6000806000806060858703121561106a57600080fd5b84359350602085013561107c81610e86565b9250604085013567ffffffffffffffff81111561109857600080fd5b6110a48782880161100b565b95989497509550505050565b60005b838110156110cb5781810151838201526020016110b3565b838111156103d65750506000910152565b60208152600082518060208401526110fb8160408501602087016110b0565b601f01601f19169190910160400192915050565b60008060006040848603121561112457600080fd5b83359250602084013567ffffffffffffffff81111561114257600080fd5b61114e8682870161100b565b9497909650939450505050565b60008060006060848603121561117057600080fd5b835161117b81610e86565b602085015190935061118c81610e86565b80925050604084015190509250925092565b600080604083850312156111b157600080fd5b82516111bc81610e86565b6020939093015192949293505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000806040838503121561122d57600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156112655761126561123c565b500190565b6000808585111561127a57600080fd5b8386111561128757600080fd5b5050820193919092039150565b6000828210156112a6576112a661123c565b500390565b600082516112bd8184602087016110b0565b9190910192915050565b6000602082840312156112d957600080fd5b8151610eb881610f9f56fea2646970667358221220792be827825784fccc88fece5c8d585e3c843794f7bc37c86765d7c430f6e78a64736f6c634300080b0033";

type ERC20HandlerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20HandlerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20HandlerUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC20HandlerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC20HandlerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20HandlerUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC20HandlerUpgradeable {
    return super.attach(address) as ERC20HandlerUpgradeable;
  }
  override connect(signer: Signer): ERC20HandlerUpgradeable__factory {
    return super.connect(signer) as ERC20HandlerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HandlerUpgradeableInterface {
    return new utils.Interface(_abi) as ERC20HandlerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20HandlerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20HandlerUpgradeable;
  }
}
