/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20HandlerUpgradeable } from "../ERC20HandlerUpgradeable";

export class ERC20HandlerUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC20HandlerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20HandlerUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20HandlerUpgradeable {
    return super.attach(address) as ERC20HandlerUpgradeable;
  }
  connect(signer: Signer): ERC20HandlerUpgradeable__factory {
    return super.connect(signer) as ERC20HandlerUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20HandlerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20HandlerUpgradeable;
  }
}

const _abi = [
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d94806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637f79bea8116100715780637f79bea814610168578063b07e54bb1461018b578063b8fa3736146101ab578063c4d66de8146101be578063c8ba6c87146101d1578063e248cff2146101ff57600080fd5b806307b7ed99146100ae5780630968f264146100c35780630a6d55d8146100d6578063318c136e1461011c5780636a70d08114610135575b600080fd5b6100c16100bc366004610951565b610212565b005b6100c16100d136600461098b565b610226565b6100ff6100e4366004610a3c565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100ff906201000090046001600160a01b031681565b610158610143366004610951565b60046020526000908152604090205460ff1681565b6040519015158152602001610113565b610158610176366004610951565b60036020526000908152604090205460ff1681565b61019e610199366004610a9e565b61025f565b6040516101139190610b26565b6100c16101b9366004610b59565b610321565b6100c16101cc366004610951565b61037d565b6101f16101df366004610951565b60026020526000908152604090205481565b604051908152602001610113565b6100c161020d366004610b89565b6103f8565b61021a610502565b61022381610564565b50565b61022e610502565b6000806000838060200190518101906102479190610bd5565b919450925090506102598383836105fc565b50505050565b6060610269610502565b600061027783850185610a3c565b6000878152600160209081526040808320546001600160a01b03168084526003909252909120549192509060ff166102ca5760405162461bcd60e51b81526004016102c190610c18565b60405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff16156102fb576102f6818784610608565b610307565b6103078187308561066a565b505060408051600081526020810190915295945050505050565b610329610502565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b5050565b600054610100900460ff166103985760005460ff161561039c565b303b155b6103b85760405162461bcd60e51b81526004016102c190610c60565b600054610100900460ff161580156103da576000805461ffff19166101011790555b6103e38261067e565b8015610379576000805461ff00191690555050565b610400610502565b600080606061041184860186610cae565b9093509150846040856104248583610cd0565b9261043193929190610cf6565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a815260016020908152604080832054828801516001600160a01b039091168085526003909352922054959650909490935060ff1691506104b690505760405162461bcd60e51b81526004016102c190610c18565b6001600160a01b03811660009081526004602052604090205460ff16156104ea576104e5818360601c87610712565b6104f8565b6104f8818360601c876105fc565b5050505050505050565b6000546201000090046001600160a01b031633146105625760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064016102c1565b565b6001600160a01b03811660009081526003602052604090205460ff166105d85760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016102c1565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b8261025981848461074a565b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc6790906044015b600060405180830381600087803b15801561065657600080fd5b505af11580156104f8573d6000803e3d6000fd5b83610677818585856107b2565b5050505050565b600054610100900460ff166106995760005460ff161561069d565b303b155b6106b95760405162461bcd60e51b81526004016102c190610c60565b600054610100900460ff161580156106db576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015610379576000805461ff00191690555050565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f199060440161063c565b6040516001600160a01b0383166024820152604481018290526107ad90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526107ea565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102599085906323b872dd60e01b90608401610776565b813b806108315760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881b9bdd08184818dbdb9d1c9858dd605a1b60448201526064016102c1565b600080846001600160a01b03168460405161084c9190610d20565b6000604051808303816000865af19150503d8060008114610889576040519150601f19603f3d011682016040523d82523d6000602084013e61088e565b606091505b5091509150816108d55760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b60448201526064016102c1565b80511561067757808060200190518101906108f09190610d3c565b6106775760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f74207375636365656460448201526064016102c1565b6001600160a01b038116811461022357600080fd5b60006020828403121561096357600080fd5b813561096e8161093c565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561099d57600080fd5b813567ffffffffffffffff808211156109b557600080fd5b818401915084601f8301126109c957600080fd5b8135818111156109db576109db610975565b604051601f8201601f19908116603f01168101908382118183101715610a0357610a03610975565b81604052828152876020848701011115610a1c57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610a4e57600080fd5b5035919050565b60008083601f840112610a6757600080fd5b50813567ffffffffffffffff811115610a7f57600080fd5b602083019150836020828501011115610a9757600080fd5b9250929050565b60008060008060608587031215610ab457600080fd5b843593506020850135610ac68161093c565b9250604085013567ffffffffffffffff811115610ae257600080fd5b610aee87828801610a55565b95989497509550505050565b60005b83811015610b15578181015183820152602001610afd565b838111156102595750506000910152565b6020815260008251806020840152610b45816040850160208701610afa565b601f01601f19169190910160400192915050565b60008060408385031215610b6c57600080fd5b823591506020830135610b7e8161093c565b809150509250929050565b600080600060408486031215610b9e57600080fd5b83359250602084013567ffffffffffffffff811115610bbc57600080fd5b610bc886828701610a55565b9497909650939450505050565b600080600060608486031215610bea57600080fd5b8351610bf58161093c565b6020850151909350610c068161093c565b80925050604084015190509250925092565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008060408385031215610cc157600080fd5b50508035926020909101359150565b60008219821115610cf157634e487b7160e01b600052601160045260246000fd5b500190565b60008085851115610d0657600080fd5b83861115610d1357600080fd5b5050820193919092039150565b60008251610d32818460208701610afa565b9190910192915050565b600060208284031215610d4e57600080fd5b8151801515811461096e57600080fdfea2646970667358221220813b98222f3e50c416b3fdaf1bdd1273a282d1d1f24cb20c9a892147ef1a636664736f6c634300080b0033";
