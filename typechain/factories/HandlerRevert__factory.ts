/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HandlerRevert } from "../HandlerRevert";

export class HandlerRevert__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(bridgeAddress: string, overrides?: Overrides): Promise<HandlerRevert> {
    return super.deploy(
      bridgeAddress,
      overrides || {}
    ) as Promise<HandlerRevert>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(bridgeAddress, overrides || {});
  }
  attach(address: string): HandlerRevert {
    return super.attach(address) as HandlerRevert;
  }
  connect(signer: Signer): HandlerRevert__factory {
    return super.connect(signer) as HandlerRevert__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HandlerRevert {
    return new Contract(address, _abi, signerOrProvider) as HandlerRevert;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWtoken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wtokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isWtoken",
        type: "bool",
      },
    ],
    name: "setWtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "virtualIncreaseBalance",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wtoken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161073738038061073783398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516106a56100926000396000818161018b015261036601526106a56000f3fe608060405234801561001057600080fd5b50600436106100cf5760003560e01c80636a70d0811161008c578063b8fa373611610066578063b8fa373614610206578063c238eea114610219578063c8ba6c871461022c578063e248cff21461025a57600080fd5b80636a70d081146101ad5780637f79bea8146101d05780639c0591c8146101f357600080fd5b8063045dff97146100d457806307b7ed991461010c5780630968f264146101215780630a6d55d8146101325780632129da1914610173578063318c136e14610186575b600080fd5b6100f76100e2366004610489565b60056020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b61011f61011a366004610489565b61026d565b005b61011f61012f3660046104c1565b50565b61015b610140366004610572565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b039091168152602001610103565b61011f61018136600461058b565b61027e565b61015b7f000000000000000000000000000000000000000000000000000000000000000081565b6100f76101bb366004610489565b60046020526000908152604090205460ff1681565b6100f76101de366004610489565b60036020526000908152604090205460ff1681565b60005461015b906001600160a01b031681565b61011f6102143660046105c7565b6102b1565b61011f610227366004610572565b600655565b61024c61023a366004610489565b60026020526000908152604090205481565b604051908152602001610103565b61011f6102683660046105f3565b610309565b61027561035b565b61012f816103d5565b61028661035b565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b6102b961035b565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6006546103565760405162461bcd60e51b815260206004820152601660248201527514dbdb595d1a1a5b99c8189859081a185c1c195b995960521b60448201526064015b60405180910390fd5b505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103d35760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e74726163740000604482015260640161034d565b565b6001600160a01b03811660009081526003602052604090205460ff166104495760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b606482015260840161034d565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80356001600160a01b038116811461048457600080fd5b919050565b60006020828403121561049b57600080fd5b6104a48261046d565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156104d357600080fd5b813567ffffffffffffffff808211156104eb57600080fd5b818401915084601f8301126104ff57600080fd5b813581811115610511576105116104ab565b604051601f8201601f19908116603f01168101908382118183101715610539576105396104ab565b8160405282815287602084870101111561055257600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561058457600080fd5b5035919050565b6000806040838503121561059e57600080fd5b6105a78361046d565b9150602083013580151581146105bc57600080fd5b809150509250929050565b600080604083850312156105da57600080fd5b823591506105ea6020840161046d565b90509250929050565b60008060006040848603121561060857600080fd5b83359250602084013567ffffffffffffffff8082111561062757600080fd5b818601915086601f83011261063b57600080fd5b81358181111561064a57600080fd5b87602082850101111561065c57600080fd5b602083019450809350505050925092509256fea2646970667358221220b843e403bc803f71cdadf5e1ac3e0439b994eaef4e79a9c76e8591c3befdc2f364736f6c634300080b0033";
