/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC20Handler,
  ERC20HandlerInterface,
} from "../../../contracts/handlers/ERC20Handler";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "ProvidedTokenAddressIsNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "ETHReserve",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isNative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "removeResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nativeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "setNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161119f38038061119f83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161110d6100926000396000818161019f0152610730015261110d6000f3fe6080604052600436106100ec5760003560e01c8063a98157511161008a578063b8fa373611610059578063b8fa3736146102e1578063c8ba6c8714610301578063ddafda461461033c578063e248cff21461035257600080fd5b8063a981575114610251578063ab5c7bf114610271578063b07e54bb14610291578063b2b8b5dd146102b157600080fd5b8063318c136e116100c6578063318c136e1461018d5780636a70d081146101c1578063789d7711146102015780637f79bea81461022157600080fd5b806307b7ed99146100f85780630968f2641461011a5780630a6d55d81461013a57600080fd5b366100f357005b600080fd5b34801561010457600080fd5b50610118610113366004610cdc565b610372565b005b34801561012657600080fd5b50610118610135366004610d16565b610386565b34801561014657600080fd5b50610170610155366004610dc7565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561019957600080fd5b506101707f000000000000000000000000000000000000000000000000000000000000000081565b3480156101cd57600080fd5b506101f16101dc366004610cdc565b60036020526000908152604090205460ff1681565b6040519015158152602001610184565b34801561020d57600080fd5b5061011861021c366004610dee565b6103bf565b34801561022d57600080fd5b506101f161023c366004610cdc565b60026020526000908152604090205460ff1681565b34801561025d57600080fd5b5061011861026c366004610e27565b6103f2565b34801561027d57600080fd5b5061011861028c366004610d16565b61043f565b6102a461029f366004610e95565b610472565b6040516101849190610f1d565b3480156102bd57600080fd5b506101f16102cc366004610cdc565b60046020526000908152604090205460ff1681565b3480156102ed57600080fd5b506101186102fc366004610e27565b610554565b34801561030d57600080fd5b5061032e61031c366004610cdc565b60016020526000908152604090205481565b604051908152602001610184565b34801561034857600080fd5b5061032e60055481565b34801561035e57600080fd5b5061011861036d366004610f50565b6105a9565b61037a610725565b6103838161079f565b50565b61038e610725565b6000806000838060200190518101906103a79190610f9c565b919450925090506103b9838383610837565b50505050565b6103c7610725565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b6103fa610725565b60009182526020828152604080842080546001600160a01b03191690556001600160a01b0392909216835260018152818320839055600290529020805460ff19169055565b610447610725565b6000808280602001905181019061045e9190610fdf565b909250905061046d8282610843565b505050565b606061047c610725565b600061048a83850185610dc7565b600087815260208181526040808320546001600160a01b03168084526002909252909120549192509060ff166104d357604051631556d7e160e11b815260040160405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff1615610504576104ff8187846108a7565b61053a565b6001600160a01b03811660009081526004602052604090205460ff161561052e576104ff82610909565b61053a818730856109b4565b505060408051600081526020810190915295945050505050565b61055c610725565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b6105b1610725565b60008060606105c28486018661100d565b9093509150846040856105d58583611045565b926105e29392919061105d565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a81526020818152604080832054828801516001600160a01b039091168085526002909352922054959650909490935060ff1691506106ab90505760405162461bcd60e51b815260206004820152602860248201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696044820152671d195b1a5cdd195960c21b60648201526084015b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff16156106df576106da818360601c876109c8565b61071b565b6001600160a01b03811660009081526004602052604090205460ff161561070d576106da8260601c86610843565b61071b818360601c87610837565b5050505050505050565b336001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161461079d5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064016106a2565b565b6001600160a01b03811660009081526002602052604090205460ff166108135760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016106a2565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b826103b9818484610a00565b4761084e8383610a63565b6108588282611087565b471461089e5760405162461bcd60e51b815260206004820152601560248201527445524332303a207769746864726177206661696c2160581b60448201526064016106a2565b50504760055550565b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc6790906044015b600060405180830381600087803b1580156108f557600080fd5b505af115801561071b573d6000803e3d6000fd5b3481146109585760405162461bcd60e51b815260206004820152601d60248201527f6d73672e76616c756520616e642064617461206d69736d61746368656400000060448201526064016106a2565b806005546109669190611045565b4710156109ad5760405162461bcd60e51b815260206004820152601560248201527411551214995cd95c9d99481b5a5cdb585d18da1959605a1b60448201526064016106a2565b5047600555565b836109c181858585610b3d565b5050505050565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f19906044016108db565b6040516001600160a01b03831660248201526044810182905261046d90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152610b75565b604080516000808252602082019092526001600160a01b038416908390604051610a8d919061109e565b60006040518083038185875af1925050503d8060008114610aca576040519150601f19603f3d011682016040523d82523d6000602084013e610acf565b606091505b505090508061046d5760405162461bcd60e51b815260206004820152603460248201527f5472616e7366657248656c7065723a3a736166655472616e736665724554483a60448201527308115512081d1c985b9cd9995c8819985a5b195960621b60648201526084016106a2565b6040516001600160a01b03808516602483015283166044820152606481018290526103b99085906323b872dd60e01b90608401610a2c565b813b80610bbc5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881b9bdd08184818dbdb9d1c9858dd605a1b60448201526064016106a2565b600080846001600160a01b031684604051610bd7919061109e565b6000604051808303816000865af19150503d8060008114610c14576040519150601f19603f3d011682016040523d82523d6000602084013e610c19565b606091505b509150915081610c605760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b60448201526064016106a2565b8051156109c15780806020019051810190610c7b91906110ba565b6109c15760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f74207375636365656460448201526064016106a2565b6001600160a01b038116811461038357600080fd5b600060208284031215610cee57600080fd5b8135610cf981610cc7565b9392505050565b634e487b7160e01b600052604160045260246000fd5b600060208284031215610d2857600080fd5b813567ffffffffffffffff80821115610d4057600080fd5b818401915084601f830112610d5457600080fd5b813581811115610d6657610d66610d00565b604051601f8201601f19908116603f01168101908382118183101715610d8e57610d8e610d00565b81604052828152876020848701011115610da757600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610dd957600080fd5b5035919050565b801515811461038357600080fd5b60008060408385031215610e0157600080fd5b8235610e0c81610cc7565b91506020830135610e1c81610de0565b809150509250929050565b60008060408385031215610e3a57600080fd5b823591506020830135610e1c81610cc7565b60008083601f840112610e5e57600080fd5b50813567ffffffffffffffff811115610e7657600080fd5b602083019150836020828501011115610e8e57600080fd5b9250929050565b60008060008060608587031215610eab57600080fd5b843593506020850135610ebd81610cc7565b9250604085013567ffffffffffffffff811115610ed957600080fd5b610ee587828801610e4c565b95989497509550505050565b60005b83811015610f0c578181015183820152602001610ef4565b838111156103b95750506000910152565b6020815260008251806020840152610f3c816040850160208701610ef1565b601f01601f19169190910160400192915050565b600080600060408486031215610f6557600080fd5b83359250602084013567ffffffffffffffff811115610f8357600080fd5b610f8f86828701610e4c565b9497909650939450505050565b600080600060608486031215610fb157600080fd5b8351610fbc81610cc7565b6020850151909350610fcd81610cc7565b80925050604084015190509250925092565b60008060408385031215610ff257600080fd5b8251610ffd81610cc7565b6020939093015192949293505050565b6000806040838503121561102057600080fd5b50508035926020909101359150565b634e487b7160e01b600052601160045260246000fd5b600082198211156110585761105861102f565b500190565b6000808585111561106d57600080fd5b8386111561107a57600080fd5b5050820193919092039150565b6000828210156110995761109961102f565b500390565b600082516110b0818460208701610ef1565b9190910192915050565b6000602082840312156110cc57600080fd5b8151610cf981610de056fea2646970667358221220644d19dc4485a03cb7069c14079a390f1771410ce585fd9decb8a5e366ff465464736f6c634300080b0033";

type ERC20HandlerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20HandlerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Handler__factory extends ContractFactory {
  constructor(...args: ERC20HandlerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    bridgeAddress: string,
    overrides?: Overrides & { from?: string }
  ): Promise<ERC20Handler> {
    return super.deploy(
      bridgeAddress,
      overrides || {}
    ) as Promise<ERC20Handler>;
  }
  override getDeployTransaction(
    bridgeAddress: string,
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(bridgeAddress, overrides || {});
  }
  override attach(address: string): ERC20Handler {
    return super.attach(address) as ERC20Handler;
  }
  override connect(signer: Signer): ERC20Handler__factory {
    return super.connect(signer) as ERC20Handler__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20HandlerInterface {
    return new utils.Interface(_abi) as ERC20HandlerInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Handler {
    return new Contract(address, _abi, signerOrProvider) as ERC20Handler;
  }
}
