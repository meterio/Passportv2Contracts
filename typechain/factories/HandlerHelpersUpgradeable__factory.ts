/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { HandlerHelpersUpgradeable } from "../HandlerHelpersUpgradeable";

export class HandlerHelpersUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<HandlerHelpersUpgradeable> {
    return super.deploy(overrides || {}) as Promise<HandlerHelpersUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): HandlerHelpersUpgradeable {
    return super.attach(address) as HandlerHelpersUpgradeable;
  }
  connect(signer: Signer): HandlerHelpersUpgradeable__factory {
    return super.connect(signer) as HandlerHelpersUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): HandlerHelpersUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as HandlerHelpersUpgradeable;
  }
}

const _abi = [
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isWtoken",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "wtokenAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isWtoken",
        type: "bool",
      },
    ],
    name: "setWtoken",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wtoken",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610574806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80636a70d081116100715780636a70d081146101845780637f79bea8146101a75780639c0591c8146101ca578063ab5c7bf114610106578063b8fa3736146101dd578063c8ba6c87146101f057600080fd5b8063045dff97146100b957806307b7ed99146100f15780630968f264146101065780630a6d55d8146101175780632129da1914610158578063318c136e1461016b575b600080fd5b6100dc6100c73660046103d4565b60066020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6101046100ff3660046103d4565b61021e565b005b61010461011436600461040c565b50565b6101406101253660046104bd565b6002602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100e8565b6101046101663660046104d6565b61022f565b600054610140906201000090046001600160a01b031681565b6100dc6101923660046103d4565b60056020526000908152604090205460ff1681565b6100dc6101b53660046103d4565b60046020526000908152604090205460ff1681565b600154610140906001600160a01b031681565b6101046101eb366004610512565b610262565b6102106101fe3660046103d4565b60036020526000908152604090205481565b6040519081526020016100e8565b6102266102b9565b61011481610320565b6102376102b9565b6001600160a01b03919091166000908152600660205260409020805460ff1916911515919091179055565b61026a6102b9565b600082815260026020908152604080832080546001600160a01b0319166001600160a01b03861690811790915583526003825280832085905560049091529020805460ff191660011790555050565b6000546201000090046001600160a01b0316331461031e5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526004602052604090205460ff166103945760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610315565b6001600160a01b03166000908152600560205260409020805460ff19166001179055565b80356001600160a01b03811681146103cf57600080fd5b919050565b6000602082840312156103e657600080fd5b6103ef826103b8565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561041e57600080fd5b813567ffffffffffffffff8082111561043657600080fd5b818401915084601f83011261044a57600080fd5b81358181111561045c5761045c6103f6565b604051601f8201601f19908116603f01168101908382118183101715610484576104846103f6565b8160405282815287602084870101111561049d57600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104cf57600080fd5b5035919050565b600080604083850312156104e957600080fd5b6104f2836103b8565b91506020830135801515811461050757600080fd5b809150509250929050565b6000806040838503121561052557600080fd5b82359150610535602084016103b8565b9050925092905056fea2646970667358221220e541c543c1e14f5fa3d23c51b2ce10124164911fb250904be9eed9b7d0c0108f64736f6c634300080b0033";
