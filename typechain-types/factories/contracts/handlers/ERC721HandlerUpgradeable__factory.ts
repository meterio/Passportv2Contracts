/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ERC721HandlerUpgradeable,
  ERC721HandlerUpgradeableInterface,
} from "../../../contracts/handlers/ERC721HandlerUpgradeable";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint8",
        name: "version",
        type: "uint8",
      },
    ],
    name: "Initialized",
    type: "event",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositor",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "metaData",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isNative",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "removeResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "nativeAddress",
        type: "address",
      },
      {
        internalType: "bool",
        name: "_isNative",
        type: "bool",
      },
    ],
    name: "setNative",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdrawETH",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50611219806100206000396000f3fe6080604052600436106100e85760003560e01c8063a98157511161008a578063b8fa373611610059578063b8fa3736146102c6578063c4d66de8146102e6578063c8ba6c8714610306578063e248cff21461034157600080fd5b8063a981575114610238578063ab5c7bf114610258578063b07e54bb14610276578063b2b8b5dd1461029657600080fd5b8063318c136e116100c6578063318c136e146101825780636a70d081146101a8578063789d7711146101e85780637f79bea81461020857600080fd5b806307b7ed99146100ed5780630968f2641461010f5780630a6d55d81461012f575b600080fd5b3480156100f957600080fd5b5061010d610108366004610cf9565b610361565b005b34801561011b57600080fd5b5061010d61012a366004610d85565b610372565b34801561013b57600080fd5b5061016561014a366004610e05565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b34801561018e57600080fd5b50600054610165906201000090046001600160a01b031681565b3480156101b457600080fd5b506101d86101c3366004610cf9565b60046020526000908152604090205460ff1681565b6040519015158152602001610179565b3480156101f457600080fd5b5061010d610203366004610e1e565b6103ac565b34801561021457600080fd5b506101d8610223366004610cf9565b60036020526000908152604090205460ff1681565b34801561024457600080fd5b5061010d610253366004610e5c565b6103df565b34801561026457600080fd5b5061010d610273366004610d85565b50565b610289610284366004610eca565b610432565b6040516101799190610f7e565b3480156102a257600080fd5b506101d86102b1366004610cf9565b60056020526000908152604090205460ff1681565b3480156102d257600080fd5b5061010d6102e1366004610e5c565b6105b1565b3480156102f257600080fd5b5061010d610301366004610cf9565b610609565b34801561031257600080fd5b50610333610321366004610cf9565b60026020526000908152604090205481565b604051908152602001610179565b34801561034d57600080fd5b5061010d61035c366004610f91565b6106d5565b61036961086a565b610273816108cc565b61037a61086a565b6000806000838060200190518101906103939190610fdd565b919450925090506103a683308484610964565b50505050565b6103b461086a565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b6103e761086a565b600091825260016020908152604080842080546001600160a01b03191690556001600160a01b0392909216835260028152818320839055600390529020805460ff19169055565b5050565b606061043c61086a565b34156104805760405162461bcd60e51b815260206004820152600e60248201526d06d73672e76616c756520213d20360941b60448201526064015b60405180910390fd5b600061048e83850185610e05565b6000878152600160209081526040808320546001600160a01b03168084526003909252909120549192509060ff166104d85760405162461bcd60e51b815260040161047790611020565b6104f26001600160a01b038216635b5e139f60e01b6109d9565b1561056a5760405163c87b56dd60e01b81526004810183905281906001600160a01b0382169063c87b56dd90602401600060405180830381865afa15801561053e573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f191682016040526105669190810190611068565b9350505b6001600160a01b03811660009081526004602052604090205460ff161561059b576105968187846109fc565b6105a7565b6105a781873085610964565b5050949350505050565b6105b961086a565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b600054610100900460ff16158080156106295750600054600160ff909116105b806106435750303b158015610643575060005460ff166001145b61065f5760405162461bcd60e51b8152600401610477906110df565b6000805460ff191660011790558015610682576000805461ff0019166101001790555b61068b82610b18565b801561042e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020015b60405180910390a15050565b6106dd61086a565b60008060608180826106f18789018961112d565b909650945061070185604061114f565b9250610710836040898b611175565b8080601f0160208091040260200160405190810160405280939291908181526020018383808284376000920191909152509296506107569250899150859050818b611175565b8101906107639190610e05565b9150878761077285602061114f565b908461077f87602061114f565b610789919061114f565b9261079693929190611175565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052506020898101518f8352600182526040808420546001600160a01b0316808552600390935290922054959650909490935060ff16915061081990505760405162461bcd60e51b815260040161047790611020565b6001600160a01b03811660009081526004602052604090205460ff161561084e57610849818360601c8a86610bf5565b61085d565b61085d81308460601c8b610964565b5050505050505050505050565b6000546201000090046001600160a01b031633146108ca5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e747261637400006044820152606401610477565b565b6001600160a01b03811660009081526003602052604090205460ff166109405760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610477565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b6040516323b872dd60e01b81526001600160a01b0384811660048301528381166024830152604482018390528591908216906323b872dd906064015b600060405180830381600087803b1580156109ba57600080fd5b505af11580156109ce573d6000803e3d6000fd5b505050505050505050565b60006109e483610c27565b80156109f557506109f58383610c5b565b9392505050565b6040516331a9108f60e11b81526004810182905283906001600160a01b038481169190831690636352211e90602401602060405180830381865afa158015610a48573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a6c919061119f565b6001600160a01b031614610ab85760405162461bcd60e51b8152602060048201526013602482015272213ab937103737ba10333937b69037bbb732b960691b6044820152606401610477565b604051630852cd8d60e31b8152600481018390526001600160a01b038216906342966c6890602401600060405180830381600087803b158015610afa57600080fd5b505af1158015610b0e573d6000803e3d6000fd5b5050505050505050565b600054610100900460ff1615808015610b385750600054600160ff909116105b80610b525750303b158015610b52575060005460ff166001145b610b6e5760405162461bcd60e51b8152600401610477906110df565b6000805460ff191660011790558015610b91576000805461ff0019166101001790555b6000805462010000600160b01b031916620100006001600160a01b03851602179055801561042e576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498906020016106c9565b6040516334ff261960e21b815284906001600160a01b0382169063d3fc9864906109a0908790879087906004016111bc565b6000610c3a826301ffc9a760e01b610c5b565b8015610c555750610c53826001600160e01b0319610c5b565b155b92915050565b604080516001600160e01b03198316602480830191909152825180830390910181526044909101909152602080820180516001600160e01b03166301ffc9a760e01b178152825160009392849283928392918391908a617530fa92503d91506000519050828015610ccd575060208210155b8015610cd95750600081115b979650505050505050565b6001600160a01b038116811461027357600080fd5b600060208284031215610d0b57600080fd5b81356109f581610ce4565b634e487b7160e01b600052604160045260246000fd5b604051601f8201601f1916810167ffffffffffffffff81118282101715610d5557610d55610d16565b604052919050565b600067ffffffffffffffff821115610d7757610d77610d16565b50601f01601f191660200190565b600060208284031215610d9757600080fd5b813567ffffffffffffffff811115610dae57600080fd5b8201601f81018413610dbf57600080fd5b8035610dd2610dcd82610d5d565b610d2c565b818152856020838501011115610de757600080fd5b81602084016020830137600091810160200191909152949350505050565b600060208284031215610e1757600080fd5b5035919050565b60008060408385031215610e3157600080fd5b8235610e3c81610ce4565b915060208301358015158114610e5157600080fd5b809150509250929050565b60008060408385031215610e6f57600080fd5b823591506020830135610e5181610ce4565b60008083601f840112610e9357600080fd5b50813567ffffffffffffffff811115610eab57600080fd5b602083019150836020828501011115610ec357600080fd5b9250929050565b60008060008060608587031215610ee057600080fd5b843593506020850135610ef281610ce4565b9250604085013567ffffffffffffffff811115610f0e57600080fd5b610f1a87828801610e81565b95989497509550505050565b60005b83811015610f41578181015183820152602001610f29565b838111156103a65750506000910152565b60008151808452610f6a816020860160208601610f26565b601f01601f19169290920160200192915050565b6020815260006109f56020830184610f52565b600080600060408486031215610fa657600080fd5b83359250602084013567ffffffffffffffff811115610fc457600080fd5b610fd086828701610e81565b9497909650939450505050565b600080600060608486031215610ff257600080fd5b8351610ffd81610ce4565b602085015190935061100e81610ce4565b80925050604084015190509250925092565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b60006020828403121561107a57600080fd5b815167ffffffffffffffff81111561109157600080fd5b8201601f810184136110a257600080fd5b80516110b0610dcd82610d5d565b8181528560208385010111156110c557600080fd5b6110d6826020830160208601610f26565b95945050505050565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b6000806040838503121561114057600080fd5b50508035926020909101359150565b6000821982111561117057634e487b7160e01b600052601160045260246000fd5b500190565b6000808585111561118557600080fd5b8386111561119257600080fd5b5050820193919092039150565b6000602082840312156111b157600080fd5b81516109f581610ce4565b60018060a01b03841681528260208201526060604082015260006110d66060830184610f5256fea264697066735822122040887d06e13fa5fddb3bbb66f98b0e19616121684c3c28279fc435db6a2ca60764736f6c634300080b0033";

type ERC721HandlerUpgradeableConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC721HandlerUpgradeableConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC721HandlerUpgradeable__factory extends ContractFactory {
  constructor(...args: ERC721HandlerUpgradeableConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ERC721HandlerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC721HandlerUpgradeable>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ERC721HandlerUpgradeable {
    return super.attach(address) as ERC721HandlerUpgradeable;
  }
  override connect(signer: Signer): ERC721HandlerUpgradeable__factory {
    return super.connect(signer) as ERC721HandlerUpgradeable__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC721HandlerUpgradeableInterface {
    return new utils.Interface(_abi) as ERC721HandlerUpgradeableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC721HandlerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC721HandlerUpgradeable;
  }
}
