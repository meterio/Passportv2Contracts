/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20HandlerUpgradeable } from "../ERC20HandlerUpgradeable";

export class ERC20HandlerUpgradeable__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<ERC20HandlerUpgradeable> {
    return super.deploy(overrides || {}) as Promise<ERC20HandlerUpgradeable>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): ERC20HandlerUpgradeable {
    return super.attach(address) as ERC20HandlerUpgradeable;
  }
  connect(signer: Signer): ERC20HandlerUpgradeable__factory {
    return super.connect(signer) as ERC20HandlerUpgradeable__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20HandlerUpgradeable {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as ERC20HandlerUpgradeable;
  }
}

const _abi = [
  {
    inputs: [],
    name: "ProvidedTokenAddressIsNotWhitelisted",
    type: "error",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    name: "initialize",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610d8e806100206000396000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c80637f79bea8116100715780637f79bea814610168578063b07e54bb1461018b578063b8fa3736146101ab578063c4d66de8146101be578063c8ba6c87146101d1578063e248cff2146101ff57600080fd5b806307b7ed99146100ae5780630968f264146100c35780630a6d55d8146100d6578063318c136e1461011c5780636a70d08114610135575b600080fd5b6100c16100bc366004610993565b610212565b005b6100c16100d13660046109cd565b610226565b6100ff6100e4366004610a7e565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6000546100ff906201000090046001600160a01b031681565b610158610143366004610993565b60046020526000908152604090205460ff1681565b6040519015158152602001610113565b610158610176366004610993565b60036020526000908152604090205460ff1681565b61019e610199366004610ae0565b61025f565b6040516101139190610b68565b6100c16101b9366004610b9b565b610319565b6100c16101cc366004610993565b610375565b6101f16101df366004610993565b60026020526000908152604090205481565b604051908152602001610113565b6100c161020d366004610bcb565b6103f9565b61021a610544565b610223816105a6565b50565b61022e610544565b6000806000838060200190518101906102479190610c17565b9194509250905061025983838361063e565b50505050565b6060610269610544565b600061027783850185610a7e565b6000878152600160209081526040808320546001600160a01b03168084526003909252909120549192509060ff166102c257604051631556d7e160e11b815260040160405180910390fd5b6001600160a01b03811660009081526004602052604090205460ff16156102f3576102ee81878461064a565b6102ff565b6102ff818730856106ac565b505060408051600081526020810190915295945050505050565b610321610544565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b5050565b600054610100900460ff166103905760005460ff1615610394565b303b155b6103b95760405162461bcd60e51b81526004016103b090610c5a565b60405180910390fd5b600054610100900460ff161580156103db576000805461ffff19166101011790555b6103e4826106c0565b8015610371576000805461ff00191690555050565b610401610544565b600080606061041284860186610ca8565b9093509150846040856104258583610cca565b9261043293929190610cf0565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a815260016020908152604080832054828801516001600160a01b039091168085526003909352922054959650909490935060ff1691506104f890505760405162461bcd60e51b815260206004820152602860248201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696044820152671d195b1a5cdd195960c21b60648201526084016103b0565b6001600160a01b03811660009081526004602052604090205460ff161561052c57610527818360601c87610754565b61053a565b61053a818360601c8761063e565b5050505050505050565b6000546201000090046001600160a01b031633146105a45760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064016103b0565b565b6001600160a01b03811660009081526003602052604090205460ff1661061a5760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016103b0565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b8261025981848461078c565b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc6790906044015b600060405180830381600087803b15801561069857600080fd5b505af115801561053a573d6000803e3d6000fd5b836106b9818585856107f4565b5050505050565b600054610100900460ff166106db5760005460ff16156106df565b303b155b6106fb5760405162461bcd60e51b81526004016103b090610c5a565b600054610100900460ff1615801561071d576000805461ffff19166101011790555b6000805462010000600160b01b031916620100006001600160a01b038516021790558015610371576000805461ff00191690555050565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f199060440161067e565b6040516001600160a01b0383166024820152604481018290526107ef90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b03199093169290921790915261082c565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102599085906323b872dd60e01b906084016107b8565b813b806108735760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881b9bdd08184818dbdb9d1c9858dd605a1b60448201526064016103b0565b600080846001600160a01b03168460405161088e9190610d1a565b6000604051808303816000865af19150503d80600081146108cb576040519150601f19603f3d011682016040523d82523d6000602084013e6108d0565b606091505b5091509150816109175760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b60448201526064016103b0565b8051156106b957808060200190518101906109329190610d36565b6106b95760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f74207375636365656460448201526064016103b0565b6001600160a01b038116811461022357600080fd5b6000602082840312156109a557600080fd5b81356109b08161097e565b9392505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156109df57600080fd5b813567ffffffffffffffff808211156109f757600080fd5b818401915084601f830112610a0b57600080fd5b813581811115610a1d57610a1d6109b7565b604051601f8201601f19908116603f01168101908382118183101715610a4557610a456109b7565b81604052828152876020848701011115610a5e57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600060208284031215610a9057600080fd5b5035919050565b60008083601f840112610aa957600080fd5b50813567ffffffffffffffff811115610ac157600080fd5b602083019150836020828501011115610ad957600080fd5b9250929050565b60008060008060608587031215610af657600080fd5b843593506020850135610b088161097e565b9250604085013567ffffffffffffffff811115610b2457600080fd5b610b3087828801610a97565b95989497509550505050565b60005b83811015610b57578181015183820152602001610b3f565b838111156102595750506000910152565b6020815260008251806020840152610b87816040850160208701610b3c565b601f01601f19169190910160400192915050565b60008060408385031215610bae57600080fd5b823591506020830135610bc08161097e565b809150509250929050565b600080600060408486031215610be057600080fd5b83359250602084013567ffffffffffffffff811115610bfe57600080fd5b610c0a86828701610a97565b9497909650939450505050565b600080600060608486031215610c2c57600080fd5b8351610c378161097e565b6020850151909350610c488161097e565b80925050604084015190509250925092565b6020808252602e908201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160408201526d191e481a5b9a5d1a585b1a5e995960921b606082015260800190565b60008060408385031215610cbb57600080fd5b50508035926020909101359150565b60008219821115610ceb57634e487b7160e01b600052601160045260246000fd5b500190565b60008085851115610d0057600080fd5b83861115610d0d57600080fd5b5050820193919092039150565b60008251610d2c818460208701610b3c565b9190910192915050565b600060208284031215610d4857600080fd5b815180151581146109b057600080fdfea2646970667358221220e27755efe4e8a881c09c7996b21d74218251b7045121720195c99a301a4b8a1864736f6c634300080b0033";
