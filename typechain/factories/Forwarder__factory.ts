/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { Forwarder } from "../Forwarder";

export class Forwarder__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<Forwarder> {
    return super.deploy(overrides || {}) as Promise<Forwarder>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): Forwarder {
    return super.attach(address) as Forwarder;
  }
  connect(signer: Signer): Forwarder__factory {
    return super.connect(signer) as Forwarder__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Forwarder {
    return new Contract(address, _abi, signerOrProvider) as Forwarder;
  }
}

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "execute",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "getChainId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
    ],
    name: "getNonce",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "address",
            name: "from",
            type: "address",
          },
          {
            internalType: "address",
            name: "to",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "value",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gas",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "nonce",
            type: "uint256",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        internalType: "struct Forwarder.ForwardRequest",
        name: "req",
        type: "tuple",
      },
      {
        internalType: "bytes",
        name: "signature",
        type: "bytes",
      },
    ],
    name: "verify",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x61014060405234801561001157600080fd5b5060408051808201825260098152682337b93bb0b93232b960b91b602080830191825283518085019094526005845264302e302e3160d81b908401528151902060e08190527fae209a0b48f21c054280f2455d32cf309387644879d9acbd8ffc1991638118856101008190524660a0529192917f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f6100f48184846040805160208101859052908101839052606081018290524660808201523060a082015260009060c0016040516020818303038152906040528051906020012090509392505050565b6080523060c052610120525061010992505050565b60805160a05160c05160e0516101005161012051610b1c61015860003960006105100152600061055f0152600061053a01526000610493015260006104bd015260006104e70152610b1c6000f3fe60806040526004361061003f5760003560e01c80632d0335ab146100445780633408e4701461008d57806347153f82146100a0578063bf5d3bdb146100c1575b600080fd5b34801561005057600080fd5b5061007a61005f36600461089e565b6001600160a01b031660009081526020819052604090205490565b6040519081526020015b60405180910390f35b34801561009957600080fd5b504661007a565b6100b36100ae3660046108ce565b6100f1565b60405161008492919061099d565b3480156100cd57600080fd5b506100e16100dc3660046108ce565b610290565b6040519015158152602001610084565b60006060610100858585610290565b61016c5760405162461bcd60e51b815260206004820152603260248201527f4d696e696d616c466f727761726465723a207369676e617475726520646f6573604482015271081b9bdd081b585d18da081c995c5d595cdd60721b60648201526084015b60405180910390fd5b61017b608086013560016109d9565b60008061018b602089018961089e565b6001600160a01b03166001600160a01b03168152602001908152602001600020819055506000808660200160208101906101c5919061089e565b6001600160a01b0316606088013560408901356101e560a08b018b6109ff565b6101f260208d018d61089e565b60405160200161020493929190610a46565b60408051601f198184030181529082905261021e91610a6c565b600060405180830381858888f193505050503d806000811461025c576040519150601f19603f3d011682016040523d82523d6000602084013e610261565b606091505b509092509050610276603f6060890135610a88565b5a1161028457610284610aaa565b90969095509350505050565b6000806103a384848080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201919091525061039d92507fdd8f4b70b0f4393e889bd39128a30628a78b61816a9eb8199759e7a349657e489150610300905060208a018a61089e565b61031060408b0160208c0161089e565b60408b013560608c013560808d013561032c60a08f018f6109ff565b60405161033a929190610ac0565b6040805191829003822060208301989098526001600160a01b0396871690820152949093166060850152608084019190915260a083015260c082015260e0810191909152610100016040516020818303038152906040528051906020012061040e565b90610462565b905060808501356000806103ba602089018961089e565b6001600160a01b03166001600160a01b031681526020019081526020016000205414801561040557506103f0602086018661089e565b6001600160a01b0316816001600160a01b0316145b95945050505050565b600061045c61041b610486565b8360405161190160f01b6020820152602281018390526042810182905260009060620160405160208183030381529060405280519060200120905092915050565b92915050565b600080600061047185856105ad565b9150915061047e816105f3565b509392505050565b6000306001600160a01b037f0000000000000000000000000000000000000000000000000000000000000000161480156104df57507f000000000000000000000000000000000000000000000000000000000000000046145b1561050957507f000000000000000000000000000000000000000000000000000000000000000090565b50604080517f00000000000000000000000000000000000000000000000000000000000000006020808301919091527f0000000000000000000000000000000000000000000000000000000000000000828401527f000000000000000000000000000000000000000000000000000000000000000060608301524660808301523060a0808401919091528351808403909101815260c0909201909252805191012090565b6000808251604114156105e45760208301516040840151606085015160001a6105d8878285856107b1565b945094505050506105ec565b506000905060025b9250929050565b600081600481111561060757610607610ad0565b14156106105750565b600181600481111561062457610624610ad0565b14156106725760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e617475726500000000000000006044820152606401610163565b600281600481111561068657610686610ad0565b14156106d45760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e677468006044820152606401610163565b60038160048111156106e8576106e8610ad0565b14156107415760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b6064820152608401610163565b600481600481111561075557610755610ad0565b14156107ae5760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b6064820152608401610163565b50565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a08311156107e85750600090506003610895565b8460ff16601b1415801561080057508460ff16601c14155b156108115750600090506004610895565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015610865573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b03811661088e57600060019250925050610895565b9150600090505b94509492505050565b6000602082840312156108b057600080fd5b81356001600160a01b03811681146108c757600080fd5b9392505050565b6000806000604084860312156108e357600080fd5b833567ffffffffffffffff808211156108fb57600080fd5b9085019060c0828803121561090f57600080fd5b9093506020850135908082111561092557600080fd5b818601915086601f83011261093957600080fd5b81358181111561094857600080fd5b87602082850101111561095a57600080fd5b6020830194508093505050509250925092565b60005b83811015610988578181015183820152602001610970565b83811115610997576000848401525b50505050565b821515815260406020820152600082518060408401526109c481606085016020870161096d565b601f01601f1916919091016060019392505050565b600082198211156109fa57634e487b7160e01b600052601160045260246000fd5b500190565b6000808335601e19843603018112610a1657600080fd5b83018035915067ffffffffffffffff821115610a3157600080fd5b6020019150368190038213156105ec57600080fd5b8284823760609190911b6bffffffffffffffffffffffff19169101908152601401919050565b60008251610a7e81846020870161096d565b9190910192915050565b600082610aa557634e487b7160e01b600052601260045260246000fd5b500490565b634e487b7160e01b600052600160045260246000fd5b8183823760009101908152919050565b634e487b7160e01b600052602160045260246000fdfea264697066735822122011ccc9918de3a9ffc5b2eba0568ad166261d8122a317fc1132cc7663afc0441964736f6c634300080b0033";
