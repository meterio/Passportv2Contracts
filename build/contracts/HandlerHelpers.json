{
  "contractName": "HandlerHelpers",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "bridgeAddress",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [],
      "name": "_bridgeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_burnList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_contractWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "_resourceIDToTokenContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_tokenContractAddressToResourceID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isWtoken",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resourceID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setResource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setBurnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "wtokenAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isWtoken",
          "type": "bool"
        }
      ],
      "name": "setWtoken",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"bridgeAddress\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_burnList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_contractWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_resourceIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToResourceID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isWtoken\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"wtokenAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isWtoken\",\"type\":\"bool\"}],\"name\":\"setWtoken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"params\":{\"bridgeAddress\":\"Contract address of previously deployed Bridge.\"}},\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(bytes)\":{\"params\":{\"data\":\"ABI-encoded withdrawal params relevant to the handler.\"}}},\"stateVariables\":{\"_resourceIDToTokenContractAddress\":{\"params\":{\"resourceID\":\"ResourceID to be used.\"},\"return\":\"address The {tokenContractAddress} that is currently set for the resourceID.\",\"returns\":{\"_0\":\"address The {tokenContractAddress} that is currently set for the resourceID.\"}}},\"title\":\"Function used across handler contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_resourceIDToTokenContractAddress(bytes32)\":{\"notice\":\"Exposing getter for {_resourceIDToTokenContractAddress}.\"},\"setBurnable(address)\":{\"notice\":\"First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true.\"},\"setResource(bytes32,address)\":{\"notice\":\"First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}.\"},\"withdraw(bytes)\":{\"notice\":\"Withdraw funds from ERC safes.\"}},\"notice\":\"This contract is intended to be used with the Bridge contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/handlers/HandlerHelpers.sol\":\"HandlerHelpers\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"project:/contracts/handlers/HandlerHelpers.sol\":{\"keccak256\":\"0xac45f17d2ba2a556d6c35ef45aa3860dc2c85392e509a507bb90f8894e15e15d\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://444f8cab6fbd1d5f0bc4f810a398523b15271c7f7f7243fbe760efb91b475a52\",\"dweb:/ipfs/QmcjmfUTrwVh8xFTCRagC1TK7c3PUf6HCgqRLzdyNgDfgx\"]},\"project:/contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0xb7f3755b724892a95eaeadc3b20f2aaa78b3f1f729a00ad95deba669cfebff08\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://cc3dda0ae19ab5a511538fda41423a35f85b509851f88b3ed4a587b7ff75600c\",\"dweb:/ipfs/QmYp52mz8gmdPmjFvMmTwp29u6ygCsBrt73fdJ5yzVLUZj\"]}},\"version\":1}",
  "bytecode": "0x60a060405234801561001057600080fd5b5060405161060c38038061060c83398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161057a6100926000396000818161016501526102b2015261057a6000f3fe608060405234801561001057600080fd5b50600436106100a95760003560e01c8063318c136e11610071578063318c136e146101605780636a70d081146101875780637f79bea8146101aa578063ab5c7bf1146100fb578063b8fa3736146101cd578063c8ba6c87146101e057600080fd5b8063045dff97146100ae57806307b7ed99146100e65780630968f264146100fb5780630a6d55d81461010c5780632129da191461014d575b600080fd5b6100d16100bc3660046103da565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100f96100f43660046103da565b61020e565b005b6100f9610109366004610412565b50565b61013561011a3660046104c3565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b6100f961015b3660046104dc565b61021f565b6101357f000000000000000000000000000000000000000000000000000000000000000081565b6100d16101953660046103da565b60036020526000908152604090205460ff1681565b6100d16101b83660046103da565b60026020526000908152604090205460ff1681565b6100f96101db366004610518565b610252565b6102006101ee3660046103da565b60016020526000908152604090205481565b6040519081526020016100dd565b6102166102a7565b61010981610326565b6102276102a7565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b61025a6102a7565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103245760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526002602052604090205460ff1661039a5760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b606482015260840161031b565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b80356001600160a01b03811681146103d557600080fd5b919050565b6000602082840312156103ec57600080fd5b6103f5826103be565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042457600080fd5b813567ffffffffffffffff8082111561043c57600080fd5b818401915084601f83011261045057600080fd5b813581811115610462576104626103fc565b604051601f8201601f19908116603f0116810190838211818310171561048a5761048a6103fc565b816040528281528760208487010111156104a357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104d557600080fd5b5035919050565b600080604083850312156104ef57600080fd5b6104f8836103be565b91506020830135801515811461050d57600080fd5b809150509250929050565b6000806040838503121561052b57600080fd5b8235915061053b602084016103be565b9050925092905056fea2646970667358221220ac0bc22c29ddeb850abe6f81b2cfdb96428387b5229dbe0efa023cbf7a7c3faa64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100a95760003560e01c8063318c136e11610071578063318c136e146101605780636a70d081146101875780637f79bea8146101aa578063ab5c7bf1146100fb578063b8fa3736146101cd578063c8ba6c87146101e057600080fd5b8063045dff97146100ae57806307b7ed99146100e65780630968f264146100fb5780630a6d55d81461010c5780632129da191461014d575b600080fd5b6100d16100bc3660046103da565b60046020526000908152604090205460ff1681565b60405190151581526020015b60405180910390f35b6100f96100f43660046103da565b61020e565b005b6100f9610109366004610412565b50565b61013561011a3660046104c3565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020016100dd565b6100f961015b3660046104dc565b61021f565b6101357f000000000000000000000000000000000000000000000000000000000000000081565b6100d16101953660046103da565b60036020526000908152604090205460ff1681565b6100d16101b83660046103da565b60026020526000908152604090205460ff1681565b6100f96101db366004610518565b610252565b6102006101ee3660046103da565b60016020526000908152604090205481565b6040519081526020016100dd565b6102166102a7565b61010981610326565b6102276102a7565b6001600160a01b03919091166000908152600460205260409020805460ff1916911515919091179055565b61025a6102a7565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146103245760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526002602052604090205460ff1661039a5760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b606482015260840161031b565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b80356001600160a01b03811681146103d557600080fd5b919050565b6000602082840312156103ec57600080fd5b6103f5826103be565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561042457600080fd5b813567ffffffffffffffff8082111561043c57600080fd5b818401915084601f83011261045057600080fd5b813581811115610462576104626103fc565b604051601f8201601f19908116603f0116810190838211818310171561048a5761048a6103fc565b816040528281528760208487010111156104a357600080fd5b826020860160208301376000928101602001929092525095945050505050565b6000602082840312156104d557600080fd5b5035919050565b600080604083850312156104ef57600080fd5b6104f8836103be565b91506020830135801515811461050d57600080fd5b809150509250929050565b6000806040838503121561052b57600080fd5b8235915061053b602084016103be565b9050925092905056fea2646970667358221220ac0bc22c29ddeb850abe6f81b2cfdb96428387b5229dbe0efa023cbf7a7c3faa64736f6c634300080b0033",
  "immutableReferences": {
    "10503": [
      {
        "length": 32,
        "start": 357
      },
      {
        "length": 32,
        "start": 690
      }
    ]
  },
  "generatedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:306:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "95:209:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "141:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "150:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "153:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "143:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "143:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "143:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "116:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "125:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "112:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "112:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "137:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "108:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "108:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "105:52:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "166:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "185:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "179:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "179:16:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "170:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "258:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "267:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "270:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "260:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "260:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "260:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "217:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "228:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "243:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "248:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "239:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "239:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "252:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "235:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "235:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "224:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "224:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "214:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "214:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "207:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "207:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "204:70:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "283:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "293:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "283:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address_fromMemory",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "61:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "72:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "84:6:65",
                "type": ""
              }
            ],
            "src": "14:290:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_tuple_t_address_fromMemory(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let value := mload(headStart)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n        value0 := value\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3580:65",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:65",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:65"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:65"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:65"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:65",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:65",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:65"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:65"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:65"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:65"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:65",
                "type": ""
              }
            ],
            "src": "14:173:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:65",
                "type": ""
              }
            ],
            "src": "192:186:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "478:92:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "488:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "500:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "511:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "496:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "496:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "488:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "530:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "555:6:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "548:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "548:14:65"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "541:6:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "541:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "523:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "523:41:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "523:41:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "447:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "458:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "469:4:65",
                "type": ""
              }
            ],
            "src": "383:187:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "607:95:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "624:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "631:3:65",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "636:10:65",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "627:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "627:20:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "617:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "617:31:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "617:31:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "664:1:65",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "667:4:65",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "657:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "657:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "657:15:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "688:1:65",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "691:4:65",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "681:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "681:15:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "681:15:65"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "575:127:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "786:842:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "832:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "841:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "844:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "834:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "834:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "834:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "807:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "816:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "803:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "803:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "828:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "799:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "799:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "796:52:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "857:37:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "884:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "871:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "871:23:65"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "861:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "903:28:65",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "913:18:65",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "907:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "958:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "967:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "970:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "960:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "960:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "960:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "946:6:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "954:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "943:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "943:14:65"
                  },
                  "nodeType": "YulIf",
                  "src": "940:34:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "983:32:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "997:9:65"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "1008:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "993:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "993:22:65"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "987:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1063:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1072:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1075:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1065:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1065:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1065:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1042:2:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1046:4:65",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1038:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1038:13:65"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1053:7:65"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "1034:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1034:27:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "1027:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1027:35:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1024:55:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1088:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "1111:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1098:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1098:16:65"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "1092:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1137:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1139:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1139:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1139:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1129:2:65"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "1133:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1126:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1126:10:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1123:36:65"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1168:17:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1182:2:65",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "1178:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1178:7:65"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "1172:2:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1194:23:65",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1214:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1208:5:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1208:9:65"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1198:6:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1226:71:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1248:6:65"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1272:2:65"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1276:4:65",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1268:3:65"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1268:13:65"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1283:2:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1264:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1264:22:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1288:2:65",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1260:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1260:31:65"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1293:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1256:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1256:40:65"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1244:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1244:53:65"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1230:10:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1356:22:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1358:16:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1358:18:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1358:18:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1315:10:65"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1327:2:65"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1312:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1312:18:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1335:10:65"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1347:6:65"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1332:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1332:22:65"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1309:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1309:46:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1306:72:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1394:2:65",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1398:10:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1387:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1387:22:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1387:22:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1425:6:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1433:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1418:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1418:18:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1418:18:65"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1482:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1491:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1494:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1484:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1484:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1484:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1459:2:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1463:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1455:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1455:11:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1468:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1451:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1451:20:65"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1473:7:65"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1448:2:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1448:33:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1445:53:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1524:6:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1532:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1520:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1520:15:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1541:2:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1545:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1537:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1537:11:65"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1550:2:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1507:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1507:46:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1507:46:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1577:6:65"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1585:2:65"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1573:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1573:15:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1590:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1569:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1569:24:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1595:1:65",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1562:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1562:35:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1562:35:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1606:16:65",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1616:6:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1606:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "752:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "763:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "775:6:65",
                "type": ""
              }
            ],
            "src": "707:921:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1703:110:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1749:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1758:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1761:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1751:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1751:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1751:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1724:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1733:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1720:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1720:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1745:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1716:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1716:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "1713:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1774:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1797:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1784:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1784:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1774:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1669:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1680:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1692:6:65",
                "type": ""
              }
            ],
            "src": "1633:180:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1919:102:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1929:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1941:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1952:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1937:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1937:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1929:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1971:9:65"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1986:6:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2002:3:65",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "2007:1:65",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1998:3:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1998:11:65"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "2011:1:65",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1994:3:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1994:19:65"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1982:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1982:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1964:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1964:51:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1964:51:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1888:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1899:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1910:4:65",
                "type": ""
              }
            ],
            "src": "1818:203:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2110:263:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2156:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2165:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2168:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2158:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2158:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2131:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2140:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2127:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2127:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2152:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2123:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2120:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2181:39:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2210:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:18:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:29:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2229:45:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2259:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2270:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2255:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2255:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2242:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:32:65"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2233:5:65",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2327:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2336:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2339:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2329:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2329:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2329:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2296:5:65"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2317:5:65"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:6:65"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2310:13:65"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2303:6:65"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2303:21:65"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2293:2:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2293:32:65"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:40:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:60:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2352:15:65",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2362:5:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2352:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2068:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2079:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2091:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2099:6:65",
                "type": ""
              }
            ],
            "src": "2026:347:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:167:65",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2511:16:65",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2520:1:65",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:65",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:65"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2513:12:65"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2513:12:65"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2486:7:65"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:65"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2482:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:23:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2507:2:65",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2478:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:32:65"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:52:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:33:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2559:9:65"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2546:12:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:23:65"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:65"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2578:48:65",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2611:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2622:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:18:65"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2588:18:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:38:65"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2423:9:65",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2434:7:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:65",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2454:6:65",
                "type": ""
              }
            ],
            "src": "2378:254:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2738:76:65",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2748:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2760:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2771:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2756:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2748:4:65"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2790:9:65"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2801:6:65"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2783:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2783:25:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2783:25:65"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2707:9:65",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2718:6:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2729:4:65",
                "type": ""
              }
            ],
            "src": "2637:177:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2993:180:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3010:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3021:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3003:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3003:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3003:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3044:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3055:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3040:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3060:2:65",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3033:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3033:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3083:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3094:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3079:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3079:18:65"
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3099:32:65",
                        "type": "",
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3072:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3072:60:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3072:60:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3141:26:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3153:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3164:2:65",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3149:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:18:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3141:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2970:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2984:4:65",
                "type": ""
              }
            ],
            "src": "2819:354:65"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3352:226:65",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:2:65",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3362:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3362:21:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3362:21:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:2:65",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3399:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:18:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3419:2:65",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:30:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:30:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3442:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3453:2:65",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3438:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3438:18:65"
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3458:34:65",
                        "type": "",
                        "value": "provided contract is not whiteli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3431:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:62:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3431:62:65"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3513:9:65"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3524:2:65",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3509:3:65"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3509:18:65"
                      },
                      {
                        "hexValue": "73746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3529:6:65",
                        "type": "",
                        "value": "sted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3502:6:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:34:65"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3502:34:65"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3545:27:65",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3557:9:65"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3568:3:65",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3553:3:65"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:19:65"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3545:4:65"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3329:9:65",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3343:4:65",
                "type": ""
              }
            ],
            "src": "3178:400:65"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"sender must be bridge contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"provided contract is not whiteli\")\n        mstore(add(headStart, 96), \"sted\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 65,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "273:2935:51:-:0;;;1030:82;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1075:30:51;;;273:2935;;14:290:65;84:6;137:2;125:9;116:7;112:23;108:32;105:52;;;153:1;150;143:12;105:52;179:16;;-1:-1:-1;;;;;224:31:65;;214:42;;204:70;;270:1;267;260:12;204:70;293:5;14:290;-1:-1:-1;;;14:290:65:o;:::-;273:2935:51;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "273:2935:51:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;821:40;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;548:14:65;;541:22;523:41;;511:2;496:18;821:40:51;;;;;;;;2227:121;;;;;;:::i;:::-;;:::i;:::-;;2354:65;;;;;;:::i;:::-;2227:121;;408:68;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;408:68:51;;;;;;-1:-1:-1;;;;;1982:32:65;;;1964:51;;1952:2;1937:18;408:68:51;1818:203:65;3039:167:51;;;;;;:::i;:::-;;:::i;318:39::-;;;;;752:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;650:50;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1804:181;;;;;;:::i;:::-;;:::i;527:68::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2783:25:65;;;2771:2;2756:18;527:68:51;2637:177:65;2227:121:51;900:13;:11;:13::i;:::-;2312:29:::1;2325:15;2312:12;:29::i;3039:167::-:0;900:13;:11;:13::i;:::-;-1:-1:-1;;;;;3164:23:51;;;::::1;;::::0;;;:8:::1;:23;::::0;;;;:35;;-1:-1:-1;;3164:35:51::1;::::0;::::1;;::::0;;;::::1;::::0;;3039:167::o;1804:181::-;900:13;:11;:13::i;:::-;2597:33;:45;;;;;;;;;;;:63;;-1:-1:-1;;;;;;2597:63:51;-1:-1:-1;;;;;2597:63:51;;;;;;;;;2670:50;;;-1:-1:-1;2670:50:51;;;;;;:63;;;;2744:18;:35;;;:42;;-1:-1:-1;;2744:42:51;;;;;;1804:181::o;1118:124::-;1172:10;-1:-1:-1;;;;;1186:14:51;1172:28;;1164:71;;;;-1:-1:-1;;;1164:71:51;;3021:2:65;1164:71:51;;;3003:21:65;3060:2;3040:18;;;3033:30;3099:32;3079:18;;;3072:60;3149:18;;1164:71:51;;;;;;;;;1118:124::o;2799:234::-;-1:-1:-1;;;;;2886:35:51;;;;;;:18;:35;;;;;;;;2865:118;;;;-1:-1:-1;;;2865:118:51;;3380:2:65;2865:118:51;;;3362:21:65;3419:2;3399:18;;;3392:30;3458:34;3438:18;;;3431:62;-1:-1:-1;;;3509:18:65;;;3502:34;3553:19;;2865:118:51;3178:400:65;2865:118:51;-1:-1:-1;;;;;2993:26:51;;;;;:9;:26;;;;;:33;;-1:-1:-1;;2993:33:51;3022:4;2993:33;;;2799:234::o;14:173:65:-;82:20;;-1:-1:-1;;;;;131:31:65;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:65:o;575:127::-;636:10;631:3;627:20;624:1;617:31;667:4;664:1;657:15;691:4;688:1;681:15;707:921;775:6;828:2;816:9;807:7;803:23;799:32;796:52;;;844:1;841;834:12;796:52;884:9;871:23;913:18;954:2;946:6;943:14;940:34;;;970:1;967;960:12;940:34;1008:6;997:9;993:22;983:32;;1053:7;1046:4;1042:2;1038:13;1034:27;1024:55;;1075:1;1072;1065:12;1024:55;1111:2;1098:16;1133:2;1129;1126:10;1123:36;;;1139:18;;:::i;:::-;1214:2;1208:9;1182:2;1268:13;;-1:-1:-1;;1264:22:65;;;1288:2;1260:31;1256:40;1244:53;;;1312:18;;;1332:22;;;1309:46;1306:72;;;1358:18;;:::i;:::-;1398:10;1394:2;1387:22;1433:2;1425:6;1418:18;1473:7;1468:2;1463;1459;1455:11;1451:20;1448:33;1445:53;;;1494:1;1491;1484:12;1445:53;1550:2;1545;1541;1537:11;1532:2;1524:6;1520:15;1507:46;1595:1;1573:15;;;1590:2;1569:24;1562:35;;;;-1:-1:-1;1577:6:65;707:921;-1:-1:-1;;;;;707:921:65:o;1633:180::-;1692:6;1745:2;1733:9;1724:7;1720:23;1716:32;1713:52;;;1761:1;1758;1751:12;1713:52;-1:-1:-1;1784:23:65;;1633:180;-1:-1:-1;1633:180:65:o;2026:347::-;2091:6;2099;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2191:29;2210:9;2191:29;:::i;:::-;2181:39;;2270:2;2259:9;2255:18;2242:32;2317:5;2310:13;2303:21;2296:5;2293:32;2283:60;;2339:1;2336;2329:12;2283:60;2362:5;2352:15;;;2026:347;;;;;:::o;2378:254::-;2446:6;2454;2507:2;2495:9;2486:7;2482:23;2478:32;2475:52;;;2523:1;2520;2513:12;2475:52;2559:9;2546:23;2536:33;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2378:254;;;;;:::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\n\nimport \"../interfaces/IERCHandler.sol\";\n\n/**\n    @title Function used across handler contracts.\n    @author ChainSafe Systems.\n    @notice This contract is intended to be used with the Bridge contract.\n */\ncontract HandlerHelpers is IERCHandler {\n    address public immutable _bridgeAddress;\n\n    // resourceID => token contract address\n    mapping(bytes32 => address) public _resourceIDToTokenContractAddress;\n\n    // token contract address => resourceID\n    mapping(address => bytes32) public _tokenContractAddressToResourceID;\n\n    // token contract address => is whitelisted\n    mapping(address => bool) public _contractWhitelist;\n\n    // token contract address => is burnable\n    mapping(address => bool) public _burnList;\n    // wtoken => bool\n    mapping(address => bool) public isWtoken;\n\n    modifier onlyBridge() {\n        _onlyBridge();\n        _;\n    }\n\n    /**\n        @param bridgeAddress Contract address of previously deployed Bridge.\n     */\n    constructor(address bridgeAddress) {\n        _bridgeAddress = bridgeAddress;\n    }\n\n    function _onlyBridge() private view {\n        require(msg.sender == _bridgeAddress, \"sender must be bridge contract\");\n    }\n\n    /**\n        @notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n        {_contractAddressToResourceID}[{contractAddress}] are not already set,\n        then sets {_resourceIDToContractAddress} with {contractAddress},\n        {_contractAddressToResourceID} with {resourceID},\n        and {_contractWhitelist} to true for {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress)\n        external\n        override\n        onlyBridge\n    {\n        _setResource(resourceID, contractAddress);\n    }\n\n    /**\n        @notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\n        to true.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external override onlyBridge {\n        _setBurnable(contractAddress);\n    }\n\n    function withdraw(bytes memory data) external virtual override {}\n\n    function withdrawETH(bytes memory data) external virtual override {}\n\n    function _setResource(bytes32 resourceID, address contractAddress)\n        internal\n    {\n        _resourceIDToTokenContractAddress[resourceID] = contractAddress;\n        _tokenContractAddressToResourceID[contractAddress] = resourceID;\n\n        _contractWhitelist[contractAddress] = true;\n    }\n\n    function _setBurnable(address contractAddress) internal {\n        require(\n            _contractWhitelist[contractAddress],\n            \"provided contract is not whitelisted\"\n        );\n        _burnList[contractAddress] = true;\n    }\n\n    function setWtoken(address wtokenAddress, bool _isWtoken)\n        external\n        override\n        onlyBridge\n    {\n        isWtoken[wtokenAddress] = _isWtoken;\n    }\n}\n",
  "sourcePath": "/Users/cuimiandashi/Documents/GitHub/chainbridge-solidity-v2.0.0-eth/contracts/handlers/HandlerHelpers.sol",
  "ast": {
    "absolutePath": "project:/contracts/handlers/HandlerHelpers.sol",
    "exportedSymbols": {
      "HandlerHelpers": [
        10661
      ],
      "IERCHandler": [
        11531
      ]
    },
    "id": 10662,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 10497,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:51"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERCHandler.sol",
        "file": "../interfaces/IERCHandler.sol",
        "id": 10498,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 10662,
        "sourceUnit": 11532,
        "src": "67:39:51",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 10500,
              "name": "IERCHandler",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 11531,
              "src": "300:11:51"
            },
            "id": 10501,
            "nodeType": "InheritanceSpecifier",
            "src": "300:11:51"
          }
        ],
        "canonicalName": "HandlerHelpers",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 10499,
          "nodeType": "StructuredDocumentation",
          "src": "108:164:51",
          "text": "@title Function used across handler contracts.\n@author ChainSafe Systems.\n@notice This contract is intended to be used with the Bridge contract."
        },
        "fullyImplemented": true,
        "id": 10661,
        "linearizedBaseContracts": [
          10661,
          11531
        ],
        "name": "HandlerHelpers",
        "nameLocation": "282:14:51",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "318c136e",
            "id": 10503,
            "mutability": "immutable",
            "name": "_bridgeAddress",
            "nameLocation": "343:14:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "318:39:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 10502,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "318:7:51",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              11523
            ],
            "constant": false,
            "functionSelector": "0a6d55d8",
            "id": 10507,
            "mutability": "mutable",
            "name": "_resourceIDToTokenContractAddress",
            "nameLocation": "443:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "408:68:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 10506,
              "keyType": {
                "id": 10504,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "416:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "408:27:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 10505,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "427:7:51",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8ba6c87",
            "id": 10511,
            "mutability": "mutable",
            "name": "_tokenContractAddressToResourceID",
            "nameLocation": "562:33:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "527:68:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 10510,
              "keyType": {
                "id": 10508,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "535:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "527:27:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 10509,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "546:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f79bea8",
            "id": 10515,
            "mutability": "mutable",
            "name": "_contractWhitelist",
            "nameLocation": "682:18:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "650:50:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10514,
              "keyType": {
                "id": 10512,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "658:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "650:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10513,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "669:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a70d081",
            "id": 10519,
            "mutability": "mutable",
            "name": "_burnList",
            "nameLocation": "784:9:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "752:41:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10518,
              "keyType": {
                "id": 10516,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "760:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "752:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10517,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "771:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "045dff97",
            "id": 10523,
            "mutability": "mutable",
            "name": "isWtoken",
            "nameLocation": "853:8:51",
            "nodeType": "VariableDeclaration",
            "scope": 10661,
            "src": "821:40:51",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 10522,
              "keyType": {
                "id": 10520,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "829:7:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "821:24:51",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 10521,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "840:4:51",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 10529,
              "nodeType": "Block",
              "src": "890:41:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 10525,
                      "name": "_onlyBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10553,
                      "src": "900:11:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 10526,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "900:13:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10527,
                  "nodeType": "ExpressionStatement",
                  "src": "900:13:51"
                },
                {
                  "id": 10528,
                  "nodeType": "PlaceholderStatement",
                  "src": "923:1:51"
                }
              ]
            },
            "id": 10530,
            "name": "onlyBridge",
            "nameLocation": "877:10:51",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 10524,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "887:2:51"
            },
            "src": "868:63:51",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10540,
              "nodeType": "Block",
              "src": "1065:47:51",
              "statements": [
                {
                  "expression": {
                    "id": 10538,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 10536,
                      "name": "_bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10503,
                      "src": "1075:14:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10537,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10533,
                      "src": "1092:13:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1075:30:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10539,
                  "nodeType": "ExpressionStatement",
                  "src": "1075:30:51"
                }
              ]
            },
            "documentation": {
              "id": 10531,
              "nodeType": "StructuredDocumentation",
              "src": "937:88:51",
              "text": "@param bridgeAddress Contract address of previously deployed Bridge."
            },
            "id": 10541,
            "implemented": true,
            "kind": "constructor",
            "modifiers": [],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10534,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10533,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "1050:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10541,
                  "src": "1042:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10532,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1042:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1041:23:51"
            },
            "returnParameters": {
              "id": 10535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1065:0:51"
            },
            "scope": 10661,
            "src": "1030:82:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 10552,
              "nodeType": "Block",
              "src": "1154:88:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 10548,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 10545,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1172:3:51",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 10546,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1172:10:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 10547,
                          "name": "_bridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10503,
                          "src": "1186:14:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1172:28:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "id": 10549,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1202:32:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        },
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        }
                      ],
                      "id": 10544,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1164:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10550,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1164:71:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10551,
                  "nodeType": "ExpressionStatement",
                  "src": "1164:71:51"
                }
              ]
            },
            "id": 10553,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyBridge",
            "nameLocation": "1127:11:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10542,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1138:2:51"
            },
            "returnParameters": {
              "id": 10543,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1154:0:51"
            },
            "scope": 10661,
            "src": "1118:124:51",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              11498
            ],
            "body": {
              "id": 10569,
              "nodeType": "Block",
              "src": "1927:58:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10565,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10556,
                        "src": "1950:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 10566,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10558,
                        "src": "1962:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10564,
                      "name": "_setResource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10624,
                      "src": "1937:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 10567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1937:41:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10568,
                  "nodeType": "ExpressionStatement",
                  "src": "1937:41:51"
                }
              ]
            },
            "documentation": {
              "id": 10554,
              "nodeType": "StructuredDocumentation",
              "src": "1248:551:51",
              "text": "@notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n{_contractAddressToResourceID}[{contractAddress}] are not already set,\nthen sets {_resourceIDToContractAddress} with {contractAddress},\n{_contractAddressToResourceID} with {resourceID},\nand {_contractWhitelist} to true for {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 10570,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10562,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10561,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10530,
                  "src": "1912:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "1912:10:51"
              }
            ],
            "name": "setResource",
            "nameLocation": "1813:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10560,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "1895:8:51"
            },
            "parameters": {
              "id": 10559,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10556,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "1833:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10570,
                  "src": "1825:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10555,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1825:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10558,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1853:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10570,
                  "src": "1845:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10557,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1845:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1824:45:51"
            },
            "returnParameters": {
              "id": 10563,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1927:0:51"
            },
            "scope": 10661,
            "src": "1804:181:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11504
            ],
            "body": {
              "id": 10583,
              "nodeType": "Block",
              "src": "2302:46:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 10580,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10573,
                        "src": "2325:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 10579,
                      "name": "_setBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10643,
                      "src": "2312:12:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 10581,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2312:29:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10582,
                  "nodeType": "ExpressionStatement",
                  "src": "2312:29:51"
                }
              ]
            },
            "documentation": {
              "id": 10571,
              "nodeType": "StructuredDocumentation",
              "src": "1991:231:51",
              "text": "@notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\nto true.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 10584,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10577,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10576,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10530,
                  "src": "2291:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "2291:10:51"
              }
            ],
            "name": "setBurnable",
            "nameLocation": "2236:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10575,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2282:8:51"
            },
            "parameters": {
              "id": 10574,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10573,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2256:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10584,
                  "src": "2248:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10572,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2248:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2247:25:51"
            },
            "returnParameters": {
              "id": 10578,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2302:0:51"
            },
            "scope": 10661,
            "src": "2227:121:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11510
            ],
            "body": {
              "id": 10590,
              "nodeType": "Block",
              "src": "2417:2:51",
              "statements": []
            },
            "functionSelector": "0968f264",
            "id": 10591,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2363:8:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10588,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2408:8:51"
            },
            "parameters": {
              "id": 10587,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10586,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2385:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10591,
                  "src": "2372:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10585,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2372:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2371:19:51"
            },
            "returnParameters": {
              "id": 10589,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2417:0:51"
            },
            "scope": 10661,
            "src": "2354:65:51",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              11515
            ],
            "body": {
              "id": 10597,
              "nodeType": "Block",
              "src": "2491:2:51",
              "statements": []
            },
            "functionSelector": "ab5c7bf1",
            "id": 10598,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nameLocation": "2434:11:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10595,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2482:8:51"
            },
            "parameters": {
              "id": 10594,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10593,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2459:4:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10598,
                  "src": "2446:17:51",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 10592,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2446:5:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2445:19:51"
            },
            "returnParameters": {
              "id": 10596,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2491:0:51"
            },
            "scope": 10661,
            "src": "2425:68:51",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 10623,
              "nodeType": "Block",
              "src": "2587:206:51",
              "statements": [
                {
                  "expression": {
                    "id": 10609,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10605,
                        "name": "_resourceIDToTokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10507,
                        "src": "2597:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 10607,
                      "indexExpression": {
                        "id": 10606,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10600,
                        "src": "2631:10:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2597:45:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10608,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10602,
                      "src": "2645:15:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2597:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 10610,
                  "nodeType": "ExpressionStatement",
                  "src": "2597:63:51"
                },
                {
                  "expression": {
                    "id": 10615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10611,
                        "name": "_tokenContractAddressToResourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10511,
                        "src": "2670:33:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 10613,
                      "indexExpression": {
                        "id": 10612,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10602,
                        "src": "2704:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2670:50:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10614,
                      "name": "resourceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10600,
                      "src": "2723:10:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2670:63:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 10616,
                  "nodeType": "ExpressionStatement",
                  "src": "2670:63:51"
                },
                {
                  "expression": {
                    "id": 10621,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10617,
                        "name": "_contractWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10515,
                        "src": "2744:18:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10619,
                      "indexExpression": {
                        "id": 10618,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10602,
                        "src": "2763:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2744:35:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10620,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2782:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2744:42:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10622,
                  "nodeType": "ExpressionStatement",
                  "src": "2744:42:51"
                }
              ]
            },
            "id": 10624,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResource",
            "nameLocation": "2508:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10603,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10600,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "2529:10:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10624,
                  "src": "2521:18:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 10599,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2521:7:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10602,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2549:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10624,
                  "src": "2541:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2541:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2520:45:51"
            },
            "returnParameters": {
              "id": 10604,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2587:0:51"
            },
            "scope": 10661,
            "src": "2499:294:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 10642,
              "nodeType": "Block",
              "src": "2855:178:51",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 10630,
                          "name": "_contractWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10515,
                          "src": "2886:18:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 10632,
                        "indexExpression": {
                          "id": 10631,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 10626,
                          "src": "2905:15:51",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "2886:35:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c6973746564",
                        "id": 10633,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "2935:38:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        },
                        "value": "provided contract is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        }
                      ],
                      "id": 10629,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "2865:7:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 10634,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2865:118:51",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 10635,
                  "nodeType": "ExpressionStatement",
                  "src": "2865:118:51"
                },
                {
                  "expression": {
                    "id": 10640,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10636,
                        "name": "_burnList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10519,
                        "src": "2993:9:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10638,
                      "indexExpression": {
                        "id": 10637,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10626,
                        "src": "3003:15:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2993:26:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 10639,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3022:4:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2993:33:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10641,
                  "nodeType": "ExpressionStatement",
                  "src": "2993:33:51"
                }
              ]
            },
            "id": 10643,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBurnable",
            "nameLocation": "2808:12:51",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 10627,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10626,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2829:15:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10643,
                  "src": "2821:23:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10625,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2821:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2820:25:51"
            },
            "returnParameters": {
              "id": 10628,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2855:0:51"
            },
            "scope": 10661,
            "src": "2799:234:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              11530
            ],
            "body": {
              "id": 10659,
              "nodeType": "Block",
              "src": "3154:52:51",
              "statements": [
                {
                  "expression": {
                    "id": 10657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 10653,
                        "name": "isWtoken",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10523,
                        "src": "3164:8:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 10655,
                      "indexExpression": {
                        "id": 10654,
                        "name": "wtokenAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 10645,
                        "src": "3173:13:51",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3164:23:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 10656,
                      "name": "_isWtoken",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 10647,
                      "src": "3190:9:51",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3164:35:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 10658,
                  "nodeType": "ExpressionStatement",
                  "src": "3164:35:51"
                }
              ]
            },
            "functionSelector": "2129da19",
            "id": 10660,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 10651,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 10650,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 10530,
                  "src": "3139:10:51"
                },
                "nodeType": "ModifierInvocation",
                "src": "3139:10:51"
              }
            ],
            "name": "setWtoken",
            "nameLocation": "3048:9:51",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 10649,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3122:8:51"
            },
            "parameters": {
              "id": 10648,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 10645,
                  "mutability": "mutable",
                  "name": "wtokenAddress",
                  "nameLocation": "3066:13:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10660,
                  "src": "3058:21:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 10644,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3058:7:51",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 10647,
                  "mutability": "mutable",
                  "name": "_isWtoken",
                  "nameLocation": "3086:9:51",
                  "nodeType": "VariableDeclaration",
                  "scope": 10660,
                  "src": "3081:14:51",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 10646,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3081:4:51",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3057:39:51"
            },
            "returnParameters": {
              "id": 10652,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3154:0:51"
            },
            "scope": 10661,
            "src": "3039:167:51",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 10662,
        "src": "273:2935:51",
        "usedErrors": []
      }
    ],
    "src": "42:3167:51"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-06-05T16:30:50.858Z",
  "devdoc": {
    "author": "ChainSafe Systems.",
    "kind": "dev",
    "methods": {
      "constructor": {
        "params": {
          "bridgeAddress": "Contract address of previously deployed Bridge."
        }
      },
      "setBurnable(address)": {
        "params": {
          "contractAddress": "Address of contract to be used when making or executing deposits."
        }
      },
      "setResource(bytes32,address)": {
        "params": {
          "contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
          "resourceID": "ResourceID to be used when making deposits."
        }
      },
      "withdraw(bytes)": {
        "params": {
          "data": "ABI-encoded withdrawal params relevant to the handler."
        }
      }
    },
    "stateVariables": {
      "_resourceIDToTokenContractAddress": {
        "params": {
          "resourceID": "ResourceID to be used."
        },
        "return": "address The {tokenContractAddress} that is currently set for the resourceID.",
        "returns": {
          "_0": "address The {tokenContractAddress} that is currently set for the resourceID."
        }
      }
    },
    "title": "Function used across handler contracts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_resourceIDToTokenContractAddress(bytes32)": {
        "notice": "Exposing getter for {_resourceIDToTokenContractAddress}."
      },
      "setBurnable(address)": {
        "notice": "First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true."
      },
      "setResource(bytes32,address)": {
        "notice": "First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}."
      },
      "withdraw(bytes)": {
        "notice": "Withdraw funds from ERC safes."
      }
    },
    "notice": "This contract is intended to be used with the Bridge contract.",
    "version": 1
  }
}