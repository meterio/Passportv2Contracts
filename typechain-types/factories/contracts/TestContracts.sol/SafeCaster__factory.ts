/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  SafeCaster,
  SafeCasterInterface,
} from "../../../contracts/TestContracts.sol/SafeCaster";

const _abi = [
  {
    inputs: [
      {
        internalType: "uint256",
        name: "input",
        type: "uint256",
      },
    ],
    name: "toUint200",
    outputs: [
      {
        internalType: "uint200",
        name: "",
        type: "uint200",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610111806100206000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c8063720ad67414602d575b600080fd5b603c603836600460c3565b6058565b6040516001600160c81b03909116815260200160405180910390f35b60006061826067565b92915050565b6000600160c81b821060bf5760405162461bcd60e51b815260206004820152601e60248201527f76616c756520646f6573206e6f742066697420696e2032303020626974730000604482015260640160405180910390fd5b5090565b60006020828403121560d457600080fd5b503591905056fea26469706673582212207cd5bfbe0390485a51f6975c28d1d9811bc532990ad37d34644d8c2bec170fff64736f6c634300080b0033";

type SafeCasterConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: SafeCasterConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class SafeCaster__factory extends ContractFactory {
  constructor(...args: SafeCasterConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<SafeCaster> {
    return super.deploy(overrides || {}) as Promise<SafeCaster>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): SafeCaster {
    return super.attach(address) as SafeCaster;
  }
  override connect(signer: Signer): SafeCaster__factory {
    return super.connect(signer) as SafeCaster__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): SafeCasterInterface {
    return new utils.Interface(_abi) as SafeCasterInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): SafeCaster {
    return new Contract(address, _abi, signerOrProvider) as SafeCaster;
  }
}
