/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  ReturnData,
  ReturnDataInterface,
} from "../../../contracts/TestContracts.sol/ReturnData";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "argument",
        type: "string",
      },
    ],
    name: "returnData",
    outputs: [
      {
        internalType: "bytes32",
        name: "response",
        type: "bytes32",
      },
    ],
    stateMutability: "pure",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b50610154806100206000396000f3fe608060405234801561001057600080fd5b506004361061002b5760003560e01c8063e5f92e8614610030575b600080fd5b61004561003e36600461006d565b6020015190565b60405190815260200160405180910390f35b634e487b7160e01b600052604160045260246000fd5b60006020828403121561007f57600080fd5b813567ffffffffffffffff8082111561009757600080fd5b818401915084601f8301126100ab57600080fd5b8135818111156100bd576100bd610057565b604051601f8201601f19908116603f011681019083821181831017156100e5576100e5610057565b816040528281528760208487010111156100fe57600080fd5b82602086016020830137600092810160200192909252509594505050505056fea2646970667358221220f9edb2e71bc923d651b077dc71ee9a65f1daec3912211f30f2ace1d54c95c00a64736f6c634300080b0033";

type ReturnDataConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ReturnDataConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ReturnData__factory extends ContractFactory {
  constructor(...args: ReturnDataConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: string }
  ): Promise<ReturnData> {
    return super.deploy(overrides || {}) as Promise<ReturnData>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: string }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): ReturnData {
    return super.attach(address) as ReturnData;
  }
  override connect(signer: Signer): ReturnData__factory {
    return super.connect(signer) as ReturnData__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ReturnDataInterface {
    return new utils.Interface(_abi) as ReturnDataInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ReturnData {
    return new Contract(address, _abi, signerOrProvider) as ReturnData;
  }
}
