{
  "contractName": "HandlerHelpersUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "_bridgeAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_burnList",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_contractWhitelist",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "_resourceIDToTokenContractAddress",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "_tokenContractAddressToResourceID",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "isNative",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resourceID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setResource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "resourceID",
          "type": "bytes32"
        },
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "removeResource",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "contractAddress",
          "type": "address"
        }
      ],
      "name": "setBurnable",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes",
          "name": "data",
          "type": "bytes"
        }
      ],
      "name": "withdrawETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "nativeAddress",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "_isNative",
          "type": "bool"
        }
      ],
      "name": "setNative",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"_bridgeAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_burnList\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_contractWhitelist\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"_resourceIDToTokenContractAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"_tokenContractAddressToResourceID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"isNative\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"removeResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setBurnable\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"nativeAddress\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"_isNative\",\"type\":\"bool\"}],\"name\":\"setNative\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"resourceID\",\"type\":\"bytes32\"},{\"internalType\":\"address\",\"name\":\"contractAddress\",\"type\":\"address\"}],\"name\":\"setResource\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"withdrawETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"ChainSafe Systems.\",\"kind\":\"dev\",\"methods\":{\"setBurnable(address)\":{\"params\":{\"contractAddress\":\"Address of contract to be used when making or executing deposits.\"}},\"setResource(bytes32,address)\":{\"params\":{\"contractAddress\":\"Address of contract to be called when a deposit is made and a deposited is executed.\",\"resourceID\":\"ResourceID to be used when making deposits.\"}},\"withdraw(bytes)\":{\"params\":{\"data\":\"ABI-encoded withdrawal params relevant to the handler.\"}}},\"stateVariables\":{\"_resourceIDToTokenContractAddress\":{\"params\":{\"resourceID\":\"ResourceID to be used.\"},\"return\":\"address The {tokenContractAddress} that is currently set for the resourceID.\",\"returns\":{\"_0\":\"address The {tokenContractAddress} that is currently set for the resourceID.\"}}},\"title\":\"Function used across handler contracts.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"_resourceIDToTokenContractAddress(bytes32)\":{\"notice\":\"Exposing getter for {_resourceIDToTokenContractAddress}.\"},\"setBurnable(address)\":{\"notice\":\"First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true.\"},\"setResource(bytes32,address)\":{\"notice\":\"First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}.\"},\"withdraw(bytes)\":{\"notice\":\"Withdraw funds from ERC safes.\"}},\"notice\":\"This contract is intended to be used with the Bridge contract.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/handlers/HandlerHelpersUpgradeable.sol\":\"HandlerHelpersUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"project:/contracts/handlers/HandlerHelpersUpgradeable.sol\":{\"keccak256\":\"0xc8d3aebf37ddcc67c7da570789ec10f0f1025b0cdb2f35bfc1351422aa60fe39\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://4130b070791d232ff83d9aa31539f541012011ba5222856bf12ac656a6bceee5\",\"dweb:/ipfs/QmNYCtkEu6rJDdFzYwAxFQGKdpVCjd4H5urwcQzU35wixb\"]},\"project:/contracts/interfaces/IERCHandler.sol\":{\"keccak256\":\"0xd6a37a5b96953f6a0a5c06eefbb1f72e5014aa909bfc91e12f0771631334f3d9\",\"license\":\"LGPL-3.0-only\",\"urls\":[\"bzz-raw://96dfe809eb6585cb314bde2f9702c39e56c1e2863d21b4ec6871bd379e298680\",\"dweb:/ipfs/QmPp4sLvZfp2qEGNHrsNnKMJhHBwwiQVB5MVJaNUoCMohF\"]}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b506105c4806100206000396000f3fe608060405234801561001057600080fd5b50600436106100b45760003560e01c80637f79bea8116100715780637f79bea814610184578063a9815751146101a7578063ab5c7bf1146100ce578063b2b8b5dd146101ba578063b8fa3736146101dd578063c8ba6c87146101f057600080fd5b806307b7ed99146100b95780630968f264146100ce5780630a6d55d8146100df578063318c136e146101255780636a70d0811461013e578063789d771114610171575b600080fd5b6100cc6100c7366004610424565b61021e565b005b6100cc6100dc36600461045c565b50565b6101086100ed36600461050d565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600054610108906201000090046001600160a01b031681565b61016161014c366004610424565b60046020526000908152604090205460ff1681565b604051901515815260200161011c565b6100cc61017f366004610526565b61022f565b610161610192366004610424565b60036020526000908152604090205460ff1681565b6100cc6101b5366004610562565b610262565b6101616101c8366004610424565b60056020526000908152604090205460ff1681565b6100cc6101eb366004610562565b6102b1565b6102106101fe366004610424565b60026020526000908152604090205481565b60405190815260200161011c565b610226610309565b6100dc81610370565b610237610309565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b61026a610309565b600091825260016020908152604080842080546001600160a01b03191690556001600160a01b0392909216835260028152818320839055600390529020805460ff19169055565b6102b9610309565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6000546201000090046001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526003602052604090205460ff166103e45760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610365565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80356001600160a01b038116811461041f57600080fd5b919050565b60006020828403121561043657600080fd5b61043f82610408565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561046e57600080fd5b813567ffffffffffffffff8082111561048657600080fd5b818401915084601f83011261049a57600080fd5b8135818111156104ac576104ac610446565b604051601f8201601f19908116603f011681019083821181831017156104d4576104d4610446565b816040528281528760208487010111156104ed57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561051f57600080fd5b5035919050565b6000806040838503121561053957600080fd5b61054283610408565b91506020830135801515811461055757600080fd5b809150509250929050565b6000806040838503121561057557600080fd5b8235915061058560208401610408565b9050925092905056fea26469706673582212208b5a6f4201787e027e7baf9214341a210762288509228fa179b7ca819ce9af6f64736f6c634300080b0033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100b45760003560e01c80637f79bea8116100715780637f79bea814610184578063a9815751146101a7578063ab5c7bf1146100ce578063b2b8b5dd146101ba578063b8fa3736146101dd578063c8ba6c87146101f057600080fd5b806307b7ed99146100b95780630968f264146100ce5780630a6d55d8146100df578063318c136e146101255780636a70d0811461013e578063789d771114610171575b600080fd5b6100cc6100c7366004610424565b61021e565b005b6100cc6100dc36600461045c565b50565b6101086100ed36600461050d565b6001602052600090815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b600054610108906201000090046001600160a01b031681565b61016161014c366004610424565b60046020526000908152604090205460ff1681565b604051901515815260200161011c565b6100cc61017f366004610526565b61022f565b610161610192366004610424565b60036020526000908152604090205460ff1681565b6100cc6101b5366004610562565b610262565b6101616101c8366004610424565b60056020526000908152604090205460ff1681565b6100cc6101eb366004610562565b6102b1565b6102106101fe366004610424565b60026020526000908152604090205481565b60405190815260200161011c565b610226610309565b6100dc81610370565b610237610309565b6001600160a01b03919091166000908152600560205260409020805460ff1916911515919091179055565b61026a610309565b600091825260016020908152604080842080546001600160a01b03191690556001600160a01b0392909216835260028152818320839055600390529020805460ff19169055565b6102b9610309565b600082815260016020818152604080842080546001600160a01b0319166001600160a01b0387169081179091558452600282528084208690556003909152909120805460ff191690911790555050565b6000546201000090046001600160a01b0316331461036e5760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064015b60405180910390fd5b565b6001600160a01b03811660009081526003602052604090205460ff166103e45760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b6064820152608401610365565b6001600160a01b03166000908152600460205260409020805460ff19166001179055565b80356001600160a01b038116811461041f57600080fd5b919050565b60006020828403121561043657600080fd5b61043f82610408565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561046e57600080fd5b813567ffffffffffffffff8082111561048657600080fd5b818401915084601f83011261049a57600080fd5b8135818111156104ac576104ac610446565b604051601f8201601f19908116603f011681019083821181831017156104d4576104d4610446565b816040528281528760208487010111156104ed57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561051f57600080fd5b5035919050565b6000806040838503121561053957600080fd5b61054283610408565b91506020830135801515811461055757600080fd5b809150509250929050565b6000806040838503121561057557600080fd5b8235915061058560208401610408565b9050925092905056fea26469706673582212208b5a6f4201787e027e7baf9214341a210762288509228fa179b7ca819ce9af6f64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:3580:103",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:103",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "63:124:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "73:29:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "95:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "82:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "82:20:103"
                  },
                  "variableNames": [
                    {
                      "name": "value",
                      "nodeType": "YulIdentifier",
                      "src": "73:5:103"
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "165:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "174:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "177:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "167:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "167:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "167:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "124:5:103"
                          },
                          {
                            "arguments": [
                              {
                                "name": "value",
                                "nodeType": "YulIdentifier",
                                "src": "135:5:103"
                              },
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "150:3:103",
                                        "type": "",
                                        "value": "160"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "155:1:103",
                                        "type": "",
                                        "value": "1"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "shl",
                                      "nodeType": "YulIdentifier",
                                      "src": "146:3:103"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "146:11:103"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "159:1:103",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "sub",
                                  "nodeType": "YulIdentifier",
                                  "src": "142:3:103"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "142:19:103"
                              }
                            ],
                            "functionName": {
                              "name": "and",
                              "nodeType": "YulIdentifier",
                              "src": "131:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "131:31:103"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "121:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "121:42:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "114:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "114:50:103"
                  },
                  "nodeType": "YulIf",
                  "src": "111:70:103"
                }
              ]
            },
            "name": "abi_decode_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "offset",
                "nodeType": "YulTypedName",
                "src": "42:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value",
                "nodeType": "YulTypedName",
                "src": "53:5:103",
                "type": ""
              }
            ],
            "src": "14:173:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "262:116:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "308:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "317:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "320:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "310:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "310:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "310:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "283:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "292:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "279:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "279:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "304:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "275:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "275:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "272:52:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "333:39:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "362:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "343:18:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "343:29:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "333:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "228:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "239:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "251:6:103",
                "type": ""
              }
            ],
            "src": "192:186:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "415:95:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "432:1:103",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "arguments": [
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "439:3:103",
                            "type": "",
                            "value": "224"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "444:10:103",
                            "type": "",
                            "value": "0x4e487b71"
                          }
                        ],
                        "functionName": {
                          "name": "shl",
                          "nodeType": "YulIdentifier",
                          "src": "435:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "435:20:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "425:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "425:31:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "425:31:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "472:1:103",
                        "type": "",
                        "value": "4"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "475:4:103",
                        "type": "",
                        "value": "0x41"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "465:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "465:15:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "465:15:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "496:1:103",
                        "type": "",
                        "value": "0"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "499:4:103",
                        "type": "",
                        "value": "0x24"
                      }
                    ],
                    "functionName": {
                      "name": "revert",
                      "nodeType": "YulIdentifier",
                      "src": "489:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "489:15:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "489:15:103"
                }
              ]
            },
            "name": "panic_error_0x41",
            "nodeType": "YulFunctionDefinition",
            "src": "383:127:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "594:842:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "640:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "649:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "652:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "642:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "642:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "642:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "615:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "624:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "611:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "611:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "636:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "607:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "607:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "604:52:103"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "665:37:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "692:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "679:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "679:23:103"
                  },
                  "variables": [
                    {
                      "name": "offset",
                      "nodeType": "YulTypedName",
                      "src": "669:6:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "711:28:103",
                  "value": {
                    "kind": "number",
                    "nodeType": "YulLiteral",
                    "src": "721:18:103",
                    "type": "",
                    "value": "0xffffffffffffffff"
                  },
                  "variables": [
                    {
                      "name": "_1",
                      "nodeType": "YulTypedName",
                      "src": "715:2:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "766:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "775:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "778:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "768:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "768:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "768:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "754:6:103"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "762:2:103"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "751:2:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "751:14:103"
                  },
                  "nodeType": "YulIf",
                  "src": "748:34:103"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "791:32:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "805:9:103"
                      },
                      {
                        "name": "offset",
                        "nodeType": "YulIdentifier",
                        "src": "816:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "801:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "801:22:103"
                  },
                  "variables": [
                    {
                      "name": "_2",
                      "nodeType": "YulTypedName",
                      "src": "795:2:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "871:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "880:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "883:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "873:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "873:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "873:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "850:2:103"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "854:4:103",
                                "type": "",
                                "value": "0x1f"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "846:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "846:13:103"
                          },
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "861:7:103"
                          }
                        ],
                        "functionName": {
                          "name": "slt",
                          "nodeType": "YulIdentifier",
                          "src": "842:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "842:27:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "835:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "835:35:103"
                  },
                  "nodeType": "YulIf",
                  "src": "832:55:103"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "896:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "_2",
                        "nodeType": "YulIdentifier",
                        "src": "919:2:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "906:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "906:16:103"
                  },
                  "variables": [
                    {
                      "name": "_3",
                      "nodeType": "YulTypedName",
                      "src": "900:2:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "945:22:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "947:16:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "947:18:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "947:18:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "937:2:103"
                      },
                      {
                        "name": "_1",
                        "nodeType": "YulIdentifier",
                        "src": "941:2:103"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "934:2:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "934:10:103"
                  },
                  "nodeType": "YulIf",
                  "src": "931:36:103"
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "976:17:103",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "990:2:103",
                        "type": "",
                        "value": "31"
                      }
                    ],
                    "functionName": {
                      "name": "not",
                      "nodeType": "YulIdentifier",
                      "src": "986:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "986:7:103"
                  },
                  "variables": [
                    {
                      "name": "_4",
                      "nodeType": "YulTypedName",
                      "src": "980:2:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1002:23:103",
                  "value": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1022:2:103",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "mload",
                      "nodeType": "YulIdentifier",
                      "src": "1016:5:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1016:9:103"
                  },
                  "variables": [
                    {
                      "name": "memPtr",
                      "nodeType": "YulTypedName",
                      "src": "1006:6:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "1034:71:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1056:6:103"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "arguments": [
                                      {
                                        "name": "_3",
                                        "nodeType": "YulIdentifier",
                                        "src": "1080:2:103"
                                      },
                                      {
                                        "kind": "number",
                                        "nodeType": "YulLiteral",
                                        "src": "1084:4:103",
                                        "type": "",
                                        "value": "0x1f"
                                      }
                                    ],
                                    "functionName": {
                                      "name": "add",
                                      "nodeType": "YulIdentifier",
                                      "src": "1076:3:103"
                                    },
                                    "nodeType": "YulFunctionCall",
                                    "src": "1076:13:103"
                                  },
                                  {
                                    "name": "_4",
                                    "nodeType": "YulIdentifier",
                                    "src": "1091:2:103"
                                  }
                                ],
                                "functionName": {
                                  "name": "and",
                                  "nodeType": "YulIdentifier",
                                  "src": "1072:3:103"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1072:22:103"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1096:2:103",
                                "type": "",
                                "value": "63"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1068:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1068:31:103"
                          },
                          {
                            "name": "_4",
                            "nodeType": "YulIdentifier",
                            "src": "1101:2:103"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1064:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1064:40:103"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1052:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1052:53:103"
                  },
                  "variables": [
                    {
                      "name": "newFreePtr",
                      "nodeType": "YulTypedName",
                      "src": "1038:10:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1164:22:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [],
                          "functionName": {
                            "name": "panic_error_0x41",
                            "nodeType": "YulIdentifier",
                            "src": "1166:16:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1166:18:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1166:18:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1123:10:103"
                          },
                          {
                            "name": "_1",
                            "nodeType": "YulIdentifier",
                            "src": "1135:2:103"
                          }
                        ],
                        "functionName": {
                          "name": "gt",
                          "nodeType": "YulIdentifier",
                          "src": "1120:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1120:18:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "newFreePtr",
                            "nodeType": "YulIdentifier",
                            "src": "1143:10:103"
                          },
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1155:6:103"
                          }
                        ],
                        "functionName": {
                          "name": "lt",
                          "nodeType": "YulIdentifier",
                          "src": "1140:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1140:22:103"
                      }
                    ],
                    "functionName": {
                      "name": "or",
                      "nodeType": "YulIdentifier",
                      "src": "1117:2:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1117:46:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1114:72:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1202:2:103",
                        "type": "",
                        "value": "64"
                      },
                      {
                        "name": "newFreePtr",
                        "nodeType": "YulIdentifier",
                        "src": "1206:10:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1195:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1195:22:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1195:22:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "memPtr",
                        "nodeType": "YulIdentifier",
                        "src": "1233:6:103"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1241:2:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1226:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1226:18:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1226:18:103"
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1290:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1299:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1302:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1292:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1292:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1292:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "_2",
                                "nodeType": "YulIdentifier",
                                "src": "1267:2:103"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1271:2:103"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1263:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1263:11:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1276:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1259:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1259:20:103"
                      },
                      {
                        "name": "dataEnd",
                        "nodeType": "YulIdentifier",
                        "src": "1281:7:103"
                      }
                    ],
                    "functionName": {
                      "name": "gt",
                      "nodeType": "YulIdentifier",
                      "src": "1256:2:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1256:33:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1253:53:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "memPtr",
                            "nodeType": "YulIdentifier",
                            "src": "1332:6:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1340:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1328:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1328:15:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "_2",
                            "nodeType": "YulIdentifier",
                            "src": "1349:2:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1353:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1345:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1345:11:103"
                      },
                      {
                        "name": "_3",
                        "nodeType": "YulIdentifier",
                        "src": "1358:2:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldatacopy",
                      "nodeType": "YulIdentifier",
                      "src": "1315:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1315:46:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1315:46:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "memPtr",
                                "nodeType": "YulIdentifier",
                                "src": "1385:6:103"
                              },
                              {
                                "name": "_3",
                                "nodeType": "YulIdentifier",
                                "src": "1393:2:103"
                              }
                            ],
                            "functionName": {
                              "name": "add",
                              "nodeType": "YulIdentifier",
                              "src": "1381:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1381:15:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "1398:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "1377:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1377:24:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1403:1:103",
                        "type": "",
                        "value": "0"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1370:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1370:35:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1370:35:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1414:16:103",
                  "value": {
                    "name": "memPtr",
                    "nodeType": "YulIdentifier",
                    "src": "1424:6:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1414:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes_memory_ptr",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "560:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "571:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "583:6:103",
                "type": ""
              }
            ],
            "src": "515:921:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1511:110:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "1557:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1566:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "1569:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "1559:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "1559:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "1559:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "1532:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "1541:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "1528:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1528:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1553:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "1524:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1524:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "1521:52:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "1582:33:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1605:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "1592:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1592:23:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "1582:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1477:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "1488:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1500:6:103",
                "type": ""
              }
            ],
            "src": "1441:180:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1727:102:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1737:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1749:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1760:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1745:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1745:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1737:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1779:9:103"
                      },
                      {
                        "arguments": [
                          {
                            "name": "value0",
                            "nodeType": "YulIdentifier",
                            "src": "1794:6:103"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1810:3:103",
                                    "type": "",
                                    "value": "160"
                                  },
                                  {
                                    "kind": "number",
                                    "nodeType": "YulLiteral",
                                    "src": "1815:1:103",
                                    "type": "",
                                    "value": "1"
                                  }
                                ],
                                "functionName": {
                                  "name": "shl",
                                  "nodeType": "YulIdentifier",
                                  "src": "1806:3:103"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "1806:11:103"
                              },
                              {
                                "kind": "number",
                                "nodeType": "YulLiteral",
                                "src": "1819:1:103",
                                "type": "",
                                "value": "1"
                              }
                            ],
                            "functionName": {
                              "name": "sub",
                              "nodeType": "YulIdentifier",
                              "src": "1802:3:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1802:19:103"
                          }
                        ],
                        "functionName": {
                          "name": "and",
                          "nodeType": "YulIdentifier",
                          "src": "1790:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1790:32:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1772:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1772:51:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1772:51:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_address__to_t_address__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1696:9:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1707:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1718:4:103",
                "type": ""
              }
            ],
            "src": "1626:203:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "1929:92:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "1939:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1951:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "1962:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "1947:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1947:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "1939:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "1981:9:103"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "2006:6:103"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "1999:6:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "1999:14:103"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "1992:6:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "1992:22:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "1974:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "1974:41:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "1974:41:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "1898:9:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "1909:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "1920:4:103",
                "type": ""
              }
            ],
            "src": "1834:187:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2110:263:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2156:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2165:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2168:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2158:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2158:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2158:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2131:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2140:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2127:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2127:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2152:2:103",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2123:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2123:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "2120:52:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2181:39:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2210:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2191:18:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2191:29:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2181:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulVariableDeclaration",
                  "src": "2229:45:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2259:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2270:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2255:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2255:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2242:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2242:32:103"
                  },
                  "variables": [
                    {
                      "name": "value",
                      "nodeType": "YulTypedName",
                      "src": "2233:5:103",
                      "type": ""
                    }
                  ]
                },
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2327:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2336:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2339:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2329:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2329:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2329:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "value",
                            "nodeType": "YulIdentifier",
                            "src": "2296:5:103"
                          },
                          {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "name": "value",
                                    "nodeType": "YulIdentifier",
                                    "src": "2317:5:103"
                                  }
                                ],
                                "functionName": {
                                  "name": "iszero",
                                  "nodeType": "YulIdentifier",
                                  "src": "2310:6:103"
                                },
                                "nodeType": "YulFunctionCall",
                                "src": "2310:13:103"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "2303:6:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "2303:21:103"
                          }
                        ],
                        "functionName": {
                          "name": "eq",
                          "nodeType": "YulIdentifier",
                          "src": "2293:2:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2293:32:103"
                      }
                    ],
                    "functionName": {
                      "name": "iszero",
                      "nodeType": "YulIdentifier",
                      "src": "2286:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2286:40:103"
                  },
                  "nodeType": "YulIf",
                  "src": "2283:60:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2352:15:103",
                  "value": {
                    "name": "value",
                    "nodeType": "YulIdentifier",
                    "src": "2362:5:103"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2352:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_addresst_bool",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2068:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2079:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2091:6:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2099:6:103",
                "type": ""
              }
            ],
            "src": "2026:347:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2465:167:103",
              "statements": [
                {
                  "body": {
                    "nodeType": "YulBlock",
                    "src": "2511:16:103",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2520:1:103",
                              "type": "",
                              "value": "0"
                            },
                            {
                              "kind": "number",
                              "nodeType": "YulLiteral",
                              "src": "2523:1:103",
                              "type": "",
                              "value": "0"
                            }
                          ],
                          "functionName": {
                            "name": "revert",
                            "nodeType": "YulIdentifier",
                            "src": "2513:6:103"
                          },
                          "nodeType": "YulFunctionCall",
                          "src": "2513:12:103"
                        },
                        "nodeType": "YulExpressionStatement",
                        "src": "2513:12:103"
                      }
                    ]
                  },
                  "condition": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "dataEnd",
                            "nodeType": "YulIdentifier",
                            "src": "2486:7:103"
                          },
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2495:9:103"
                          }
                        ],
                        "functionName": {
                          "name": "sub",
                          "nodeType": "YulIdentifier",
                          "src": "2482:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2482:23:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2507:2:103",
                        "type": "",
                        "value": "64"
                      }
                    ],
                    "functionName": {
                      "name": "slt",
                      "nodeType": "YulIdentifier",
                      "src": "2478:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2478:32:103"
                  },
                  "nodeType": "YulIf",
                  "src": "2475:52:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2536:33:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2559:9:103"
                      }
                    ],
                    "functionName": {
                      "name": "calldataload",
                      "nodeType": "YulIdentifier",
                      "src": "2546:12:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2546:23:103"
                  },
                  "variableNames": [
                    {
                      "name": "value0",
                      "nodeType": "YulIdentifier",
                      "src": "2536:6:103"
                    }
                  ]
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "2578:48:103",
                  "value": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "2611:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "2622:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "2607:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "2607:18:103"
                      }
                    ],
                    "functionName": {
                      "name": "abi_decode_address",
                      "nodeType": "YulIdentifier",
                      "src": "2588:18:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2588:38:103"
                  },
                  "variableNames": [
                    {
                      "name": "value1",
                      "nodeType": "YulIdentifier",
                      "src": "2578:6:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_decode_tuple_t_bytes32t_address",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2423:9:103",
                "type": ""
              },
              {
                "name": "dataEnd",
                "nodeType": "YulTypedName",
                "src": "2434:7:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2446:6:103",
                "type": ""
              },
              {
                "name": "value1",
                "nodeType": "YulTypedName",
                "src": "2454:6:103",
                "type": ""
              }
            ],
            "src": "2378:254:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2738:76:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "2748:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2760:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "2771:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "2756:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2756:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "2748:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "2790:9:103"
                      },
                      {
                        "name": "value0",
                        "nodeType": "YulIdentifier",
                        "src": "2801:6:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "2783:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "2783:25:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "2783:25:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2707:9:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "2718:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2729:4:103",
                "type": ""
              }
            ],
            "src": "2637:177:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "2993:180:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3010:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3021:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3003:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3003:21:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3003:21:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3044:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3055:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3040:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3040:18:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3060:2:103",
                        "type": "",
                        "value": "30"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3033:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3033:30:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3033:30:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3083:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3094:2:103",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3079:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3079:18:103"
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3099:32:103",
                        "type": "",
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3072:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3072:60:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3072:60:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3141:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3153:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3164:2:103",
                        "type": "",
                        "value": "96"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3149:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3149:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3141:4:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "2970:9:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "2984:4:103",
                "type": ""
              }
            ],
            "src": "2819:354:103"
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "3352:226:103",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3369:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3380:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3362:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3362:21:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3362:21:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3403:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3414:2:103",
                            "type": "",
                            "value": "32"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3399:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3399:18:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3419:2:103",
                        "type": "",
                        "value": "36"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3392:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3392:30:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3392:30:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3442:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3453:2:103",
                            "type": "",
                            "value": "64"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3438:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3438:18:103"
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c69",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3458:34:103",
                        "type": "",
                        "value": "provided contract is not whiteli"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3431:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3431:62:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3431:62:103"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "name": "headStart",
                            "nodeType": "YulIdentifier",
                            "src": "3513:9:103"
                          },
                          {
                            "kind": "number",
                            "nodeType": "YulLiteral",
                            "src": "3524:2:103",
                            "type": "",
                            "value": "96"
                          }
                        ],
                        "functionName": {
                          "name": "add",
                          "nodeType": "YulIdentifier",
                          "src": "3509:3:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "3509:18:103"
                      },
                      {
                        "hexValue": "73746564",
                        "kind": "string",
                        "nodeType": "YulLiteral",
                        "src": "3529:6:103",
                        "type": "",
                        "value": "sted"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "3502:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3502:34:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "3502:34:103"
                },
                {
                  "nodeType": "YulAssignment",
                  "src": "3545:27:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "3557:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "3568:3:103",
                        "type": "",
                        "value": "128"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "3553:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "3553:19:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "3545:4:103"
                    }
                  ]
                }
              ]
            },
            "name": "abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "3329:9:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "3343:4:103",
                "type": ""
              }
            ],
            "src": "3178:400:103"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_decode_address(offset) -> value\n    {\n        value := calldataload(offset)\n        if iszero(eq(value, and(value, sub(shl(160, 1), 1)))) { revert(0, 0) }\n    }\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n    }\n    function panic_error_0x41()\n    {\n        mstore(0, shl(224, 0x4e487b71))\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n    function abi_decode_tuple_t_bytes_memory_ptr(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        let offset := calldataload(headStart)\n        let _1 := 0xffffffffffffffff\n        if gt(offset, _1) { revert(0, 0) }\n        let _2 := add(headStart, offset)\n        if iszero(slt(add(_2, 0x1f), dataEnd)) { revert(0, 0) }\n        let _3 := calldataload(_2)\n        if gt(_3, _1) { panic_error_0x41() }\n        let _4 := not(31)\n        let memPtr := mload(64)\n        let newFreePtr := add(memPtr, and(add(and(add(_3, 0x1f), _4), 63), _4))\n        if or(gt(newFreePtr, _1), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n        mstore(memPtr, _3)\n        if gt(add(add(_2, _3), 32), dataEnd) { revert(0, 0) }\n        calldatacopy(add(memPtr, 32), add(_2, 32), _3)\n        mstore(add(add(memPtr, _3), 32), 0)\n        value0 := memPtr\n    }\n    function abi_decode_tuple_t_bytes32(headStart, dataEnd) -> value0\n    {\n        if slt(sub(dataEnd, headStart), 32) { revert(0, 0) }\n        value0 := calldataload(headStart)\n    }\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, and(value0, sub(shl(160, 1), 1)))\n    }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n    function abi_decode_tuple_t_addresst_bool(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := abi_decode_address(headStart)\n        let value := calldataload(add(headStart, 32))\n        if iszero(eq(value, iszero(iszero(value)))) { revert(0, 0) }\n        value1 := value\n    }\n    function abi_decode_tuple_t_bytes32t_address(headStart, dataEnd) -> value0, value1\n    {\n        if slt(sub(dataEnd, headStart), 64) { revert(0, 0) }\n        value0 := calldataload(headStart)\n        value1 := abi_decode_address(add(headStart, 32))\n    }\n    function abi_encode_tuple_t_bytes32__to_t_bytes32__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, value0)\n    }\n    function abi_encode_tuple_t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 30)\n        mstore(add(headStart, 64), \"sender must be bridge contract\")\n        tail := add(headStart, 96)\n    }\n    function abi_encode_tuple_t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da__to_t_string_memory_ptr__fromStack_reversed(headStart) -> tail\n    {\n        mstore(headStart, 32)\n        mstore(add(headStart, 32), 36)\n        mstore(add(headStart, 64), \"provided contract is not whiteli\")\n        mstore(add(headStart, 96), \"sted\")\n        tail := add(headStart, 128)\n    }\n}",
      "id": 103,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "349:3469:81:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "349:3469:81:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2552:121;;;;;;:::i;:::-;;:::i;:::-;;2679:65;;;;;;:::i;:::-;2552:121;;500:68;;;;;;:::i;:::-;;;;;;;;;;;;-1:-1:-1;;;;;500:68:81;;;;;;-1:-1:-1;;;;;1790:32:103;;;1772:51;;1760:2;1745:18;500:68:81;;;;;;;;420:29;;;;;;;;-1:-1:-1;;;;;420:29:81;;;844:41;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;1999:14:103;;1992:22;1974:41;;1962:2;1947:18;844:41:81;1834:187:103;3649:167:81;;;;;;:::i;:::-;;:::i;742:50::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2123:187;;;;;;:::i;:::-;;:::i;913:40::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;1936:181;;;;;;:::i;:::-;;:::i;619:68::-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;2783:25:103;;;2771:2;2756:18;619:68:81;2637:177:103;2552:121:81;992:13;:11;:13::i;:::-;2637:29:::1;2650:15;2637:12;:29::i;3649:167::-:0;992:13;:11;:13::i;:::-;-1:-1:-1;;;;;3774:23:81;;;::::1;;::::0;;;:8:::1;:23;::::0;;;;:35;;-1:-1:-1;;3774:35:81::1;::::0;::::1;;::::0;;;::::1;::::0;;3649:167::o;2123:187::-;992:13;:11;:13::i;:::-;3232:45;;;;:33;:45;;;;;;;;3225:52;;-1:-1:-1;;;;;;3225:52:81;;;-1:-1:-1;;;;;3294:50:81;;;;;;:33;:50;;;;;3287:57;;;3361:18;:35;;;;3354:42;;-1:-1:-1;;3354:42:81;;;2123:187::o;1936:181::-;992:13;:11;:13::i;:::-;2922:45;;;;:33;:45;;;;;;;;:63;;-1:-1:-1;;;;;;2922:63:81;-1:-1:-1;;;;;2922:63:81;;;;;;;;2995:50;;:33;:50;;;;;:63;;;3069:18;:35;;;;;;:42;;-1:-1:-1;;3069:42:81;;;;;;2123:187;;:::o;1250:124::-;1318:14;;;;;-1:-1:-1;;;;;1318:14:81;1304:10;:28;1296:71;;;;-1:-1:-1;;;1296:71:81;;3021:2:103;1296:71:81;;;3003:21:103;3060:2;3040:18;;;3033:30;3099:32;3079:18;;;3072:60;3149:18;;1296:71:81;;;;;;;;;1250:124::o;3409:234::-;-1:-1:-1;;;;;3496:35:81;;;;;;:18;:35;;;;;;;;3475:118;;;;-1:-1:-1;;;3475:118:81;;3380:2:103;3475:118:81;;;3362:21:103;3419:2;3399:18;;;3392:30;3458:34;3438:18;;;3431:62;-1:-1:-1;;;3509:18:103;;;3502:34;3553:19;;3475:118:81;3178:400:103;3475:118:81;-1:-1:-1;;;;;3603:26:81;;;;;:9;:26;;;;;:33;;-1:-1:-1;;3603:33:81;3632:4;3603:33;;;3409:234::o;14:173:103:-;82:20;;-1:-1:-1;;;;;131:31:103;;121:42;;111:70;;177:1;174;167:12;111:70;14:173;;;:::o;192:186::-;251:6;304:2;292:9;283:7;279:23;275:32;272:52;;;320:1;317;310:12;272:52;343:29;362:9;343:29;:::i;:::-;333:39;192:186;-1:-1:-1;;;192:186:103:o;383:127::-;444:10;439:3;435:20;432:1;425:31;475:4;472:1;465:15;499:4;496:1;489:15;515:921;583:6;636:2;624:9;615:7;611:23;607:32;604:52;;;652:1;649;642:12;604:52;692:9;679:23;721:18;762:2;754:6;751:14;748:34;;;778:1;775;768:12;748:34;816:6;805:9;801:22;791:32;;861:7;854:4;850:2;846:13;842:27;832:55;;883:1;880;873:12;832:55;919:2;906:16;941:2;937;934:10;931:36;;;947:18;;:::i;:::-;1022:2;1016:9;990:2;1076:13;;-1:-1:-1;;1072:22:103;;;1096:2;1068:31;1064:40;1052:53;;;1120:18;;;1140:22;;;1117:46;1114:72;;;1166:18;;:::i;:::-;1206:10;1202:2;1195:22;1241:2;1233:6;1226:18;1281:7;1276:2;1271;1267;1263:11;1259:20;1256:33;1253:53;;;1302:1;1299;1292:12;1253:53;1358:2;1353;1349;1345:11;1340:2;1332:6;1328:15;1315:46;1403:1;1381:15;;;1398:2;1377:24;1370:35;;;;-1:-1:-1;1385:6:103;515:921;-1:-1:-1;;;;;515:921:103:o;1441:180::-;1500:6;1553:2;1541:9;1532:7;1528:23;1524:32;1521:52;;;1569:1;1566;1559:12;1521:52;-1:-1:-1;1592:23:103;;1441:180;-1:-1:-1;1441:180:103:o;2026:347::-;2091:6;2099;2152:2;2140:9;2131:7;2127:23;2123:32;2120:52;;;2168:1;2165;2158:12;2120:52;2191:29;2210:9;2191:29;:::i;:::-;2181:39;;2270:2;2259:9;2255:18;2242:32;2317:5;2310:13;2303:21;2296:5;2293:32;2283:60;;2339:1;2336;2329:12;2283:60;2362:5;2352:15;;;2026:347;;;;;:::o;2378:254::-;2446:6;2454;2507:2;2495:9;2486:7;2482:23;2478:32;2475:52;;;2523:1;2520;2513:12;2475:52;2559:9;2546:23;2536:33;;2588:38;2622:2;2611:9;2607:18;2588:38;:::i;:::-;2578:48;;2378:254;;;;;:::o",
  "source": "// SPDX-License-Identifier: LGPL-3.0-only\npragma solidity 0.8.11;\n\nimport \"../interfaces/IERCHandler.sol\";\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n    @title Function used across handler contracts.\n    @author ChainSafe Systems.\n    @notice This contract is intended to be used with the Bridge contract.\n */\ncontract HandlerHelpersUpgradeable is IERCHandler, Initializable {\n    address public _bridgeAddress;\n\n    // resourceID => token contract address\n    mapping(bytes32 => address) public _resourceIDToTokenContractAddress;\n\n    // token contract address => resourceID\n    mapping(address => bytes32) public _tokenContractAddressToResourceID;\n\n    // token contract address => is whitelisted\n    mapping(address => bool) public _contractWhitelist;\n\n    // token contract address => is burnable\n    mapping(address => bool) public _burnList;\n    // native => bool\n    mapping(address => bool) public isNative;\n\n    modifier onlyBridge() {\n        _onlyBridge();\n        _;\n    }\n\n    /**\n        @param bridgeAddress Contract address of previously deployed Bridge.\n     */\n    function __HandlerHelpers_init(address bridgeAddress) internal initializer {\n        _bridgeAddress = bridgeAddress;\n    }\n\n    function _onlyBridge() private view {\n        require(msg.sender == _bridgeAddress, \"sender must be bridge contract\");\n    }\n\n    /**\n        @notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n        {_contractAddressToResourceID}[{contractAddress}] are not already set,\n        then sets {_resourceIDToContractAddress} with {contractAddress},\n        {_contractAddressToResourceID} with {resourceID},\n        and {_contractWhitelist} to true for {contractAddress}.\n        @param resourceID ResourceID to be used when making deposits.\n        @param contractAddress Address of contract to be called when a deposit is made and a deposited is executed.\n     */\n    function setResource(bytes32 resourceID, address contractAddress)\n        external\n        override\n        onlyBridge\n    {\n        _setResource(resourceID, contractAddress);\n    }\n\n    function removeResource(bytes32 resourceID, address contractAddress)\n        external\n        override\n        onlyBridge\n    {\n        _removeResource(resourceID, contractAddress);\n    }\n\n    /**\n        @notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\n        to true.\n        @param contractAddress Address of contract to be used when making or executing deposits.\n     */\n    function setBurnable(address contractAddress) external override onlyBridge {\n        _setBurnable(contractAddress);\n    }\n\n    function withdraw(bytes memory data) external virtual override {}\n\n    function withdrawETH(bytes memory data) external virtual override {}\n\n    function _setResource(bytes32 resourceID, address contractAddress)\n        internal\n    {\n        _resourceIDToTokenContractAddress[resourceID] = contractAddress;\n        _tokenContractAddressToResourceID[contractAddress] = resourceID;\n\n        _contractWhitelist[contractAddress] = true;\n    }\n\n    function _removeResource(bytes32 resourceID, address contractAddress)\n        internal\n    {\n        delete _resourceIDToTokenContractAddress[resourceID];\n        delete _tokenContractAddressToResourceID[contractAddress];\n        delete _contractWhitelist[contractAddress];\n    }\n\n    function _setBurnable(address contractAddress) internal {\n        require(\n            _contractWhitelist[contractAddress],\n            \"provided contract is not whitelisted\"\n        );\n        _burnList[contractAddress] = true;\n    }\n\n    function setNative(address nativeAddress, bool _isNative)\n        external\n        override\n        onlyBridge\n    {\n        isNative[nativeAddress] = _isNative;\n    }\n}\n",
  "sourcePath": "/Users/cuimiandashi/Documents/GitHub/chainbridge-solidity-v2.0.0-eth/contracts/handlers/HandlerHelpersUpgradeable.sol",
  "ast": {
    "absolutePath": "project:/contracts/handlers/HandlerHelpersUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2107
      ],
      "HandlerHelpersUpgradeable": [
        19291
      ],
      "IERCHandler": [
        20280
      ],
      "Initializable": [
        733
      ]
    },
    "id": 19292,
    "license": "LGPL-3.0-only",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 19083,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "42:23:81"
      },
      {
        "absolutePath": "project:/contracts/interfaces/IERCHandler.sol",
        "file": "../interfaces/IERCHandler.sol",
        "id": 19084,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19292,
        "sourceUnit": 20281,
        "src": "67:39:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 19085,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 19292,
        "sourceUnit": 734,
        "src": "107:75:81",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 19087,
              "name": "IERCHandler",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 20280,
              "src": "387:11:81"
            },
            "id": 19088,
            "nodeType": "InheritanceSpecifier",
            "src": "387:11:81"
          },
          {
            "baseName": {
              "id": 19089,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 733,
              "src": "400:13:81"
            },
            "id": 19090,
            "nodeType": "InheritanceSpecifier",
            "src": "400:13:81"
          }
        ],
        "canonicalName": "HandlerHelpersUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 19086,
          "nodeType": "StructuredDocumentation",
          "src": "184:164:81",
          "text": "@title Function used across handler contracts.\n@author ChainSafe Systems.\n@notice This contract is intended to be used with the Bridge contract."
        },
        "fullyImplemented": true,
        "id": 19291,
        "linearizedBaseContracts": [
          19291,
          733,
          20280
        ],
        "name": "HandlerHelpersUpgradeable",
        "nameLocation": "358:25:81",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "functionSelector": "318c136e",
            "id": 19092,
            "mutability": "mutable",
            "name": "_bridgeAddress",
            "nameLocation": "435:14:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "420:29:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_address",
              "typeString": "address"
            },
            "typeName": {
              "id": 19091,
              "name": "address",
              "nodeType": "ElementaryTypeName",
              "src": "420:7:81",
              "stateMutability": "nonpayable",
              "typeDescriptions": {
                "typeIdentifier": "t_address",
                "typeString": "address"
              }
            },
            "visibility": "public"
          },
          {
            "baseFunctions": [
              20272
            ],
            "constant": false,
            "functionSelector": "0a6d55d8",
            "id": 19096,
            "mutability": "mutable",
            "name": "_resourceIDToTokenContractAddress",
            "nameLocation": "535:33:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "500:68:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
              "typeString": "mapping(bytes32 => address)"
            },
            "typeName": {
              "id": 19095,
              "keyType": {
                "id": 19093,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "508:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              },
              "nodeType": "Mapping",
              "src": "500:27:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                "typeString": "mapping(bytes32 => address)"
              },
              "valueType": {
                "id": 19094,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "519:7:81",
                "stateMutability": "nonpayable",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "c8ba6c87",
            "id": 19100,
            "mutability": "mutable",
            "name": "_tokenContractAddressToResourceID",
            "nameLocation": "654:33:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "619:68:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
              "typeString": "mapping(address => bytes32)"
            },
            "typeName": {
              "id": 19099,
              "keyType": {
                "id": 19097,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "627:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "619:27:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                "typeString": "mapping(address => bytes32)"
              },
              "valueType": {
                "id": 19098,
                "name": "bytes32",
                "nodeType": "ElementaryTypeName",
                "src": "638:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bytes32",
                  "typeString": "bytes32"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "7f79bea8",
            "id": 19104,
            "mutability": "mutable",
            "name": "_contractWhitelist",
            "nameLocation": "774:18:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "742:50:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19103,
              "keyType": {
                "id": 19101,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "750:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "742:24:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 19102,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "761:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "6a70d081",
            "id": 19108,
            "mutability": "mutable",
            "name": "_burnList",
            "nameLocation": "876:9:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "844:41:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19107,
              "keyType": {
                "id": 19105,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "852:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "844:24:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 19106,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "863:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "constant": false,
            "functionSelector": "b2b8b5dd",
            "id": 19112,
            "mutability": "mutable",
            "name": "isNative",
            "nameLocation": "945:8:81",
            "nodeType": "VariableDeclaration",
            "scope": 19291,
            "src": "913:40:81",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
              "typeString": "mapping(address => bool)"
            },
            "typeName": {
              "id": 19111,
              "keyType": {
                "id": 19109,
                "name": "address",
                "nodeType": "ElementaryTypeName",
                "src": "921:7:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_address",
                  "typeString": "address"
                }
              },
              "nodeType": "Mapping",
              "src": "913:24:81",
              "typeDescriptions": {
                "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                "typeString": "mapping(address => bool)"
              },
              "valueType": {
                "id": 19110,
                "name": "bool",
                "nodeType": "ElementaryTypeName",
                "src": "932:4:81",
                "typeDescriptions": {
                  "typeIdentifier": "t_bool",
                  "typeString": "bool"
                }
              }
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 19118,
              "nodeType": "Block",
              "src": "982:41:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 19114,
                      "name": "_onlyBridge",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19144,
                      "src": "992:11:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 19115,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "992:13:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19116,
                  "nodeType": "ExpressionStatement",
                  "src": "992:13:81"
                },
                {
                  "id": 19117,
                  "nodeType": "PlaceholderStatement",
                  "src": "1015:1:81"
                }
              ]
            },
            "id": 19119,
            "name": "onlyBridge",
            "nameLocation": "969:10:81",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 19113,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "979:2:81"
            },
            "src": "960:63:81",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19131,
              "nodeType": "Block",
              "src": "1197:47:81",
              "statements": [
                {
                  "expression": {
                    "id": 19129,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 19127,
                      "name": "_bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19092,
                      "src": "1207:14:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19128,
                      "name": "bridgeAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19122,
                      "src": "1224:13:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "1207:30:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19130,
                  "nodeType": "ExpressionStatement",
                  "src": "1207:30:81"
                }
              ]
            },
            "documentation": {
              "id": 19120,
              "nodeType": "StructuredDocumentation",
              "src": "1029:88:81",
              "text": "@param bridgeAddress Contract address of previously deployed Bridge."
            },
            "id": 19132,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19125,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19124,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 653,
                  "src": "1185:11:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "1185:11:81"
              }
            ],
            "name": "__HandlerHelpers_init",
            "nameLocation": "1131:21:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19123,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19122,
                  "mutability": "mutable",
                  "name": "bridgeAddress",
                  "nameLocation": "1161:13:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19132,
                  "src": "1153:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19121,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1152:23:81"
            },
            "returnParameters": {
              "id": 19126,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1197:0:81"
            },
            "scope": 19291,
            "src": "1122:122:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19143,
              "nodeType": "Block",
              "src": "1286:88:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 19139,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 19136,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 4294967281,
                            "src": "1304:3:81",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 19137,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "1304:10:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 19138,
                          "name": "_bridgeAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19092,
                          "src": "1318:14:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "1304:28:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "73656e646572206d7573742062652062726964676520636f6e7472616374",
                        "id": 19140,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1334:32:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        },
                        "value": "sender must be bridge contract"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0febc0fc8991eb26dfaaceeb4d73d25b76da338550ed76c60410fec84388058e",
                          "typeString": "literal_string \"sender must be bridge contract\""
                        }
                      ],
                      "id": 19135,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1296:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19141,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1296:71:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19142,
                  "nodeType": "ExpressionStatement",
                  "src": "1296:71:81"
                }
              ]
            },
            "id": 19144,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_onlyBridge",
            "nameLocation": "1259:11:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19133,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1270:2:81"
            },
            "returnParameters": {
              "id": 19134,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1286:0:81"
            },
            "scope": 19291,
            "src": "1250:124:81",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "baseFunctions": [
              20240
            ],
            "body": {
              "id": 19160,
              "nodeType": "Block",
              "src": "2059:58:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19156,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19147,
                        "src": "2082:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19157,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19149,
                        "src": "2094:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19155,
                      "name": "_setResource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19231,
                      "src": "2069:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 19158,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2069:41:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19159,
                  "nodeType": "ExpressionStatement",
                  "src": "2069:41:81"
                }
              ]
            },
            "documentation": {
              "id": 19145,
              "nodeType": "StructuredDocumentation",
              "src": "1380:551:81",
              "text": "@notice First verifies {_resourceIDToContractAddress}[{resourceID}] and\n{_contractAddressToResourceID}[{contractAddress}] are not already set,\nthen sets {_resourceIDToContractAddress} with {contractAddress},\n{_contractAddressToResourceID} with {resourceID},\nand {_contractWhitelist} to true for {contractAddress}.\n@param resourceID ResourceID to be used when making deposits.\n@param contractAddress Address of contract to be called when a deposit is made and a deposited is executed."
            },
            "functionSelector": "b8fa3736",
            "id": 19161,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19152,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19119,
                  "src": "2044:10:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "2044:10:81"
              }
            ],
            "name": "setResource",
            "nameLocation": "1945:11:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19151,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2027:8:81"
            },
            "parameters": {
              "id": 19150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19147,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "1965:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19161,
                  "src": "1957:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19146,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "1957:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19149,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "1985:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19161,
                  "src": "1977:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1977:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1956:45:81"
            },
            "returnParameters": {
              "id": 19154,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2059:0:81"
            },
            "scope": 19291,
            "src": "1936:181:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20247
            ],
            "body": {
              "id": 19176,
              "nodeType": "Block",
              "src": "2249:61:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19172,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19163,
                        "src": "2275:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      {
                        "id": 19173,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19165,
                        "src": "2287:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19171,
                      "name": "_removeResource",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19254,
                      "src": "2259:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_bytes32_$_t_address_$returns$__$",
                        "typeString": "function (bytes32,address)"
                      }
                    },
                    "id": 19174,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2259:44:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19175,
                  "nodeType": "ExpressionStatement",
                  "src": "2259:44:81"
                }
              ]
            },
            "functionSelector": "a9815751",
            "id": 19177,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19169,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19168,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19119,
                  "src": "2234:10:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "2234:10:81"
              }
            ],
            "name": "removeResource",
            "nameLocation": "2132:14:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19167,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2217:8:81"
            },
            "parameters": {
              "id": 19166,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19163,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "2155:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19177,
                  "src": "2147:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19162,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2147:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19165,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2175:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19177,
                  "src": "2167:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2167:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2146:45:81"
            },
            "returnParameters": {
              "id": 19170,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2249:0:81"
            },
            "scope": 19291,
            "src": "2123:187:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20253
            ],
            "body": {
              "id": 19190,
              "nodeType": "Block",
              "src": "2627:46:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 19187,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19180,
                        "src": "2650:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 19186,
                      "name": "_setBurnable",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19273,
                      "src": "2637:12:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 19188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2637:29:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19189,
                  "nodeType": "ExpressionStatement",
                  "src": "2637:29:81"
                }
              ]
            },
            "documentation": {
              "id": 19178,
              "nodeType": "StructuredDocumentation",
              "src": "2316:231:81",
              "text": "@notice First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}]\nto true.\n@param contractAddress Address of contract to be used when making or executing deposits."
            },
            "functionSelector": "07b7ed99",
            "id": 19191,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19184,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19183,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19119,
                  "src": "2616:10:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "2616:10:81"
              }
            ],
            "name": "setBurnable",
            "nameLocation": "2561:11:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19182,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2607:8:81"
            },
            "parameters": {
              "id": 19181,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19180,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2581:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19191,
                  "src": "2573:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19179,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2573:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2572:25:81"
            },
            "returnParameters": {
              "id": 19185,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2627:0:81"
            },
            "scope": 19291,
            "src": "2552:121:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20259
            ],
            "body": {
              "id": 19197,
              "nodeType": "Block",
              "src": "2742:2:81",
              "statements": []
            },
            "functionSelector": "0968f264",
            "id": 19198,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "2688:8:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19195,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2733:8:81"
            },
            "parameters": {
              "id": 19194,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19193,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2710:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19198,
                  "src": "2697:17:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19192,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2697:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2696:19:81"
            },
            "returnParameters": {
              "id": 19196,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2742:0:81"
            },
            "scope": 19291,
            "src": "2679:65:81",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "baseFunctions": [
              20264
            ],
            "body": {
              "id": 19204,
              "nodeType": "Block",
              "src": "2816:2:81",
              "statements": []
            },
            "functionSelector": "ab5c7bf1",
            "id": 19205,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "withdrawETH",
            "nameLocation": "2759:11:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19202,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "2807:8:81"
            },
            "parameters": {
              "id": 19201,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19200,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "2784:4:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19205,
                  "src": "2771:17:81",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 19199,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "2771:5:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2770:19:81"
            },
            "returnParameters": {
              "id": 19203,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2816:0:81"
            },
            "scope": 19291,
            "src": "2750:68:81",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "external"
          },
          {
            "body": {
              "id": 19230,
              "nodeType": "Block",
              "src": "2912:206:81",
              "statements": [
                {
                  "expression": {
                    "id": 19216,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19212,
                        "name": "_resourceIDToTokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19096,
                        "src": "2922:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 19214,
                      "indexExpression": {
                        "id": 19213,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19207,
                        "src": "2956:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2922:45:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19215,
                      "name": "contractAddress",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19209,
                      "src": "2970:15:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "2922:63:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 19217,
                  "nodeType": "ExpressionStatement",
                  "src": "2922:63:81"
                },
                {
                  "expression": {
                    "id": 19222,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19218,
                        "name": "_tokenContractAddressToResourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19100,
                        "src": "2995:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 19220,
                      "indexExpression": {
                        "id": 19219,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19209,
                        "src": "3029:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "2995:50:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19221,
                      "name": "resourceID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19207,
                      "src": "3048:10:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "2995:63:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 19223,
                  "nodeType": "ExpressionStatement",
                  "src": "2995:63:81"
                },
                {
                  "expression": {
                    "id": 19228,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19224,
                        "name": "_contractWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19104,
                        "src": "3069:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19226,
                      "indexExpression": {
                        "id": 19225,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19209,
                        "src": "3088:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3069:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 19227,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3107:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3069:42:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19229,
                  "nodeType": "ExpressionStatement",
                  "src": "3069:42:81"
                }
              ]
            },
            "id": 19231,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setResource",
            "nameLocation": "2833:12:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19210,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19207,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "2854:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19231,
                  "src": "2846:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19206,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "2846:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19209,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "2874:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19231,
                  "src": "2866:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19208,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2866:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2845:45:81"
            },
            "returnParameters": {
              "id": 19211,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2912:0:81"
            },
            "scope": 19291,
            "src": "2824:294:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19253,
              "nodeType": "Block",
              "src": "3215:188:81",
              "statements": [
                {
                  "expression": {
                    "id": 19241,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3225:52:81",
                    "subExpression": {
                      "baseExpression": {
                        "id": 19238,
                        "name": "_resourceIDToTokenContractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19096,
                        "src": "3232:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_address_$",
                          "typeString": "mapping(bytes32 => address)"
                        }
                      },
                      "id": 19240,
                      "indexExpression": {
                        "id": 19239,
                        "name": "resourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19233,
                        "src": "3266:10:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3232:45:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19242,
                  "nodeType": "ExpressionStatement",
                  "src": "3225:52:81"
                },
                {
                  "expression": {
                    "id": 19246,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3287:57:81",
                    "subExpression": {
                      "baseExpression": {
                        "id": 19243,
                        "name": "_tokenContractAddressToResourceID",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19100,
                        "src": "3294:33:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bytes32_$",
                          "typeString": "mapping(address => bytes32)"
                        }
                      },
                      "id": 19245,
                      "indexExpression": {
                        "id": 19244,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19235,
                        "src": "3328:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3294:50:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19247,
                  "nodeType": "ExpressionStatement",
                  "src": "3287:57:81"
                },
                {
                  "expression": {
                    "id": 19251,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "UnaryOperation",
                    "operator": "delete",
                    "prefix": true,
                    "src": "3354:42:81",
                    "subExpression": {
                      "baseExpression": {
                        "id": 19248,
                        "name": "_contractWhitelist",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19104,
                        "src": "3361:18:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19250,
                      "indexExpression": {
                        "id": 19249,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19235,
                        "src": "3380:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3361:35:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19252,
                  "nodeType": "ExpressionStatement",
                  "src": "3354:42:81"
                }
              ]
            },
            "id": 19254,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeResource",
            "nameLocation": "3133:15:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19236,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19233,
                  "mutability": "mutable",
                  "name": "resourceID",
                  "nameLocation": "3157:10:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19254,
                  "src": "3149:18:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 19232,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3149:7:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19235,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "3177:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19254,
                  "src": "3169:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19234,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3169:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3148:45:81"
            },
            "returnParameters": {
              "id": 19237,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3215:0:81"
            },
            "scope": 19291,
            "src": "3124:279:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 19272,
              "nodeType": "Block",
              "src": "3465:178:81",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 19260,
                          "name": "_contractWhitelist",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19104,
                          "src": "3496:18:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                            "typeString": "mapping(address => bool)"
                          }
                        },
                        "id": 19262,
                        "indexExpression": {
                          "id": 19261,
                          "name": "contractAddress",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 19256,
                          "src": "3515:15:81",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "3496:35:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "70726f766964656420636f6e7472616374206973206e6f742077686974656c6973746564",
                        "id": 19263,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "3545:38:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        },
                        "value": "provided contract is not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2daab49254b4a5228983fbc316d7992ab0064c3e34fa43dd7fbf9d5c4fe8b0da",
                          "typeString": "literal_string \"provided contract is not whitelisted\""
                        }
                      ],
                      "id": 19259,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "3475:7:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 19264,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "3475:118:81",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 19265,
                  "nodeType": "ExpressionStatement",
                  "src": "3475:118:81"
                },
                {
                  "expression": {
                    "id": 19270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19266,
                        "name": "_burnList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19108,
                        "src": "3603:9:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19268,
                      "indexExpression": {
                        "id": 19267,
                        "name": "contractAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19256,
                        "src": "3613:15:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3603:26:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 19269,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "3632:4:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "3603:33:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19271,
                  "nodeType": "ExpressionStatement",
                  "src": "3603:33:81"
                }
              ]
            },
            "id": 19273,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setBurnable",
            "nameLocation": "3418:12:81",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 19257,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19256,
                  "mutability": "mutable",
                  "name": "contractAddress",
                  "nameLocation": "3439:15:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19273,
                  "src": "3431:23:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19255,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3431:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3430:25:81"
            },
            "returnParameters": {
              "id": 19258,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3465:0:81"
            },
            "scope": 19291,
            "src": "3409:234:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "baseFunctions": [
              20279
            ],
            "body": {
              "id": 19289,
              "nodeType": "Block",
              "src": "3764:52:81",
              "statements": [
                {
                  "expression": {
                    "id": 19287,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 19283,
                        "name": "isNative",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19112,
                        "src": "3774:8:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_bool_$",
                          "typeString": "mapping(address => bool)"
                        }
                      },
                      "id": 19285,
                      "indexExpression": {
                        "id": 19284,
                        "name": "nativeAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 19275,
                        "src": "3783:13:81",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "3774:23:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 19286,
                      "name": "_isNative",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 19277,
                      "src": "3800:9:81",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "3774:35:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 19288,
                  "nodeType": "ExpressionStatement",
                  "src": "3774:35:81"
                }
              ]
            },
            "functionSelector": "789d7711",
            "id": 19290,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 19281,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 19280,
                  "name": "onlyBridge",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 19119,
                  "src": "3749:10:81"
                },
                "nodeType": "ModifierInvocation",
                "src": "3749:10:81"
              }
            ],
            "name": "setNative",
            "nameLocation": "3658:9:81",
            "nodeType": "FunctionDefinition",
            "overrides": {
              "id": 19279,
              "nodeType": "OverrideSpecifier",
              "overrides": [],
              "src": "3732:8:81"
            },
            "parameters": {
              "id": 19278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 19275,
                  "mutability": "mutable",
                  "name": "nativeAddress",
                  "nameLocation": "3676:13:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19290,
                  "src": "3668:21:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 19274,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3668:7:81",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 19277,
                  "mutability": "mutable",
                  "name": "_isNative",
                  "nameLocation": "3696:9:81",
                  "nodeType": "VariableDeclaration",
                  "scope": 19290,
                  "src": "3691:14:81",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 19276,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3691:4:81",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3667:39:81"
            },
            "returnParameters": {
              "id": 19282,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "3764:0:81"
            },
            "scope": 19291,
            "src": "3649:167:81",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "scope": 19292,
        "src": "349:3469:81",
        "usedErrors": []
      }
    ],
    "src": "42:3777:81"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-09-22T14:27:40.444Z",
  "devdoc": {
    "author": "ChainSafe Systems.",
    "kind": "dev",
    "methods": {
      "setBurnable(address)": {
        "params": {
          "contractAddress": "Address of contract to be used when making or executing deposits."
        }
      },
      "setResource(bytes32,address)": {
        "params": {
          "contractAddress": "Address of contract to be called when a deposit is made and a deposited is executed.",
          "resourceID": "ResourceID to be used when making deposits."
        }
      },
      "withdraw(bytes)": {
        "params": {
          "data": "ABI-encoded withdrawal params relevant to the handler."
        }
      }
    },
    "stateVariables": {
      "_resourceIDToTokenContractAddress": {
        "params": {
          "resourceID": "ResourceID to be used."
        },
        "return": "address The {tokenContractAddress} that is currently set for the resourceID.",
        "returns": {
          "_0": "address The {tokenContractAddress} that is currently set for the resourceID."
        }
      }
    },
    "title": "Function used across handler contracts.",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {
      "_resourceIDToTokenContractAddress(bytes32)": {
        "notice": "Exposing getter for {_resourceIDToTokenContractAddress}."
      },
      "setBurnable(address)": {
        "notice": "First verifies {contractAddress} is whitelisted, then sets {_burnList}[{contractAddress}] to true."
      },
      "setResource(bytes32,address)": {
        "notice": "First verifies {_resourceIDToContractAddress}[{resourceID}] and {_contractAddressToResourceID}[{contractAddress}] are not already set, then sets {_resourceIDToContractAddress} with {contractAddress}, {_contractAddressToResourceID} with {resourceID}, and {_contractWhitelist} to true for {contractAddress}."
      },
      "withdraw(bytes)": {
        "notice": "Withdraw funds from ERC safes."
      }
    },
    "notice": "This contract is intended to be used with the Bridge contract.",
    "version": 1
  }
}