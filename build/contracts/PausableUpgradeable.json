{
  "contractName": "PausableUpgradeable",
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "metadata": "{\"compiler\":{\"version\":\"0.8.11+commit.d7f03943\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\",\"events\":{\"Paused(address)\":{\"details\":\"Emitted when the pause is triggered by `account`.\"},\"Unpaused(address)\":{\"details\":\"Emitted when the pause is lifted by `account`.\"}},\"kind\":\"dev\",\"methods\":{\"paused()\":{\"details\":\"Returns true if the contract is paused, and false otherwise.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"project:/contracts/utils/PausableUpgradeable.sol\":\"PausableUpgradeable\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"@openzeppelin/contracts-upgradeable/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"project:/contracts/utils/PausableUpgradeable.sol\":{\"keccak256\":\"0xa802b9ba130188db1183edccd43aa36b79e9c6d08c788fb3dfe03abb51a1b918\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8463dfe578bf3e96e02ec15ca119f709d428172a005ff95b3f28a3abfe378d6f\",\"dweb:/ipfs/QmVmaZoopsbn5e8y9iZFvAEaSc7kd7XLkV8XWWTQDyLxNr\"]}},\"version\":1}",
  "bytecode": "0x6080604052348015600f57600080fd5b50608380601d6000396000f3fe6080604052348015600f57600080fd5b506004361060285760003560e01c80635c975abb14602d575b600080fd5b60005462010000900460ff16604051901515815260200160405180910390f3fea26469706673582212206459f639344ef6f05fe566b4cfb9f52e89a4dde74d3da111a384ef9f3e5be3ba64736f6c634300080b0033",
  "deployedBytecode": "0x6080604052348015600f57600080fd5b506004361060285760003560e01c80635c975abb14602d575b600080fd5b60005462010000900460ff16604051901515815260200160405180910390f3fea26469706673582212206459f639344ef6f05fe566b4cfb9f52e89a4dde74d3da111a384ef9f3e5be3ba64736f6c634300080b0033",
  "immutableReferences": {},
  "generatedSources": [],
  "deployedGeneratedSources": [
    {
      "ast": {
        "nodeType": "YulBlock",
        "src": "0:203:103",
        "statements": [
          {
            "nodeType": "YulBlock",
            "src": "6:3:103",
            "statements": []
          },
          {
            "body": {
              "nodeType": "YulBlock",
              "src": "109:92:103",
              "statements": [
                {
                  "nodeType": "YulAssignment",
                  "src": "119:26:103",
                  "value": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "131:9:103"
                      },
                      {
                        "kind": "number",
                        "nodeType": "YulLiteral",
                        "src": "142:2:103",
                        "type": "",
                        "value": "32"
                      }
                    ],
                    "functionName": {
                      "name": "add",
                      "nodeType": "YulIdentifier",
                      "src": "127:3:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "127:18:103"
                  },
                  "variableNames": [
                    {
                      "name": "tail",
                      "nodeType": "YulIdentifier",
                      "src": "119:4:103"
                    }
                  ]
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "name": "headStart",
                        "nodeType": "YulIdentifier",
                        "src": "161:9:103"
                      },
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "name": "value0",
                                "nodeType": "YulIdentifier",
                                "src": "186:6:103"
                              }
                            ],
                            "functionName": {
                              "name": "iszero",
                              "nodeType": "YulIdentifier",
                              "src": "179:6:103"
                            },
                            "nodeType": "YulFunctionCall",
                            "src": "179:14:103"
                          }
                        ],
                        "functionName": {
                          "name": "iszero",
                          "nodeType": "YulIdentifier",
                          "src": "172:6:103"
                        },
                        "nodeType": "YulFunctionCall",
                        "src": "172:22:103"
                      }
                    ],
                    "functionName": {
                      "name": "mstore",
                      "nodeType": "YulIdentifier",
                      "src": "154:6:103"
                    },
                    "nodeType": "YulFunctionCall",
                    "src": "154:41:103"
                  },
                  "nodeType": "YulExpressionStatement",
                  "src": "154:41:103"
                }
              ]
            },
            "name": "abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed",
            "nodeType": "YulFunctionDefinition",
            "parameters": [
              {
                "name": "headStart",
                "nodeType": "YulTypedName",
                "src": "78:9:103",
                "type": ""
              },
              {
                "name": "value0",
                "nodeType": "YulTypedName",
                "src": "89:6:103",
                "type": ""
              }
            ],
            "returnVariables": [
              {
                "name": "tail",
                "nodeType": "YulTypedName",
                "src": "100:4:103",
                "type": ""
              }
            ],
            "src": "14:187:103"
          }
        ]
      },
      "contents": "{\n    { }\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart, value0) -> tail\n    {\n        tail := add(headStart, 32)\n        mstore(headStart, iszero(iszero(value0)))\n    }\n}",
      "id": 103,
      "language": "Yul",
      "name": "#utility.yul"
    }
  ],
  "sourceMap": "464:2082:99:-:0;;;;;;;;;;;;;;;;;;;",
  "deployedSourceMap": "464:2082:99:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1124:76;1163:4;1186:7;;;;;;1124:76;;179:14:103;;172:22;154:41;;142:2;127:18;1124:76:99;;;;;;",
  "source": "// SPDX-License-Identifier: MIT\n\npragma solidity 0.8.11;\n\nimport \"@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol\";\n\n/**\n * @dev Contract module which allows children to implement an emergency stop\n * mechanism that can be triggered by an authorized account.\n *\n * This is a stripped down version of Open zeppelin's Pausable contract.\n * https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol\n *\n */\ncontract PausableUpgradeable is Initializable{\n    /**\n     * @dev Emitted when the pause is triggered by `account`.\n     */\n    event Paused(address account);\n\n    /**\n     * @dev Emitted when the pause is lifted by `account`.\n     */\n    event Unpaused(address account);\n\n    bool private _paused;\n\n    /**\n     * @dev Initializes the contract in unpaused state.\n     */\n    function __Pausable_init() internal initializer {\n        __Pausable_init_unchained();\n    }\n\n    function __Pausable_init_unchained() internal initializer {\n        _paused = false;\n    }\n\n    /**\n     * @dev Returns true if the contract is paused, and false otherwise.\n     */\n    function paused() public view returns (bool) {\n        return _paused;\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is paused.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    modifier whenNotPaused() {\n        _whenNotPaused();\n        _;\n    }\n\n    function _whenNotPaused() private view {\n        require(!_paused, \"Pausable: paused\");\n    }\n\n    /**\n     * @dev Modifier to make a function callable only when the contract is not paused.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    modifier whenPaused() {\n        _whenPaused();\n        _;\n    }\n\n    function _whenPaused() private view {\n        require(_paused, \"Pausable: not paused\");\n    }\n\n    /**\n     * @dev Triggers stopped state.\n     * @param sender Address which executes pause.\n     *\n     * Requirements:\n     *\n     * - The contract must not be paused.\n     */\n    function _pause(address sender) internal virtual whenNotPaused {\n        _paused = true;\n        emit Paused(sender);\n    }\n\n    /**\n     * @dev Returns to normal state.\n     * @param sender Address which executes unpause.\n     *\n     * Requirements:\n     *\n     * - The contract must be paused.\n     */\n    function _unpause(address sender) internal virtual whenPaused {\n        _paused = false;\n        emit Unpaused(sender);\n    }\n    uint256[49] private __gap;\n}",
  "sourcePath": "/Users/cuimiandashi/Documents/GitHub/chainbridge-solidity-v2.0.0-eth/contracts/utils/PausableUpgradeable.sol",
  "ast": {
    "absolutePath": "project:/contracts/utils/PausableUpgradeable.sol",
    "exportedSymbols": {
      "AddressUpgradeable": [
        2107
      ],
      "Initializable": [
        733
      ],
      "PausableUpgradeable": [
        22059
      ]
    },
    "id": 22060,
    "license": "MIT",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 21940,
        "literals": [
          "solidity",
          "0.8",
          ".11"
        ],
        "nodeType": "PragmaDirective",
        "src": "33:23:99"
      },
      {
        "absolutePath": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "file": "@openzeppelin/contracts-upgradeable/proxy/utils/Initializable.sol",
        "id": 21941,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 22060,
        "sourceUnit": 734,
        "src": "58:75:99",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 21943,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 733,
              "src": "496:13:99"
            },
            "id": 21944,
            "nodeType": "InheritanceSpecifier",
            "src": "496:13:99"
          }
        ],
        "canonicalName": "PausableUpgradeable",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 21942,
          "nodeType": "StructuredDocumentation",
          "src": "135:328:99",
          "text": " @dev Contract module which allows children to implement an emergency stop\n mechanism that can be triggered by an authorized account.\n This is a stripped down version of Open zeppelin's Pausable contract.\n https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol"
        },
        "fullyImplemented": true,
        "id": 22059,
        "linearizedBaseContracts": [
          22059,
          733
        ],
        "name": "PausableUpgradeable",
        "nameLocation": "473:19:99",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "anonymous": false,
            "documentation": {
              "id": 21945,
              "nodeType": "StructuredDocumentation",
              "src": "515:73:99",
              "text": " @dev Emitted when the pause is triggered by `account`."
            },
            "id": 21949,
            "name": "Paused",
            "nameLocation": "599:6:99",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21948,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21947,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "614:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 21949,
                  "src": "606:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21946,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "606:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "605:17:99"
            },
            "src": "593:30:99"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 21950,
              "nodeType": "StructuredDocumentation",
              "src": "629:70:99",
              "text": " @dev Emitted when the pause is lifted by `account`."
            },
            "id": 21954,
            "name": "Unpaused",
            "nameLocation": "710:8:99",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 21953,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21952,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "727:7:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 21954,
                  "src": "719:15:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 21951,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "719:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "718:17:99"
            },
            "src": "704:32:99"
          },
          {
            "constant": false,
            "id": 21956,
            "mutability": "mutable",
            "name": "_paused",
            "nameLocation": "755:7:99",
            "nodeType": "VariableDeclaration",
            "scope": 22059,
            "src": "742:20:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bool",
              "typeString": "bool"
            },
            "typeName": {
              "id": 21955,
              "name": "bool",
              "nodeType": "ElementaryTypeName",
              "src": "742:4:99",
              "typeDescriptions": {
                "typeIdentifier": "t_bool",
                "typeString": "bool"
              }
            },
            "visibility": "private"
          },
          {
            "body": {
              "id": 21965,
              "nodeType": "Block",
              "src": "889:44:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21962,
                      "name": "__Pausable_init_unchained",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21976,
                      "src": "899:25:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 21963,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "899:27:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21964,
                  "nodeType": "ExpressionStatement",
                  "src": "899:27:99"
                }
              ]
            },
            "documentation": {
              "id": 21957,
              "nodeType": "StructuredDocumentation",
              "src": "769:67:99",
              "text": " @dev Initializes the contract in unpaused state."
            },
            "id": 21966,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21960,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21959,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 653,
                  "src": "877:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "877:11:99"
              }
            ],
            "name": "__Pausable_init",
            "nameLocation": "850:15:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21958,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "865:2:99"
            },
            "returnParameters": {
              "id": 21961,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "889:0:99"
            },
            "scope": 22059,
            "src": "841:92:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21975,
              "nodeType": "Block",
              "src": "997:32:99",
              "statements": [
                {
                  "expression": {
                    "id": 21973,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 21971,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21956,
                      "src": "1007:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 21972,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1017:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "1007:15:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 21974,
                  "nodeType": "ExpressionStatement",
                  "src": "1007:15:99"
                }
              ]
            },
            "id": 21976,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 21969,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 21968,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 653,
                  "src": "985:11:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "985:11:99"
              }
            ],
            "name": "__Pausable_init_unchained",
            "nameLocation": "948:25:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21967,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "973:2:99"
            },
            "returnParameters": {
              "id": 21970,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "997:0:99"
            },
            "scope": 22059,
            "src": "939:90:99",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 21984,
              "nodeType": "Block",
              "src": "1169:31:99",
              "statements": [
                {
                  "expression": {
                    "id": 21982,
                    "name": "_paused",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 21956,
                    "src": "1186:7:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "functionReturnParameters": 21981,
                  "id": 21983,
                  "nodeType": "Return",
                  "src": "1179:14:99"
                }
              ]
            },
            "documentation": {
              "id": 21977,
              "nodeType": "StructuredDocumentation",
              "src": "1035:84:99",
              "text": " @dev Returns true if the contract is paused, and false otherwise."
            },
            "functionSelector": "5c975abb",
            "id": 21985,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "paused",
            "nameLocation": "1133:6:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21978,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1139:2:99"
            },
            "returnParameters": {
              "id": 21981,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 21980,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 21985,
                  "src": "1163:4:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 21979,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "1163:4:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1162:6:99"
            },
            "scope": 22059,
            "src": "1124:76:99",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "public"
          },
          {
            "body": {
              "id": 21992,
              "nodeType": "Block",
              "src": "1403:44:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 21988,
                      "name": "_whenNotPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22003,
                      "src": "1413:14:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 21989,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1413:16:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 21990,
                  "nodeType": "ExpressionStatement",
                  "src": "1413:16:99"
                },
                {
                  "id": 21991,
                  "nodeType": "PlaceholderStatement",
                  "src": "1439:1:99"
                }
              ]
            },
            "documentation": {
              "id": 21986,
              "nodeType": "StructuredDocumentation",
              "src": "1206:167:99",
              "text": " @dev Modifier to make a function callable only when the contract is paused.\n Requirements:\n - The contract must be paused."
            },
            "id": 21993,
            "name": "whenNotPaused",
            "nameLocation": "1387:13:99",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 21987,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1400:2:99"
            },
            "src": "1378:69:99",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22002,
              "nodeType": "Block",
              "src": "1492:54:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 21998,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "1510:8:99",
                        "subExpression": {
                          "id": 21997,
                          "name": "_paused",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 21956,
                          "src": "1511:7:99",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a20706175736564",
                        "id": 21999,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1520:18:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        },
                        "value": "Pausable: paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_68571e1369f7a6dcdcd736cb0343b35a58ed0f64d245c2ed839c98d412744f8a",
                          "typeString": "literal_string \"Pausable: paused\""
                        }
                      ],
                      "id": 21996,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1502:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22000,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1502:37:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22001,
                  "nodeType": "ExpressionStatement",
                  "src": "1502:37:99"
                }
              ]
            },
            "id": 22003,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_whenNotPaused",
            "nameLocation": "1462:14:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 21994,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1476:2:99"
            },
            "returnParameters": {
              "id": 21995,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1492:0:99"
            },
            "scope": 22059,
            "src": "1453:93:99",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 22010,
              "nodeType": "Block",
              "src": "1754:41:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 22006,
                      "name": "_whenPaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 22020,
                      "src": "1764:11:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$__$returns$__$",
                        "typeString": "function () view"
                      }
                    },
                    "id": 22007,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1764:13:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22008,
                  "nodeType": "ExpressionStatement",
                  "src": "1764:13:99"
                },
                {
                  "id": 22009,
                  "nodeType": "PlaceholderStatement",
                  "src": "1787:1:99"
                }
              ]
            },
            "documentation": {
              "id": 22004,
              "nodeType": "StructuredDocumentation",
              "src": "1552:175:99",
              "text": " @dev Modifier to make a function callable only when the contract is not paused.\n Requirements:\n - The contract must not be paused."
            },
            "id": 22011,
            "name": "whenPaused",
            "nameLocation": "1741:10:99",
            "nodeType": "ModifierDefinition",
            "parameters": {
              "id": 22005,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1751:2:99"
            },
            "src": "1732:63:99",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22019,
              "nodeType": "Block",
              "src": "1837:57:99",
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 22015,
                        "name": "_paused",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 21956,
                        "src": "1855:7:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "5061757361626c653a206e6f7420706175736564",
                        "id": 22016,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "1864:22:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        },
                        "value": "Pausable: not paused"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_0d1d997348c4b502650619e51f7d09f80514d98b6993be5051d07f703984619a",
                          "typeString": "literal_string \"Pausable: not paused\""
                        }
                      ],
                      "id": 22014,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        4294967278,
                        4294967278
                      ],
                      "referencedDeclaration": 4294967278,
                      "src": "1847:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 22017,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1847:40:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22018,
                  "nodeType": "ExpressionStatement",
                  "src": "1847:40:99"
                }
              ]
            },
            "id": 22020,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_whenPaused",
            "nameLocation": "1810:11:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22012,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1821:2:99"
            },
            "returnParameters": {
              "id": 22013,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1837:0:99"
            },
            "scope": 22059,
            "src": "1801:93:99",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "private"
          },
          {
            "body": {
              "id": 22036,
              "nodeType": "Block",
              "src": "2143:60:99",
              "statements": [
                {
                  "expression": {
                    "id": 22030,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22028,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21956,
                      "src": "2153:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 22029,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2163:4:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "2153:14:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22031,
                  "nodeType": "ExpressionStatement",
                  "src": "2153:14:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22033,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22023,
                        "src": "2189:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22032,
                      "name": "Paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21949,
                      "src": "2182:6:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22034,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2182:14:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22035,
                  "nodeType": "EmitStatement",
                  "src": "2177:19:99"
                }
              ]
            },
            "documentation": {
              "id": 22021,
              "nodeType": "StructuredDocumentation",
              "src": "1900:175:99",
              "text": " @dev Triggers stopped state.\n @param sender Address which executes pause.\n Requirements:\n - The contract must not be paused."
            },
            "id": 22037,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22026,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22025,
                  "name": "whenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 21993,
                  "src": "2129:13:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "2129:13:99"
              }
            ],
            "name": "_pause",
            "nameLocation": "2089:6:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22024,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22023,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2104:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 22037,
                  "src": "2096:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22022,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2096:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2095:16:99"
            },
            "returnParameters": {
              "id": 22027,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2143:0:99"
            },
            "scope": 22059,
            "src": "2080:123:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 22053,
              "nodeType": "Block",
              "src": "2450:63:99",
              "statements": [
                {
                  "expression": {
                    "id": 22047,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 22045,
                      "name": "_paused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21956,
                      "src": "2460:7:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 22046,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "2470:5:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "2460:15:99",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 22048,
                  "nodeType": "ExpressionStatement",
                  "src": "2460:15:99"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 22050,
                        "name": "sender",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 22040,
                        "src": "2499:6:99",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 22049,
                      "name": "Unpaused",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 21954,
                      "src": "2490:8:99",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 22051,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "2490:16:99",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 22052,
                  "nodeType": "EmitStatement",
                  "src": "2485:21:99"
                }
              ]
            },
            "documentation": {
              "id": 22038,
              "nodeType": "StructuredDocumentation",
              "src": "2209:174:99",
              "text": " @dev Returns to normal state.\n @param sender Address which executes unpause.\n Requirements:\n - The contract must be paused."
            },
            "id": 22054,
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 22043,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 22042,
                  "name": "whenPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 22011,
                  "src": "2439:10:99"
                },
                "nodeType": "ModifierInvocation",
                "src": "2439:10:99"
              }
            ],
            "name": "_unpause",
            "nameLocation": "2397:8:99",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 22041,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 22040,
                  "mutability": "mutable",
                  "name": "sender",
                  "nameLocation": "2414:6:99",
                  "nodeType": "VariableDeclaration",
                  "scope": 22054,
                  "src": "2406:14:99",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 22039,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2406:7:99",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2405:16:99"
            },
            "returnParameters": {
              "id": 22044,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "2450:0:99"
            },
            "scope": 22059,
            "src": "2388:125:99",
            "stateMutability": "nonpayable",
            "virtual": true,
            "visibility": "internal"
          },
          {
            "constant": false,
            "id": 22058,
            "mutability": "mutable",
            "name": "__gap",
            "nameLocation": "2538:5:99",
            "nodeType": "VariableDeclaration",
            "scope": 22059,
            "src": "2518:25:99",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_array$_t_uint256_$49_storage",
              "typeString": "uint256[49]"
            },
            "typeName": {
              "baseType": {
                "id": 22055,
                "name": "uint256",
                "nodeType": "ElementaryTypeName",
                "src": "2518:7:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                }
              },
              "id": 22057,
              "length": {
                "hexValue": "3439",
                "id": 22056,
                "isConstant": false,
                "isLValue": false,
                "isPure": true,
                "kind": "number",
                "lValueRequested": false,
                "nodeType": "Literal",
                "src": "2526:2:99",
                "typeDescriptions": {
                  "typeIdentifier": "t_rational_49_by_1",
                  "typeString": "int_const 49"
                },
                "value": "49"
              },
              "nodeType": "ArrayTypeName",
              "src": "2518:11:99",
              "typeDescriptions": {
                "typeIdentifier": "t_array$_t_uint256_$49_storage_ptr",
                "typeString": "uint256[49]"
              }
            },
            "visibility": "private"
          }
        ],
        "scope": 22060,
        "src": "464:2082:99",
        "usedErrors": []
      }
    ],
    "src": "33:2513:99"
  },
  "compiler": {
    "name": "solc",
    "version": "0.8.11+commit.d7f03943.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.4.7",
  "updatedAt": "2022-09-22T14:27:40.094Z",
  "devdoc": {
    "details": "Contract module which allows children to implement an emergency stop mechanism that can be triggered by an authorized account. This is a stripped down version of Open zeppelin's Pausable contract. https://github.com/OpenZeppelin/openzeppelin-contracts/blob/master/contracts/utils/EnumerableSet.sol",
    "events": {
      "Paused(address)": {
        "details": "Emitted when the pause is triggered by `account`."
      },
      "Unpaused(address)": {
        "details": "Emitted when the pause is lifted by `account`."
      }
    },
    "kind": "dev",
    "methods": {
      "paused()": {
        "details": "Returns true if the contract is paused, and false otherwise."
      }
    },
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "version": 1
  }
}