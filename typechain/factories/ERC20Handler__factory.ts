/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { ERC20Handler } from "../ERC20Handler";

export class ERC20Handler__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(bridgeAddress: string, overrides?: Overrides): Promise<ERC20Handler> {
    return super.deploy(
      bridgeAddress,
      overrides || {}
    ) as Promise<ERC20Handler>;
  }
  getDeployTransaction(
    bridgeAddress: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(bridgeAddress, overrides || {});
  }
  attach(address: string): ERC20Handler {
    return super.attach(address) as ERC20Handler;
  }
  connect(signer: Signer): ERC20Handler__factory {
    return super.connect(signer) as ERC20Handler__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): ERC20Handler {
    return new Contract(address, _abi, signerOrProvider) as ERC20Handler;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "bridgeAddress",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "_bridgeAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_burnList",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_contractWhitelist",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "_resourceIDToTokenContractAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "_tokenContractAddressToResourceID",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "depositer",
        type: "address",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "deposit",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "executeProposal",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setBurnable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "resourceID",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "contractAddress",
        type: "address",
      },
    ],
    name: "setResource",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b50604051610cc6380380610cc683398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b608051610c346100926000396000818161011601526104770152610c346000f3fe608060405234801561001057600080fd5b506004361061009e5760003560e01c80637f79bea8116100665780637f79bea81461016b578063b07e54bb1461018e578063b8fa3736146101ae578063c8ba6c87146101c1578063e248cff2146101ef57600080fd5b806307b7ed99146100a35780630968f264146100b85780630a6d55d8146100cb578063318c136e146101115780636a70d08114610138575b600080fd5b6100b66100b136600461083f565b610202565b005b6100b66100c6366004610879565b610216565b6100f46100d936600461092a565b6000602081905290815260409020546001600160a01b031681565b6040516001600160a01b0390911681526020015b60405180910390f35b6100f47f000000000000000000000000000000000000000000000000000000000000000081565b61015b61014636600461083f565b60036020526000908152604090205460ff1681565b6040519015158152602001610108565b61015b61017936600461083f565b60026020526000908152604090205460ff1681565b6101a161019c36600461098c565b61024f565b6040516101089190610a14565b6100b66101bc366004610a47565b61030f565b6101e16101cf36600461083f565b60016020526000908152604090205481565b604051908152602001610108565b6100b66101fd366004610a77565b610364565b61020a61046c565b610213816104e6565b50565b61021e61046c565b6000806000838060200190518101906102379190610ac3565b9194509250905061024983838361057e565b50505050565b606061025961046c565b60006102678385018561092a565b600087815260208181526040808320546001600160a01b03168084526002909252909120549192509060ff166102b85760405162461bcd60e51b81526004016102af90610b06565b60405180910390fd5b6001600160a01b03811660009081526003602052604090205460ff16156102e9576102e481878461058a565b6102f5565b6102f5818730856105ec565b505060408051600081526020810190915295945050505050565b61031761046c565b60008281526020818152604080832080546001600160a01b0319166001600160a01b039590951694851790559282526001808252838320949094556002905220805460ff19169091179055565b61036c61046c565b600080606061037d84860186610b4e565b9093509150846040856103908583610b70565b9261039d93929190610b96565b8080601f01602080910402602001604051908101604052809392919081815260200183838082843760009201829052508a81526020818152604080832054828801516001600160a01b039091168085526002909352922054959650909490935060ff16915061042090505760405162461bcd60e51b81526004016102af90610b06565b6001600160a01b03811660009081526003602052604090205460ff16156104545761044f818360601c87610600565b610462565b610462818360601c8761057e565b5050505050505050565b336001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016146104e45760405162461bcd60e51b815260206004820152601e60248201527f73656e646572206d7573742062652062726964676520636f6e7472616374000060448201526064016102af565b565b6001600160a01b03811660009081526002602052604090205460ff1661055a5760405162461bcd60e51b8152602060048201526024808201527f70726f766964656420636f6e7472616374206973206e6f742077686974656c696044820152631cdd195960e21b60648201526084016102af565b6001600160a01b03166000908152600360205260409020805460ff19166001179055565b82610249818484610638565b60405163079cc67960e41b81526001600160a01b038381166004830152602482018390528491908216906379cc6790906044015b600060405180830381600087803b1580156105d857600080fd5b505af1158015610462573d6000803e3d6000fd5b836105f9818585856106a0565b5050505050565b6040516340c10f1960e01b81526001600160a01b038381166004830152602482018390528491908216906340c10f19906044016105be565b6040516001600160a01b03831660248201526044810182905261069b90849063a9059cbb60e01b906064015b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b0319909316929092179091526106d8565b505050565b6040516001600160a01b03808516602483015283166044820152606481018290526102499085906323b872dd60e01b90608401610664565b813b8061071f5760405162461bcd60e51b8152602060048201526015602482015274115490cc8c0e881b9bdd08184818dbdb9d1c9858dd605a1b60448201526064016102af565b600080846001600160a01b03168460405161073a9190610bc0565b6000604051808303816000865af19150503d8060008114610777576040519150601f19603f3d011682016040523d82523d6000602084013e61077c565b606091505b5091509150816107c35760405162461bcd60e51b8152602060048201526012602482015271115490cc8c0e8818d85b1b0819985a5b195960721b60448201526064016102af565b8051156105f957808060200190518101906107de9190610bdc565b6105f95760405162461bcd60e51b815260206004820181905260248201527f45524332303a206f7065726174696f6e20646964206e6f74207375636365656460448201526064016102af565b6001600160a01b038116811461021357600080fd5b60006020828403121561085157600080fd5b813561085c8161082a565b9392505050565b634e487b7160e01b600052604160045260246000fd5b60006020828403121561088b57600080fd5b813567ffffffffffffffff808211156108a357600080fd5b818401915084601f8301126108b757600080fd5b8135818111156108c9576108c9610863565b604051601f8201601f19908116603f011681019083821181831017156108f1576108f1610863565b8160405282815287602084870101111561090a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b60006020828403121561093c57600080fd5b5035919050565b60008083601f84011261095557600080fd5b50813567ffffffffffffffff81111561096d57600080fd5b60208301915083602082850101111561098557600080fd5b9250929050565b600080600080606085870312156109a257600080fd5b8435935060208501356109b48161082a565b9250604085013567ffffffffffffffff8111156109d057600080fd5b6109dc87828801610943565b95989497509550505050565b60005b83811015610a035781810151838201526020016109eb565b838111156102495750506000910152565b6020815260008251806020840152610a338160408501602087016109e8565b601f01601f19169190910160400192915050565b60008060408385031215610a5a57600080fd5b823591506020830135610a6c8161082a565b809150509250929050565b600080600060408486031215610a8c57600080fd5b83359250602084013567ffffffffffffffff811115610aaa57600080fd5b610ab686828701610943565b9497909650939450505050565b600080600060608486031215610ad857600080fd5b8351610ae38161082a565b6020850151909350610af48161082a565b80925050604084015190509250925092565b60208082526028908201527f70726f766964656420746f6b656e41646472657373206973206e6f74207768696040820152671d195b1a5cdd195960c21b606082015260800190565b60008060408385031215610b6157600080fd5b50508035926020909101359150565b60008219821115610b9157634e487b7160e01b600052601160045260246000fd5b500190565b60008085851115610ba657600080fd5b83861115610bb357600080fd5b5050820193919092039150565b60008251610bd28184602087016109e8565b9190910192915050565b600060208284031215610bee57600080fd5b8151801515811461085c57600080fdfea26469706673582212207127c2d6160b800d72316b887b052cc885f862d04d69c3537063f51baaa92db364736f6c634300080b0033";
